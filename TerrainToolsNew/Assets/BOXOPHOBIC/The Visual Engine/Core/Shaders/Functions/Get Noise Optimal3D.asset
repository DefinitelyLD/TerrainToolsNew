%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: Get Noise Optimal3D
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.8.1\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19801\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;5;-640,0;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;6;-1024,0;Inherit;False;Position;3;0;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;7;-1024,128;Inherit;False;Tilling;1;1;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;8;-832,128;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2;-384,-256;Inherit;False;return
    x - floor(x * 0.00346020761) * 289.0@;4;Create;1;True;x;FLOAT4;0,0,0,0;In;;Inherit;False;mod289;False;True;0;;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.CustomExpressionNode;3;-384,-128;Inherit;False;   
    return mod289((x * 34.0 + 1.0) * x)@;4;Create;1;True;x;FLOAT4;0,0,0,0;In;;Inherit;False;perm;False;True;1;2;;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1;-384,0;Inherit;False;   
    // Compute integer and fractional parts.$    float3 i = floor(p)@$    float3
    f = p - i@$    // Cubic interpolation (smoothstep)$    f = f * f * (3.0 - 2.0
    * f)@$$    // Build 4-component vectors using swizzling.$    // a = (i.x, i.x+1,
    i.y, i.y+1)$    float4 a = float4(i.x, i.x, i.y, i.y) + float4(0.0, 1.0, 0.0,
    1.0)@$$    // Permutations along the x and y axes.$    float4 k1 = perm(a.xyxy)@$   
    float4 k2 = perm(k1.xyxy + a.zzww)@$$    // Incorporate the z component.$   
    float4 c  = k2 + float4(i.z, i.z, i.z, i.z)@$    float4 k3 = perm(c)@$    float4
    k4 = perm(c + 1.0)@$$    // Map results to the [0,1] range.$    float4 o1 = frac(k3
    * 0.0243902439)@$    float4 o2 = frac(k4 * 0.0243902439)@$$    // Interpolate
    along z, then x, then y.$    float4 o3 = lerp(o1, o2, f.z)@           // f.z
    blends between layers.$    float2 o4 = lerp(o3.xz, o3.yw, f.x)@       // f.x
    blends between pairs.$    return lerp(o4.x, o4.y, f.y)@ ;1;Create;1;True;p;FLOAT3;0,0,0;In;;Inherit;False;SimpleNoise3D;False;True;1;3;;False;1;0;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;9;-1024,192;Half;False;Constant;_Float1;Float
    1;1;0;Create;True;0;0;0;False;0;False;0.2;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;0,0;Inherit;False;True;-1;;0;False;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;5;0;6;0\nWireConnection;5;1;8;0\nWireConnection;8;0;7;0\nWireConnection;8;1;9;0\nWireConnection;1;0;5;0\nWireConnection;0;0;1;0\nASEEND*/\n//CHKSM=3C6B38B53987B40997E230943920316C5DD6C2DF"
  m_functionName: 
  m_description: 
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 1, g: 0.627451, b: 0, a: 1}
  m_customNodeCategory: The Visual Engine
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
