// Made with Amplify Shader Editor v1.9.8.2
// Available at the Unity Asset Store - http://u3d.as/y3X 
Shader "BOXOPHOBIC/The Visual Engine/Landscape/Terrain Simple Lit"
{
	Properties
	{
		[HideInInspector] _SpecColor( "Specular Color", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _IsVersion( "_IsVersion", Float ) = 2070
		[HideInInspector] _IsTVEShader( "_IsTVEShader", Float ) = 1
		[HideInInspector] _IsShared( "_IsShared", Float ) = 0
		[HideInInspector] _IsIdentifier( "_IsIdentifier", Float ) = 0
		[HideInInspector] _IsCollected( "_IsCollected", Float ) = 0
		[HideInInspector] _IsConverted( "_IsConverted", Float ) = 0
		[HideInInspector] _IsCustomShader( "_IsCustomShader", Float ) = 0
		[StyledCategory(Render Settings, true, 0, 10)] _RenderCategory( "[ Render Category ]", Float ) = 1
		[Enum(Off,0,On,1)] _RenderSSR( "Render SSR", Float ) = 0
		[Enum(Off,0,On,1)] _RenderDecals( "Render Decals", Float ) = 0
		[Enum(Off,0,On,1)] _RenderSpecular( "Render Specular", Float ) = 1
		[Enum(Off,0,On,1)] _RenderShadow( "Render Shadows", Float ) = 1
		[Enum(Default,0,Point ,1,Low,2,Medium,3,High,4)] _RenderFilter( "Render Filtering", Float ) = 0
		[Enum(Off,0,On,1)] _RenderClip( "Render Clipping", Float ) = 0
		[StyledSpace(10)] _RenderEnd( "[ Render End ]", Float ) = 1
		[HideInInspector] _NoiseTex3D( "Noise Mask 3D", 3D ) = "white" {}
		[StyledCategory(Global Settings, true, 0, 10)] _GlobalCategory( "[ Global Category ]", Float ) = 1
		[StyledEnum(Paint Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)] _GlobalPaintLayerValue( "Global Paint Layer", Float ) = 0
		[StyledEnum(Atmo Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)] _GlobalAtmoLayerValue( "Global Atmo Layer", Float ) = 0
		[StyledEnum(Fade Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)] _GlobalFadeLayerValue( "Global Fade Layer", Float ) = 0
		[StyledEnum(Glow Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)] _GlobalGlowLayerValue( "Global Glow Layer", Float ) = 0
		[StyledEnum(Form Layers, Default 0 Layer_1 1 Layer_2 2 Layer_3 3 Layer_4 4 Layer_5 5 Layer_6 6 Layer_7 7 Layer_8 8, 0, 0)] _GlobalFormLayerValue( "Global Form Layer", Float ) = 0
		[StyledSpace(10)] _GlobalEnd( "[ Global End ]", Float ) = 1
		[StyledCategory(Terrain Settings, true, 0, 10)] _CategoryTerrain( "[Category Terrain ]", Float ) = 1
		[HideInInspector] _TerrainSize( "Terrain Size", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainPosition( "Terrain Position", Vector ) = ( 0, 0, 0, 0 )
		[Enum(4 Layers,4,8 Layers,8,12 Layers,12,16 Layers,16)] _TerrainLayersMode( "Terrain Layers", Float ) = 4
		[Enum(Default,0,Packed,1)] _TerrainTextureMode( "Terrain Maps", Float ) = 0
		[HDR] _TerrainColor( "Terrain Color", Color ) = ( 1, 1, 1, 1 )
		_TerrainNormalValue( "Terrain Normal", Range( -8, 8 ) ) = 1
		_TerrainMetallicValue( "Terrain Metallic", Range( 0, 1 ) ) = 1
		_TerrainOcclusionValue( "Terrain Occlusion", Range( 0, 1 ) ) = 1
		_TerrainSmoothnessValue( "Terrain Smoothness", Range( 0, 1 ) ) = 1
		_TerrainHeightBlendValue( "Terrain Height Blend", Range( 0, 1 ) ) = 1
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)][Space(10)] _TerrainSampleMode1( "Terrain 01 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode2( "Terrain 02 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode3( "Terrain 03 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode4( "Terrain 04 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode5( "Terrain 05 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode6( "Terrain 06 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode7( "Terrain 07 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode8( "Terrain 08 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode9( "Terrain 09 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode10( "Terrain 10 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode11( "Terrain 11 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode12( "Terrain 12 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode13( "Terrain 13 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode14( "Terrain 14 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode15( "Terrain 15 Sampling", Float ) = 0
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochasitc Triplanar,3)] _TerrainSampleMode16( "Terrain 16 Sampling", Float ) = 0
		[HideInInspector] _TerrainHolesTex( "Terrain Holes", 2D ) = "white" {}
		[HideInInspector] _TerrainControlTex1( "Terrain Control 01", 2D ) = "black" {}
		[HideInInspector] _TerrainControlTex2( "Terrain Control 02", 2D ) = "black" {}
		[HideInInspector] _TerrainControlTex3( "Terrain Control 03", 2D ) = "black" {}
		[HideInInspector] _TerrainControlTex4( "Terrain Control 04", 2D ) = "black" {}
		[HideInInspector] _TerrainColor1( "Terrain Color 01", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor2( "Terrain Color 02", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor3( "Terrain Color 03", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor4( "Terrain Color 04", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor5( "Terrain Color 05", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor6( "Terrain Color 06", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor7( "Terrain Color 07", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor8( "Terrain Color 08", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor9( "Terrain Color 09", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor10( "Terrain Color 10", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor11( "Terrain Color 11", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor12( "Terrain Color 12", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor13( "Terrain Color 13", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor14( "Terrain Color 14", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor15( "Terrain Color 15", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainColor16( "Terrain Color 16", Color ) = ( 1, 1, 1, 1 )
		[HideInInspector] _TerrainAlbedoTex1( "Terrain Albedo 01", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex2( "Terrain Albedo 02", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex3( "Terrain Albedo 03", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex4( "Terrain Albedo 04", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex5( "Terrain Albedo 05", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex6( "Terrain Albedo 06", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex7( "Terrain Albedo 07", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex8( "Terrain Albedo 08", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex9( "Terrain Albedo 09", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex10( "Terrain Albedo 10", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex11( "Terrain Albedo 11", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex12( "Terrain Albedo 12", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex13( "Terrain Albedo 13", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex14( "Terrain Albedo 14", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex15( "Terrain Albedo 15", 2D ) = "white" {}
		[HideInInspector] _TerrainAlbedoTex16( "Terrain Albedo 16", 2D ) = "white" {}
		[HideInInspector] _TerrainNormalTex1( "Terrain Normal 01", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex2( "Terrain Normal 02", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex3( "Terrain Normal 03", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex4( "Terrain Normal 04", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex5( "Terrain Normal 05", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex6( "Terrain Normal 06", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex7( "Terrain Normal 07", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex8( "Terrain Normal 08", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex13( "Terrain Normal 13", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex9( "Terrain Normal 09", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex10( "Terrain Normal 10", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex11( "Terrain Normal 11", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex12( "Terrain Normal 12", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex14( "Terrain Normal 14", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex15( "Terrain Normal 15", 2D ) = "gray" {}
		[HideInInspector] _TerrainNormalTex16( "Terrain Normal 16", 2D ) = "gray" {}
		[HideInInspector] _TerrainShaderTex1( "Terrain Shader 01", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex2( "Terrain Shader 02", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex3( "Terrain Shader 03", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex4( "Terrain Shader 04", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex5( "Terrain Shader 05", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex6( "Terrain Shader 06", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex7( "Terrain Shader 07", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex8( "Terrain Shader 08", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex9( "Terrain Shader 09", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex10( "Terrain Shader 10", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex11( "Terrain Shader 11", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex12( "Terrain Shader 12", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex13( "Terrain Shader 13", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex14( "Terrain Shader 14", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex15( "Terrain Shader 15", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderTex16( "Terrain Shader 16", 2D ) = "white" {}
		[HideInInspector] _TerrainShaderMin1( "Shader Min 01", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp1( "Shader Rcp 01", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin2( "Shader Min 02", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp2( "Shader Rcp 02", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin3( "Shader Min 03", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp3( "Shader Rcp 03", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin4( "Shader Min 04", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp4( "Shader Rcp 04", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin5( "Shader Min 05", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp5( "Shader Rcp 05", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin6( "Shader Min 06", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp6( "Shader Rcp 06", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin7( "Shader Min 07", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp7( "Shader Rcp 07", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin8( "Shader Min 08", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp8( "Shader Rcp 08", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin9( "Shader Min 09", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp9( "Shader Rcp 09", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin10( "Shader Min 10", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp10( "Shader Rcp 10", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin11( "Shader Min 11", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp11( "Shader Rcp 11", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin12( "Shader Min 12", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp12( "Shader Rcp 12", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin13( "Shader Min 13", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp13( "Shader Rcp 13", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin14( "Shader Min 14", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp14( "Shader Rcp 14", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin15( "Shader Min 15", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp15( "Shader Rcp 15", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderMin16( "Shader Min 16", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainShaderRcp16( "Shader Rcp 16", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams1( "Terrain Params 01", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams2( "Terrain Params 02", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams3( "Terrain Params 03", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams4( "Terrain Params 04", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams5( "Terrain Params 05", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams6( "Terrain Params 06", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams7( "Terrain Params 07", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams8( "Terrain Params 08", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams9( "Terrain Params 09", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams10( "Terrain Params 10", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams11( "Terrain Params 11", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams12( "Terrain Params 12", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams13( "Terrain Params 13", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams14( "Terrain Params 14", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams15( "Terrain Params 15", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainParams16( "Terrain Params 16", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainCoord1( "Terrain Coords 01", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord2( "Terrain Coords 02", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord3( "Terrain Coords 03", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord5( "Terrain Coords 05", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord4( "Terrain Coords 04", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord6( "Terrain Coords 06", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord7( "Terrain Coords 07", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord8( "Terrain Coords 08", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord9( "Terrain Coords 09", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord10( "Terrain Coords 10", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord11( "Terrain Coords 11", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord12( "Terrain Coords 12", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord13( "Terrain Coords 13", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord14( "Terrain Coords 14", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord15( "Terrain Coords 15", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainCoord16( "Terrain Coords 16", Vector ) = ( 1, 1, 0, 0 )
		[HideInInspector] _TerrainSpecular1( "Terrain Specular 01", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular2( "Terrain Specular 02", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular3( "Terrain Specular 03", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular4( "Terrain Specular 04", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular5( "Terrain Specular 05", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular6( "Terrain Specular 06", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular7( "Terrain Specular 07", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular8( "Terrain Specular 08", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular9( "Terrain Specular 09", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular10( "Terrain Specular 10", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular11( "Terrain Specular 11", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular12( "Terrain Specular 12", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular13( "Terrain Specular 13", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular14( "Terrain Specular 14", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular15( "Terrain Specular 15", Color ) = ( 0, 0, 0, 0 )
		[HideInInspector] _TerrainSpecular16( "Terrain Specular 16", Color ) = ( 0, 0, 0, 0 )
		[StyledSpace(10)] _EndTerrain( "[End Terrain ]", Float ) = 1
		[StyledCategory(Tinting Settings, true, 0, 10)] _TintingCategory( "[ Tinting Category ]", Float ) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)] _TintingBakeInfo( "Tinting Baking Info", Float ) = 0
		_TintingIntensityValue( "Tinting Intensity", Range( 0, 1 ) ) = 0
		_TintingGrayValue( "Tinting Gray", Range( 0, 1 ) ) = 1
		[HDR][Gamma] _TintingColor( "Tinting Color", Color ) = ( 1, 1, 1, 1 )
		[StyledSpace(10)] _TintingSpace( "[ Tinting Space ]", Float ) = 1
		_TintingGlobalValue( "Tinting Paint Mask", Range( 0, 1 ) ) = 1
		_TintingMultiValue( "Tinting Multi Mask", Range( 0, 1 ) ) = 1
		_TintingLumaValue( "Tinting Luma Mask", Range( 0, 1 ) ) = 1
		[StyledRemapSlider] _TintingLumaRemap( "Tinting Luma Mask", Vector ) = ( 0, 1, 0, 0 )
		[StyledRemapSlider] _TintingBlendRemap( "Tinting Blend Mask", Vector ) = ( 0.1, 0.2, 0, 0 )
		[Space(10)][StyledToggle] _TintingElementMode( "Use Paint Elements", Float ) = 0
		[StyledSpace(10)] _TintingEnd( "[ Tinting End]", Float ) = 1
		[StyledCategory(Dryness Settings, true, 0, 10)] _DrynessCategory( "[ Dryness Category ]", Float ) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)] _DrynessBakeInfo( "Dryness Baking Info", Float ) = 0
		_DrynessIntensityValue( "Dryness Intensity", Range( 0, 1 ) ) = 0
		_DrynessGrayValue( "Dryness Gray", Range( 0, 1 ) ) = 1
		[HDR][Gamma] _DrynessColor( "Dryness Color", Color ) = ( 1, 0.7083712, 0.495283, 1 )
		_DrynessSubsurfaceValue( "Dryness Subsurface", Range( 0, 1 ) ) = 0.5
		_DrynessSmoothnessValue( "Dryness Smoothness", Range( 0, 1 ) ) = 0.5
		[StyledSpace(10)] _DrynessSpace( "[ Dryness Space ]", Float ) = 1
		_DrynessGlobalValue( "Dryness Atmo Mask", Range( 0, 1 ) ) = 1
		_DrynessMultiValue( "Dryness Multi Mask", Range( 0, 1 ) ) = 1
		_DrynessLumaValue( "Dryness Luma Mask", Range( 0, 1 ) ) = 1
		[StyledRemapSlider] _DrynessLumaRemap( "Dryness Luma Mask", Vector ) = ( 0, 1, 0, 0 )
		[StyledRemapSlider] _DrynessBlendRemap( "Dryness Blend Mask", Vector ) = ( 0.1, 0.2, 0, 0 )
		[Space(10)][StyledToggle] _DrynessElementMode( "Use Atmo Elements", Float ) = 0
		[StyledSpace(10)] _DrynessEnd( "[ Dryness End ]", Float ) = 1
		[StyledCategory(Overlay Settings, true, 0, 10)] _OverlayCategory( "[ Overlay Category ]", Float ) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)] _OverlayBakeInfo( "Overlay Baking Info", Float ) = 0
		_OverlayIntensityValue( "Overlay Intensity", Range( 0, 1 ) ) = 0
		[Enum(Off,0,On,1)] _OverlayTextureMode( "Overlay Maps", Float ) = 0
		[Space(10)][StyledTextureSingleLine] _OverlayAlbedoTex( "Overlay Albedo", 2D ) = "white" {}
		[StyledTextureSingleLine] _OverlayNormalTex( "Overlay Normal", 2D ) = "bump" {}
		[Enum(Planar,0,Triplanar,1,Stochastic,2,Stochastic Triplanar,3)][Space(10)] _OverlaySampleMode( "Overlay Sampling", Float ) = 0
		[Enum(Tilling And Offset,0,Scale And Offset,1)] _OverlayCoordMode( "Overlay UV Mode", Float ) = 0
		[StyledVector(9)] _OverlayCoordValue( "Overlay UV Value", Vector ) = ( 1, 1, 0, 0 )
		[HDR] _OverlayColor( "Overlay Color", Color ) = ( 0.2815503, 0.4009458, 0.5377358, 1 )
		_OverlayNormalValue( "Overlay Normal", Range( -8, 8 ) ) = 1
		_OverlaySubsurfaceValue( "Overlay Subsurface", Range( 0, 1 ) ) = 0.5
		_OverlaySmoothnessValue( "Overlay Smoothness", Range( 0, 1 ) ) = 0.5
		[Space(10)][StyledTextureSingleLine] _OverlayGlitterTexRT( "Overlay Glitter RT", 2D ) = "black" {}
		[Space(10)] _OverlayGlitterIntensityValue( "Overlay Glitter Intensity", Range( 0, 1 ) ) = 0
		[HDR] _OverlayGlitterColor( "Overlay Glitter Color", Color ) = ( 0.7215686, 1.913725, 2.996078, 1 )
		_OverlayGlitterTillingValue( "Overlay Glitter Tilling", Range( 0, 8 ) ) = 4
		_OverlayGlitterDistValue( "Overlay Glitter Limit", Range( 0, 200 ) ) = 100
		[StyledSpace(10)] _OverlaySpace( "[ Overlay Space ]", Float ) = 1
		_OverlayGlobalValue( "Overlay Atmo Mask", Range( 0, 1 ) ) = 1
		_OverlayLumaValue( "Overlay Luma Mask", Range( 0, 1 ) ) = 1
		[StyledRemapSlider] _OverlayLumaRemap( "Overlay Luma Mask", Vector ) = ( 0, 1, 0, 0 )
		_OverlayProjValue( "Overlay ProjY Mask", Range( 0, 1 ) ) = 0.5
		[StyledRemapSlider] _OverlayProjRemap( "Overlay ProjY Mask", Vector ) = ( 0, 1, 0, 0 )
		[StyledRemapSlider] _OverlayBlendRemap( "Overlay Blend Mask", Vector ) = ( 0.1, 0.2, 0, 0 )
		[Space(10)][StyledToggle] _OverlayElementMode( "Use Atmo Elements", Float ) = 0
		[HideInInspector] _overlay_coord_value( "_overlay_coord_value", Vector ) = ( 1, 1, 0, 0 )
		[StyledSpace(10)] _OverlayEnd( "[ Overlay End ]", Float ) = 1
		[StyledCategory(Wetness Settings, true, 0, 10)] _WetnessCategory( "[ Wetness Category ]", Float ) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)] _WetnessBakeInfo( "Wetness Baking Info", Float ) = 0
		_WetnessIntensityValue( "Wetness Intensity", Range( 0, 1 ) ) = 0
		_WetnessContrastValue( "Wetness Contrast", Range( 0, 1 ) ) = 0.2
		_WetnessSmoothnessValue( "Wetness Smoothness", Range( 0, 1 ) ) = 0.8
		[Space(10)] _WetnessGlobalValue( "Wetness Atmo Mask", Range( 0, 1 ) ) = 1
		[Space(10)] _WetnessWaterIntensityValue( "Wetness Water Intensity", Range( 0, 1 ) ) = 0
		[HDR] _WetnessWaterColor( "Wetness Water Color", Color ) = ( 0.5420078, 0.7924528, 0.6068289, 1 )
		_WetnessWaterBaseValue( "Wetness Water Base Mask", Range( 0, 1 ) ) = 1
		[StyledRemapSlider] _WetnessWaterBlendRemap( "Wetness Water Blend Mask", Vector ) = ( 0.1, 0.2, 0, 0 )
		[Space(10)][StyledTextureSingleLine] _WetnessDropsTexRT( "Wetness Drops RT", 2D ) = "white" {}
		[Space(10)] _WetnessDropsIntensityValue( "Wetness Drops Intensity", Range( 0, 1 ) ) = 1
		_WetnessDropsNormalValue( "Wetness Drops Normal", Range( -8, 8 ) ) = 1
		_WetnessDropsTillingValue( "Wetness Drops Tilling", Range( 0, 8 ) ) = 0.25
		_WetnessDropsDistValue( "Wetness Drops Limit", Range( 0, 200 ) ) = 50
		[Space(10)][StyledToggle] _WetnessElementMode( "Use Atmo Elements", Float ) = 0
		[StyledSpace(10)] _WetnessEnd( "[ Wetness End ]", Float ) = 1
		[StyledCategory(Cutout Settings, true, 0, 10)] _CutoutCategory( "[ Cutout Category ]", Float ) = 1
		[StyledMessage(Info, The current settings are pre baked to the impostor., 0, 10)] _CutoutBakeInfo( "Cutout Baking Info", Float ) = 0
		_CutoutIntensityValue( "Cutout Intensity", Range( 0, 1 ) ) = 0
		[StyledSpace(10)] _CutoutSpace( "[ Cutout Space ]", Float ) = 1
		_CutoutGlobalValue( "Cutout Fade Mask", Range( 0, 1 ) ) = 1
		[Space(10)][StyledToggle] _CutoutElementMode( "Use Fade Elements", Float ) = 0
		[StyledSpace(10)] _CutoutEnd( "[ Cutout End ]", Float ) = 1
		[StyledCategory(Emissive Settings, true, 0, 10)] _EmissiveCategory( "[ Emissive Category ]", Float ) = 1
		_EmissiveIntensityValue( "Emissive Intensity", Range( 0, 1 ) ) = 0
		[Enum(None,0,Any,1,Baked,2,Realtime,3)] _EmissiveFlagMode( "Emissive GI Mode", Float ) = 0
		[Enum(Constant,0,Multiply With Base Albedo,1)] _EmissiveColorMode( "Emissive Color", Float ) = 0
		[HDR] _EmissiveColor( "Emissive Color", Color ) = ( 1, 1, 1, 1 )
		[Enum(Nits,0,EV100,1)] _EmissivePowerMode( "Emissive Value", Float ) = 0
		_EmissivePowerValue( "Emissive Value", Float ) = 1
		[Space(10)] _EmissiveGlobalValue( "Emissive Glow Mask", Range( 0, 1 ) ) = 1
		[Space(10)][StyledToggle] _EmissiveElementMode( "Use Glow Elements", Float ) = 0
		[StyledSpace(10)] _EmissiveEnd( "[ Emissive End ]", Float ) = 1
		[HideInInspector] _emissive_power_value( "_emissive_power_value", Float ) = 1
		[StyledCategory(Conform Settings, true, 0, 10)] _ConformCategory( "[ Conform Category ]", Float ) = 1
		[StyledMessage(Info, The Conform feature require elements to work. Use Form Surface or Form Height elements to modify the terrain height. Please note__ the height effect is only visual and it does not affect the terrain collision height., 0, 10)] _ConformInfo( "# Conform Info", Float ) = 0
		_ConformHeightValue( "Conform Height", Range( 0, 1 ) ) = 0
		[Enum(Additive,0,Replace,1)] _ConformHeightMode( "Conform Height Mode", Float ) = 1
		[StyledSpace(10)] _ConformEnd( "[ Conform End ]", Float ) = 1
		[HideInInspector] _object_phase_mode( "_object_phase_mode", Vector ) = ( 0, 0, 0, 0 )
		[HideInInspector] _IsTerrainShader( "_IsTerrainShader", Float ) = 1
		[HideInInspector] _IsSimpleShader( "_IsSimpleShader", Float ) = 1

		//_TransmissionShadow( "Transmission Shadow", Range( 0, 1 ) ) = 0.5
		//_TransStrength( "Trans Strength", Range( 0, 50 ) ) = 1
		//_TransNormal( "Trans Normal Distortion", Range( 0, 1 ) ) = 0.5
		//_TransScattering( "Trans Scattering", Range( 1, 50 ) ) = 2
		//_TransDirect( "Trans Direct", Range( 0, 1 ) ) = 0.9
		//_TransAmbient( "Trans Ambient", Range( 0, 1 ) ) = 0.1
		//_TransShadow( "Trans Shadow", Range( 0, 1 ) ) = 0.5
		//_TessPhongStrength( "Tess Phong Strength", Range( 0, 1 ) ) = 0.5
		//_TessValue( "Tess Max Tessellation", Range( 1, 32 ) ) = 16
		//_TessMin( "Tess Min Distance", Float ) = 10
		//_TessMax( "Tess Max Distance", Float ) = 25
		//_TessEdgeLength ( "Tess Edge length", Range( 2, 50 ) ) = 16
		//_TessMaxDisp( "Tess Max Displacement", Float ) = 25
		//[ToggleOff] _SpecularHighlights("Specular Highlights", Float) = 1.0
		//[ToggleOff] _GlossyReflections("Reflections", Float) = 1.0
	}

	SubShader
	{
		

		Tags { "RenderType"="Opaque" "Queue"="Geometry" "DisableBatching"="True" "TerrainCompatible"="True" }
	LOD 0

		Cull Back
		AlphaToMask Off
		ZWrite On
		ZTest LEqual
		ColorMask RGBA

		

		Blend Off
		

		CGINCLUDE
			#pragma target 4.5

			float4 FixedTess( float tessValue )
			{
				return tessValue;
			}

			float CalcDistanceTessFactor (float4 vertex, float minDist, float maxDist, float tess, float4x4 o2w, float3 cameraPos )
			{
				float3 wpos = mul(o2w,vertex).xyz;
				float dist = distance (wpos, cameraPos);
				float f = clamp(1.0 - (dist - minDist) / (maxDist - minDist), 0.01, 1.0) * tess;
				return f;
			}

			float4 CalcTriEdgeTessFactors (float3 triVertexFactors)
			{
				float4 tess;
				tess.x = 0.5 * (triVertexFactors.y + triVertexFactors.z);
				tess.y = 0.5 * (triVertexFactors.x + triVertexFactors.z);
				tess.z = 0.5 * (triVertexFactors.x + triVertexFactors.y);
				tess.w = (triVertexFactors.x + triVertexFactors.y + triVertexFactors.z) / 3.0f;
				return tess;
			}

			float CalcEdgeTessFactor (float3 wpos0, float3 wpos1, float edgeLen, float3 cameraPos, float4 scParams )
			{
				float dist = distance (0.5 * (wpos0+wpos1), cameraPos);
				float len = distance(wpos0, wpos1);
				float f = max(len * scParams.y / (edgeLen * dist), 1.0);
				return f;
			}

			float DistanceFromPlane (float3 pos, float4 plane)
			{
				float d = dot (float4(pos,1.0f), plane);
				return d;
			}

			bool WorldViewFrustumCull (float3 wpos0, float3 wpos1, float3 wpos2, float cullEps, float4 planes[6] )
			{
				float4 planeTest;
				planeTest.x = (( DistanceFromPlane(wpos0, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos1, planes[0]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos2, planes[0]) > -cullEps) ? 1.0f : 0.0f );
				planeTest.y = (( DistanceFromPlane(wpos0, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos1, planes[1]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos2, planes[1]) > -cullEps) ? 1.0f : 0.0f );
				planeTest.z = (( DistanceFromPlane(wpos0, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos1, planes[2]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos2, planes[2]) > -cullEps) ? 1.0f : 0.0f );
				planeTest.w = (( DistanceFromPlane(wpos0, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos1, planes[3]) > -cullEps) ? 1.0f : 0.0f ) +
							  (( DistanceFromPlane(wpos2, planes[3]) > -cullEps) ? 1.0f : 0.0f );
				return !all (planeTest);
			}

			float4 DistanceBasedTess( float4 v0, float4 v1, float4 v2, float tess, float minDist, float maxDist, float4x4 o2w, float3 cameraPos )
			{
				float3 f;
				f.x = CalcDistanceTessFactor (v0,minDist,maxDist,tess,o2w,cameraPos);
				f.y = CalcDistanceTessFactor (v1,minDist,maxDist,tess,o2w,cameraPos);
				f.z = CalcDistanceTessFactor (v2,minDist,maxDist,tess,o2w,cameraPos);

				return CalcTriEdgeTessFactors (f);
			}

			float4 EdgeLengthBasedTess( float4 v0, float4 v1, float4 v2, float edgeLength, float4x4 o2w, float3 cameraPos, float4 scParams )
			{
				float3 pos0 = mul(o2w,v0).xyz;
				float3 pos1 = mul(o2w,v1).xyz;
				float3 pos2 = mul(o2w,v2).xyz;
				float4 tess;
				tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
				tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
				tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
				tess.w = (tess.x + tess.y + tess.z) / 3.0f;
				return tess;
			}

			float4 EdgeLengthBasedTessCull( float4 v0, float4 v1, float4 v2, float edgeLength, float maxDisplacement, float4x4 o2w, float3 cameraPos, float4 scParams, float4 planes[6] )
			{
				float3 pos0 = mul(o2w,v0).xyz;
				float3 pos1 = mul(o2w,v1).xyz;
				float3 pos2 = mul(o2w,v2).xyz;
				float4 tess;

				if (WorldViewFrustumCull(pos0, pos1, pos2, maxDisplacement, planes))
				{
					tess = 0.0f;
				}
				else
				{
					tess.x = CalcEdgeTessFactor (pos1, pos2, edgeLength, cameraPos, scParams);
					tess.y = CalcEdgeTessFactor (pos2, pos0, edgeLength, cameraPos, scParams);
					tess.z = CalcEdgeTessFactor (pos0, pos1, edgeLength, cameraPos, scParams);
					tess.w = (tess.x + tess.y + tess.z) / 3.0f;
				}
				return tess;
			}
		ENDCG

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ForwardBase"
			Tags { "LightMode"="ForwardBase" }

			Blend One Zero

			CGPROGRAM
				#define ASE_FRAGMENT_NORMAL 0
				#define ASE_NEEDS_FRAG_SHADOWCOORDS
				#pragma shader_feature_local_fragment _SPECULARHIGHLIGHTS_OFF
				#pragma multi_compile __ LOD_FADE_CROSSFADE
				#pragma multi_compile_fog
				#define ASE_ABSOLUTE_VERTEX_POS 1
				#define ASE_TERRAIN 1
				#define _SPECULAR_SETUP 1
				#define ASE_LIGHTING_SIMPLE 1
				#define _ENVIRONMENTREFLECTIONS_OFF 1
				#define ASE_VERSION 19802
				#define ASE_USING_SAMPLING_MACROS 1

				#pragma vertex vert
				#pragma fragment frag
				#pragma multi_compile_fwdbase
				#ifndef UNITY_PASS_FORWARDBASE
					#define UNITY_PASS_FORWARDBASE
				#endif
				#include "HLSLSupport.cginc"
				#ifdef ASE_GEOMETRY
					#ifndef UNITY_INSTANCED_LOD_FADE
						#define UNITY_INSTANCED_LOD_FADE
					#endif
					#ifndef UNITY_INSTANCED_SH
						#define UNITY_INSTANCED_SH
					#endif
					#ifndef UNITY_INSTANCED_LIGHTMAPSTS
						#define UNITY_INSTANCED_LIGHTMAPSTS
					#endif
				#endif
				#include "UnityShaderVariables.cginc"
				#include "UnityCG.cginc"
				#include "Lighting.cginc"
				#include "UnityPBSLighting.cginc"
				#include "AutoLight.cginc"

				#define ASE_NEEDS_VERT_POSITION
				#define ASE_NEEDS_VERT_NORMAL
				#define ASE_NEEDS_VERT_TANGENT
				#define ASE_NEEDS_WORLD_POSITION
				#define ASE_NEEDS_FRAG_WORLD_POSITION
				#define ASE_NEEDS_WORLD_NORMAL
				#define ASE_NEEDS_FRAG_WORLD_NORMAL
				#define ASE_NEEDS_WORLD_TANGENT
				#define ASE_NEEDS_FRAG_WORLD_TANGENT
				#define ASE_NEEDS_WORLD_BITANGENT
				#define ASE_NEEDS_FRAG_WORLD_BITANGENT
				#define ASE_NEEDS_TEXTURE_COORDINATES0
				#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
				#pragma shader_feature_local_vertex TVE_CONFORM
				#pragma shader_feature_local_fragment TVE_WETNESS
				#pragma shader_feature_local_fragment TVE_OVERLAY
				#pragma shader_feature_local_fragment TVE_DRYNESS
				#pragma shader_feature_local_fragment TVE_TINTING
				#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
				#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
				#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
				#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
				#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
				#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
				#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_WATER
				#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
				#pragma shader_feature_local_fragment TVE_EMISSIVE
				#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
				#pragma shader_feature_local_fragment TVE_CUTOUT
				#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
				#pragma multi_compile_instancing
				#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
				  
				struct TVEVisualData
				{  
					half Dummy;  
					half3 Albedo;
					half3 AlbedoRaw;
					half2 NormalTS;
					half3 NormalWS; 
					half4 Shader;
					half4 Emissive;
					half AlphaClip;
					half AlphaFade;
					half MultiMask;
					half Grayscale;
					half Luminosity;
					half3 Translucency;
					half Transmission;
					half Thickness;
					float Diffusion;
					float Depth;
				};  
				    
				struct TVEModelData
				{    
					half Dummy;    
					half3 PositionOS;
					half3 PositionWS;
					half3 PositionWO;
					half3 PositionRawOS;
					half3 PositionAddOS;
					half3 PivotOS;
					half3 PivotWS;
					half3 PivotWO;
					half3 NormalOS;
					half3 NormalWS;
					half3 NormalRawOS;
					half3 NormalRawWS;
					half4 TangentOS;
					half3 ViewDirWS;
					half4 VertexData;
					half4 PhaseData;
					half4 BoundsData;
					half4 RotationData;
				};    
				      
				struct TVEGlobalData
				{      
					half Dummy;      
					half4 CoatDataRT;
					half4 PaintDataRT;
					half4 GlowDataRT;
					half4 AtmoDataRT;
					half4 FadeDataRT;
					half4 FormDataRT;
					half4 FlowDataRT;
				};      
				        
				struct TVEMasksData
				{        
					half4 Mask0;
					half4 Mask1;
					half4 Mask2;
					half4 Mask3;
				};        
				#define TVE_TERRAIN_SHADER
				//#pragma editor_sync_compilation
				#ifndef ASE_NEEDS_TEXTURE_COORDINATES2 //Needed for ASE 1.9.8.1
					#define ASE_NEEDS_TEXTURE_COORDINATES2
				#endif
				#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#else//ASE Sampling Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
				#endif//ASE Sampling Macros
				


				struct appdata
				{
					float4 vertex : POSITION;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;
					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct v2f
				{
					UNITY_POSITION( pos );
					UNITY_LIGHTING_COORDS( 0, 1 )
					UNITY_FOG_COORDS( 2 )
					float4 worldNormal : TEXCOORD3;
					float4 worldTangent : TEXCOORD4;
					float4 worldBitangent : TEXCOORD5;
					half4 ambientOrLightmapUV : TEXCOORD6;
					#if defined( ASE_NEEDS_FRAG_SCREEN_POSITION )
						float4 screenPos : TEXCOORD7;
					#endif
					float4 ase_texcoord8 : TEXCOORD8;
					float4 ase_color : COLOR;
					float4 ase_texcoord9 : TEXCOORD9;
					UNITY_VERTEX_INPUT_INSTANCE_ID
					UNITY_VERTEX_OUTPUT_STEREO
				};

				#ifdef ASE_TRANSMISSION
					float _TransmissionShadow;
				#endif
				#ifdef ASE_TRANSLUCENCY
					float _TransStrength;
					float _TransNormal;
					float _TransScattering;
					float _TransDirect;
					float _TransAmbient;
					float _TransShadow;
				#endif
				#ifdef ASE_TESSELLATION
					float _TessPhongStrength;
					float _TessValue;
					float _TessMin;
					float _TessMax;
					float _TessEdgeLength;
					float _TessMaxDisp;
				#endif

				uniform half _TerrainLayersMode;
				uniform half _TerrainSampleMode1;
				uniform half _TerrainSampleMode2;
				uniform half _TerrainSampleMode3;
				uniform half _TerrainSampleMode4;
				uniform half _TerrainSampleMode5;
				uniform half _TerrainSampleMode6;
				uniform half _TerrainSampleMode7;
				uniform half _TerrainSampleMode8;
				uniform half _TerrainSampleMode9;
				uniform half _TerrainSampleMode10;
				uniform half _TerrainSampleMode11;
				uniform half _TerrainSampleMode12;
				uniform half _TerrainSampleMode13;
				uniform half _TerrainSampleMode14;
				uniform half _TerrainSampleMode15;
				uniform half _TerrainSampleMode16;
				uniform half _TerrainTextureMode;
				uniform half _IsTerrainShader;
				uniform half _IsSimpleShader;
				uniform half _RenderCategory;
				uniform half _RenderEnd;
				uniform half _IsTVEShader;
				uniform half _IsCustomShader;
				uniform half _IsShared;
				uniform half _IsCollected;
				uniform half _IsConverted;
				uniform half _IsIdentifier;
				uniform half _RenderDecals;
				uniform half _RenderSSR;
				uniform half _RenderClip;
				uniform half _IsVersion;
				uniform half _RenderShadow;
				uniform half _RenderFilter;
				UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
				SamplerState sampler_NoiseTex3D;
				uniform half _ConformCategory;
				uniform half _ConformEnd;
				uniform half _ConformInfo;
				uniform float3 TVE_WorldOrigin;
				uniform half4 TVE_TimeParams;
				uniform half4 _object_phase_mode;
				uniform half _GlobalCategory;
				uniform half _GlobalEnd;
				uniform half4 TVE_CoatParams;
				uniform half _GlobalPaintLayerValue;
				uniform float TVE_PaintLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
				uniform half4 TVE_RenderBaseCoords;
				SamplerState sampler_Linear_Clamp;
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
				uniform half4 TVE_RenderNearCoords;
				SamplerState sampler_Linear_Repeat;
				uniform float4 TVE_RenderNearPositionR;
				uniform half TVE_RenderNearFadeValue;
				uniform half4 TVE_PaintParams;
				uniform half _GlobalGlowLayerValue;
				uniform float TVE_GlowLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
				uniform half4 TVE_GlowParams;
				uniform half _GlobalAtmoLayerValue;
				uniform float TVE_AtmoLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
				uniform half4 TVE_AtmoParams;
				uniform half _GlobalFadeLayerValue;
				uniform float TVE_FadeLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
				uniform half4 TVE_FadeParams;
				uniform half _GlobalFormLayerValue;
				uniform float TVE_FormLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
				uniform half4 TVE_FormParams;
				uniform half4 TVE_FlowParams;
				uniform half _ConformHeightMode;
				uniform half _ConformHeightValue;
				uniform half TVE_IsEnabled;
				uniform half _CutoutCategory;
				uniform half _CutoutEnd;
				uniform half _CutoutSpace;
				uniform half _CutoutBakeInfo;
				uniform half _EmissiveCategory;
				uniform half _EmissiveEnd;
				uniform half _EmissivePowerMode;
				uniform half _EmissivePowerValue;
				uniform half _EmissiveFlagMode;
				uniform half _WetnessCategory;
				uniform half _WetnessEnd;
				uniform half _WetnessBakeInfo;
				uniform half _OverlayCategory;
				uniform half _OverlayEnd;
				uniform half _OverlaySpace;
				uniform half _OverlayBakeInfo;
				uniform half _DrynessCategory;
				uniform half _DrynessEnd;
				uniform half _DrynessSpace;
				uniform half _DrynessBakeInfo;
				uniform half _TintingCategory;
				uniform half _TintingEnd;
				uniform half _TintingSpace;
				uniform half _TintingBakeInfo;
				uniform half _CategoryTerrain;
				uniform half _EndTerrain;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
				uniform half4 _TerrainPosition;
				uniform half4 _TerrainSize;
				float4 _TerrainControlTex1_TexelSize;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
				SamplerState sampler_Point_Repeat;
				SamplerState sampler_Linear_Repeat_Aniso8;
				uniform half4 _TerrainCoord1;
				uniform half4 _TerrainShaderMin1;
				uniform half4 _TerrainShaderRcp1;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
				uniform half4 _TerrainCoord2;
				uniform half4 _TerrainShaderMin2;
				uniform half4 _TerrainShaderRcp2;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
				uniform half4 _TerrainCoord3;
				uniform half4 _TerrainShaderMin3;
				uniform half4 _TerrainShaderRcp3;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
				uniform half4 _TerrainCoord4;
				uniform half4 _TerrainShaderMin4;
				uniform half4 _TerrainShaderRcp4;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
				uniform half4 _TerrainCoord5;
				uniform half4 _TerrainShaderMin5;
				uniform half4 _TerrainShaderRcp5;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
				uniform half4 _TerrainCoord6;
				uniform half4 _TerrainShaderMin6;
				uniform half4 _TerrainShaderRcp6;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
				uniform half4 _TerrainCoord7;
				uniform half4 _TerrainShaderMin7;
				uniform half4 _TerrainShaderRcp7;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
				uniform half4 _TerrainCoord8;
				uniform half4 _TerrainShaderMin8;
				uniform half4 _TerrainShaderRcp8;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
				uniform half4 _TerrainCoord9;
				uniform half4 _TerrainShaderMin9;
				uniform half4 _TerrainShaderRcp9;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
				uniform half4 _TerrainCoord10;
				uniform half4 _TerrainShaderMin10;
				uniform half4 _TerrainShaderRcp10;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
				uniform half4 _TerrainCoord11;
				uniform half4 _TerrainShaderMin11;
				uniform half4 _TerrainShaderRcp11;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
				uniform half4 _TerrainCoord12;
				uniform half4 _TerrainShaderMin12;
				uniform half4 _TerrainShaderRcp12;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
				uniform half4 _TerrainCoord13;
				uniform half4 _TerrainShaderMin13;
				uniform half4 _TerrainShaderRcp13;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
				uniform half4 _TerrainCoord14;
				uniform half4 _TerrainShaderMin14;
				uniform half4 _TerrainShaderRcp14;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
				uniform half4 _TerrainCoord15;
				uniform half4 _TerrainShaderMin15;
				uniform half4 _TerrainShaderRcp15;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
				uniform half4 _TerrainCoord16;
				uniform half4 _TerrainShaderMin16;
				uniform half4 _TerrainShaderRcp16;
				uniform half _TerrainHeightBlendValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
				uniform half4 _TerrainColor1;
				uniform half4 _TerrainColor2;
				uniform half4 _TerrainColor3;
				uniform half4 _TerrainColor4;
				uniform half4 _TerrainColor5;
				uniform half4 _TerrainColor6;
				uniform half4 _TerrainColor7;
				uniform half4 _TerrainColor8;
				uniform half4 _TerrainColor9;
				uniform half4 _TerrainColor10;
				uniform half4 _TerrainColor11;
				uniform half4 _TerrainColor12;
				uniform half4 _TerrainColor13;
				uniform half4 _TerrainColor14;
				uniform half4 _TerrainColor15;
				uniform half4 _TerrainColor16;
				uniform half4 _TerrainColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
				uniform half4 _TerrainParams1;
				uniform half4 _TerrainParams2;
				uniform half4 _TerrainParams3;
				uniform half4 _TerrainParams4;
				uniform half4 _TerrainParams5;
				uniform half4 _TerrainParams6;
				uniform half4 _TerrainParams7;
				uniform half4 _TerrainParams8;
				uniform half4 _TerrainParams9;
				uniform half4 _TerrainParams10;
				uniform half4 _TerrainParams11;
				uniform half4 _TerrainParams12;
				uniform half4 _TerrainParams13;
				uniform half4 _TerrainParams14;
				uniform half4 _TerrainParams15;
				uniform half4 _TerrainParams16;
				uniform half _TerrainNormalValue;
				uniform half _TerrainMetallicValue;
				uniform half _TerrainOcclusionValue;
				uniform half _TerrainSmoothnessValue;
				uniform half4 _TerrainSpecular1;
				uniform half4 _TerrainSpecular2;
				uniform half4 _TerrainSpecular3;
				uniform half4 _TerrainSpecular4;
				uniform half4 _TerrainSpecular5;
				uniform half4 _TerrainSpecular6;
				uniform half4 _TerrainSpecular7;
				uniform half4 _TerrainSpecular8;
				uniform half4 _TerrainSpecular9;
				uniform half4 _TerrainSpecular10;
				uniform half4 _TerrainSpecular11;
				uniform half4 _TerrainSpecular12;
				uniform half4 _TerrainSpecular13;
				uniform half4 _TerrainSpecular14;
				uniform half4 _TerrainSpecular15;
				uniform half4 _TerrainSpecular16;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
				uniform half _TintingElementMode;
				uniform half _TintingGlobalValue;
				uniform half _TintingGrayValue;
				uniform float4 _TintingColor;
				uniform half _TintingIntensityValue;
				uniform half _TintingMultiValue;
				uniform half4 _TintingLumaRemap;
				uniform half _TintingLumaValue;
				uniform half4 _TintingBlendRemap;
				uniform half _DrynessElementMode;
				uniform half _DrynessGlobalValue;
				uniform half _DrynessGrayValue;
				uniform float4 _DrynessColor;
				uniform half _DrynessIntensityValue;
				uniform half _DrynessMultiValue;
				uniform half4 _DrynessLumaRemap;
				uniform half _DrynessLumaValue;
				uniform half4 _DrynessBlendRemap;
				uniform half _DrynessSmoothnessValue;
				uniform half _DrynessSubsurfaceValue;
				uniform half4 _OverlayColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
				uniform half4 _overlay_coord_value;
				uniform half _OverlaySampleMode;
				uniform half _OverlayCoordMode;
				uniform half4 _OverlayCoordValue;
				uniform half _OverlayTextureMode;
				uniform half _OverlayGlitterIntensityValue;
				uniform half4 _OverlayGlitterColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
				uniform half _OverlayGlitterTillingValue;
				uniform half _OverlayGlitterDistValue;
				uniform half _OverlayIntensityValue;
				uniform half4 _OverlayProjRemap;
				uniform half _OverlayProjValue;
				uniform half4 _OverlayLumaRemap;
				uniform half _OverlayLumaValue;
				uniform half _OverlayElementMode;
				uniform half _OverlayGlobalValue;
				uniform half4 _OverlayBlendRemap;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
				uniform half _OverlayNormalValue;
				uniform half _OverlaySmoothnessValue;
				uniform half _OverlaySubsurfaceValue;
				uniform half4 _WetnessWaterColor;
				uniform half _WetnessWaterIntensityValue;
				uniform half _WetnessIntensityValue;
				uniform half _WetnessElementMode;
				uniform half _WetnessGlobalValue;
				uniform half _WetnessWaterBaseValue;
				uniform half4 _WetnessWaterBlendRemap;
				uniform half _WetnessContrastValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
				uniform half _WetnessDropsTillingValue;
				uniform half _WetnessDropsIntensityValue;
				uniform half _WetnessDropsNormalValue;
				uniform half _WetnessDropsDistValue;
				uniform half _WetnessSmoothnessValue;
				uniform half _EmissiveIntensityValue;
				uniform half4 _EmissiveColor;
				uniform half _EmissiveElementMode;
				uniform half _EmissiveGlobalValue;
				uniform half _EmissiveColorMode;
				uniform float _emissive_power_value;
				uniform half _CutoutIntensityValue;
				uniform half _CutoutElementMode;
				uniform half _CutoutGlobalValue;
				uniform half _RenderSpecular;
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
					sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
					UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
				CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
					#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
						float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
						float4 _TerrainHeightmapScale;//ASE Terrain Instancing
					#endif//ASE Terrain Instancing
				CBUFFER_END//ASE Terrain Instancing


				float4 mod289( float4 x )
				{
					return x - floor(x * 0.00346020761) * 289.0;
				}
				
				float4 perm( float4 x )
				{
					    return mod289((x * 34.0 + 1.0) * x);
				}
				
				float SimpleNoise3D( float3 p )
				{
					    // Compute integer and fractional parts.
					    float3 i = floor(p);
					    float3 f = p - i;
					    // Cubic interpolation (smoothstep)
					    f = f * f * (3.0 - 2.0 * f);
					    // Build 4-component vectors using swizzling.
					    // a = (i.x, i.x+1, i.y, i.y+1)
					    float4 a = float4(i.x, i.x, i.y, i.y) + float4(0.0, 1.0, 0.0, 1.0);
					    // Permutations along the x and y axes.
					    float4 k1 = perm(a.xyxy);
					    float4 k2 = perm(k1.xyxy + a.zzww);
					    // Incorporate the z component.
					    float4 c  = k2 + float4(i.z, i.z, i.z, i.z);
					    float4 k3 = perm(c);
					    float4 k4 = perm(c + 1.0);
					    // Map results to the [0,1] range.
					    float4 o1 = frac(k3 * 0.0243902439);
					    float4 o2 = frac(k4 * 0.0243902439);
					    // Interpolate along z, then x, then y.
					    float4 o3 = lerp(o1, o2, f.z);           // f.z blends between layers.
					    float2 o4 = lerp(o3.xz, o3.yw, f.x);       // f.x blends between pairs.
					    return lerp(o4.x, o4.y, f.y); 
				}
				
				void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
				{
					ZX = WorldPosition.xz * Coords.xx - Coords.zz;
					ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
					XY = WorldPosition.xy * Coords.xy - Coords.zw;
				}
				
				half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
					return tex;
				}
				
				void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
				{
					half3 powNormal = abs( WorldNormal.xyz );
					half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
					weights /= ( weights.x + weights.y + weights.z ).xxx;
					T1 = weights.y;
					T2 = weights.x;
					T3 = weights.z;
				}
				
				half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
					half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
					half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
					return tex1 * T1 + tex2 * T2 + tex3 * T3;
				}
				
				void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
				{
					half2 vertex1, vertex2, vertex3;
					// Scaling of the input
					half2 uv = UV * 3.464; // 2 * sqrt (3)
					// Skew input space into simplex triangle grid
					const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
					half2 skewedCoord = mul( gridToSkewedGrid, uv );
					// Compute local triangle vertex IDs and local barycentric coordinates
					int2 baseId = int2( floor( skewedCoord ) );
					half3 temp = half3( frac( skewedCoord ), 0 );
					temp.z = 1.0 - temp.x - temp.y;
					if ( temp.z > 0.0 )
					{
						W1 = temp.z;
						W2 = temp.y;
						W3 = temp.x;
						vertex1 = baseId;
						vertex2 = baseId + int2( 0, 1 );
						vertex3 = baseId + int2( 1, 0 );
					}
					else
					{
						W1 = -temp.z;
						W2 = 1.0 - temp.y;
						W3 = 1.0 - temp.x;
						vertex1 = baseId + int2( 1, 1 );
						vertex2 = baseId + int2( 1, 0 );
						vertex3 = baseId + int2( 0, 1 );
					}
					UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
					UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
					UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
					return;
				}
				
				float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
					half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
					half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
					half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
					return tex1 * W1 + tex2 * W2 + tex3 * W3;
				}
				
				half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					half4 tex1, tex2, tex3;
					ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
					half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
					half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
					half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					return texZX * T1 + texZY * T2 + texXY * T3;
				}
				
				half ShadowPassCheck33_g129104( half True, half False )
				{
					half result;
					#if defined(UNITY_PASS_DEFERRED)
						result = True;
					#else
						result = False;
					#endif
					return result;
				}
				
				half ShadowPassCheck33_g129105( half True, half False )
				{
					half result;
					#if defined(UNITY_PASS_DEFERRED)
						result = True;
					#else
						result = False;
					#endif
					return result;
				}
				
				appdata ApplyMeshModification( appdata v ){
				#ifdef UNITY_INSTANCING_ENABLED
					float2 patchVertex = v.vertex.xy;
					float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
					float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
					float4 uvoffset = instanceData.xyxy * uvscale;
					uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
					float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
					v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
					float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
					v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
					v.vertex.y = height * _TerrainHeightmapScale.y;
					v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
				#endif
				return v;
				}
				

				v2f VertexFunction (appdata v  ) {
					UNITY_SETUP_INSTANCE_ID(v);
					v2f o;
					UNITY_INITIALIZE_OUTPUT(v2f,o);
					UNITY_TRANSFER_INSTANCE_ID(v,o);
					UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

					v = ApplyMeshModification(v);
					TVEModelData Data16_g129074 = (TVEModelData)0;
					half Dummy181_g129072 = ( _ConformCategory + _ConformEnd + _ConformInfo );
					float In_Dummy16_g129074 = Dummy181_g129072;
					TVEModelData Data16_g114310 = (TVEModelData)0;
					half Dummy207_g114306 = 0.0;
					float In_Dummy16_g114310 = Dummy207_g114306;
					half3 PositionOS131_g114306 = v.vertex.xyz;
					float3 In_PositionOS16_g114310 = PositionOS131_g114306;
					float3 ase_positionWS = mul( unity_ObjectToWorld, float4( ( v.vertex ).xyz, 1 ) ).xyz;
					float3 vertexToFrag73_g114306 = ase_positionWS;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114310 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114310 = PositionWO132_g114306;
					float3 In_PositionRawOS16_g114310 = PositionOS131_g114306;
					float3 In_PositionAddOS16_g114310 = float3( 0,0,0 );
					float3 _Vector0 = float3(0,0,0);
					half3 PivotOS149_g114306 = _Vector0;
					float3 In_PivotOS16_g114310 = PivotOS149_g114306;
					float3 In_PivotWS16_g114310 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114310 = PivotWO133_g114306;
					half3 NormalOS134_g114306 = v.normal;
					float3 In_NormalOS16_g114310 = NormalOS134_g114306;
					float3 ase_normalWS = UnityObjectToWorldNormal( v.normal );
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114310 = Normal_WS95_g114306;
					float3 In_NormalRawOS16_g114310 = NormalOS134_g114306;
					float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0.0 ) ).xyz );
					half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
					float3 In_NormalRawWS16_g114310 = Normal_RawWS136_g114306;
					half4 TangentlOS153_g114306 = v.tangent;
					float4 In_TangentOS16_g114310 = TangentlOS153_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114310 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = v.ase_color;
					float4 In_VertexData16_g114310 = VertexMasks171_g114306;
					float mulTime113_g128352 = _Time.y * 0.52;
					float lerpResult128_g128352 = lerp( mulTime113_g128352 , ( ( mulTime113_g128352 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float3 break319_g114306 = PivotWO133_g114306;
					half Pivot_Position322_g114306 = ( break319_g114306.x + break319_g114306.z );
					float mulTime113_g128351 = _Time.y * 0.27;
					float lerpResult128_g128351 = lerp( mulTime113_g128351 , ( ( mulTime113_g128351 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float4 break33_g128354 = _object_phase_mode;
					float temp_output_30_0_g128354 = ( v.ase_color.r * break33_g128354.x );
					float temp_output_29_0_g128354 = ( v.ase_color.g * break33_g128354.y );
					float temp_output_31_0_g128354 = ( v.ase_color.b * break33_g128354.z );
					float temp_output_28_0_g128354 = ( temp_output_30_0_g128354 + temp_output_29_0_g128354 + temp_output_31_0_g128354 + ( v.ase_color.a * break33_g128354.w ) );
					float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g128354 + Pivot_Position322_g114306 ) )*2.0 + -1.0);
					float4 appendResult177_g114306 = (float4(sin( ( lerpResult128_g128352 + Pivot_Position322_g114306 ) ) , sin( ( lerpResult128_g128351 + Pivot_Position322_g114306 ) ) , temp_output_315_0_g114306 , 1.0));
					half4 MotionMasks176_g114306 = appendResult177_g114306;
					float4 In_PhaseData16_g114310 = MotionMasks176_g114306;
					half4 BoundsData254_g114306 = float4( 0,0,0,0 );
					float4 In_BoundsData16_g114310 = BoundsData254_g114306;
					float4 In_RotationData16_g114310 = float4( 0,0,0,0 );
					{
					Data16_g114310.Dummy = In_Dummy16_g114310;
					Data16_g114310.PositionOS = In_PositionOS16_g114310;
					Data16_g114310.PositionWS = In_PositionWS16_g114310;
					Data16_g114310.PositionWO = In_PositionWO16_g114310;
					Data16_g114310.PositionRawOS = In_PositionRawOS16_g114310;
					Data16_g114310.PositionAddOS = In_PositionAddOS16_g114310;
					Data16_g114310.PivotOS = In_PivotOS16_g114310;
					Data16_g114310.PivotWS = In_PivotWS16_g114310;
					Data16_g114310.PivotWO = In_PivotWO16_g114310;
					Data16_g114310.NormalOS = In_NormalOS16_g114310;
					Data16_g114310.NormalWS = In_NormalWS16_g114310;
					Data16_g114310.NormalRawOS = In_NormalRawOS16_g114310;
					Data16_g114310.NormalRawWS = In_NormalRawWS16_g114310;
					Data16_g114310.TangentOS = In_TangentOS16_g114310;
					Data16_g114310.ViewDirWS = In_ViewDirWS16_g114310;
					Data16_g114310.VertexData = In_VertexData16_g114310;
					Data16_g114310.PhaseData = In_PhaseData16_g114310;
					Data16_g114310.BoundsData = In_BoundsData16_g114310;
					Data16_g114310.RotationData = In_RotationData16_g114310;
					}
					TVEModelData Data15_g129073 = Data16_g114310;
					float Out_Dummy15_g129073 = 0;
					float3 Out_PositionOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129073 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129073 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129073 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129073 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129073 = float3( 0,0,0 );
					float4 Out_VertexData15_g129073 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129073 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129073 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129073 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129073 = Data15_g129073.Dummy;
					Out_PositionOS15_g129073 = Data15_g129073.PositionOS;
					Out_PositionWS15_g129073 = Data15_g129073.PositionWS;
					Out_PositionWO15_g129073 = Data15_g129073.PositionWO;
					Out_PositionRawOS15_g129073 = Data15_g129073.PositionRawOS;
					Out_PositionAddOS15_g129073 = Data15_g129073.PositionAddOS;
					Out_PivotOS15_g129073 = Data15_g129073.PivotOS;
					Out_PivotWS15_g129073 = Data15_g129073.PivotWS;
					Out_PivotWO15_g129073 = Data15_g129073.PivotWO;
					Out_NormalOS15_g129073 = Data15_g129073.NormalOS;
					Out_NormalWS15_g129073 = Data15_g129073.NormalWS;
					Out_NormalRawOS15_g129073 = Data15_g129073.NormalRawOS;
					Out_NormalRawWS15_g129073 = Data15_g129073.NormalRawWS;
					Out_TangentOS15_g129073 = Data15_g129073.TangentOS;
					Out_ViewDirWS15_g129073 = Data15_g129073.ViewDirWS;
					Out_VertexData15_g129073 = Data15_g129073.VertexData;
					Out_PhaseData15_g129073 = Data15_g129073.PhaseData;
					Out_BoundsData15_g129073 = Data15_g129073.BoundsData;
					Out_RotationData15_g129073 = Data15_g129073.RotationData;
					}
					half3 Input_PositionOS147_g129072 = Out_PositionOS15_g129073;
					float3 break592_g129072 = Input_PositionOS147_g129072;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g129077 = Data204_g128736;
					float Out_Dummy15_g129077 = 0;
					float4 Out_CoatDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129077 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129077 = Data15_g129077.Dummy;
					Out_CoatDataRT15_g129077 = Data15_g129077.CoatDataRT;
					Out_PaintDataRT15_g129077 = Data15_g129077.PaintDataRT;
					Out_GlowDataRT15_g129077= Data15_g129077.GlowDataRT;
					Out_AtmoDataRT15_g129077= Data15_g129077.AtmoDataRT;
					Out_FadeDataRT15_g129077= Data15_g129077.FadeDataRT;
					Out_FormDataRT15_g129077 = Data15_g129077.FormDataRT;
					Out_FlowDataRT15_g129077 = Data15_g129077.FlowDataRT;
					}
					half4 Input_FormParams214_g129072 = Out_FormDataRT15_g129077;
					float temp_output_642_0_g129072 = ( (Input_FormParams214_g129072).z + (TVE_WorldOrigin).y );
					float3 temp_output_481_19_g129072 = Out_PivotWO15_g129073;
					half3 Model_PivotWO602_g129072 = temp_output_481_19_g129072;
					float lerpResult594_g129072 = lerp( ( break592_g129072.y + temp_output_642_0_g129072 ) , ( temp_output_642_0_g129072 - (Model_PivotWO602_g129072).y ) , _ConformHeightMode);
					float lerpResult604_g129072 = lerp( break592_g129072.y , lerpResult594_g129072 , ( _ConformHeightValue * TVE_IsEnabled ));
					float3 appendResult593_g129072 = (float3(break592_g129072.x , lerpResult604_g129072 , break592_g129072.z));
					#ifdef TVE_CONFORM
					float3 staticSwitch575_g129072 = appendResult593_g129072;
					#else
					float3 staticSwitch575_g129072 = Input_PositionOS147_g129072;
					#endif
					half3 Final_PositionOS580_g129072 = staticSwitch575_g129072;
					float3 In_PositionOS16_g129074 = Final_PositionOS580_g129072;
					float3 In_PositionWS16_g129074 = Out_PositionWS15_g129073;
					float3 In_PositionWO16_g129074 = Out_PositionWO15_g129073;
					float3 In_PositionRawOS16_g129074 = Out_PositionRawOS15_g129073;
					float3 In_PositionAddOS16_g129074 = Out_PositionAddOS15_g129073;
					float3 In_PivotOS16_g129074 = Out_PivotOS15_g129073;
					float3 In_PivotWS16_g129074 = Out_PivotWS15_g129073;
					float3 In_PivotWO16_g129074 = temp_output_481_19_g129072;
					float3 temp_output_481_20_g129072 = Out_NormalOS15_g129073;
					float3 In_NormalOS16_g129074 = temp_output_481_20_g129072;
					float3 In_NormalWS16_g129074 = Out_NormalWS15_g129073;
					float3 In_NormalRawOS16_g129074 = Out_NormalRawOS15_g129073;
					float3 In_NormalRawWS16_g129074 = Out_NormalRawWS15_g129073;
					float4 In_TangentOS16_g129074 = Out_TangentOS15_g129073;
					float3 In_ViewDirWS16_g129074 = Out_ViewDirWS15_g129073;
					float4 In_VertexData16_g129074 = Out_VertexData15_g129073;
					float4 In_PhaseData16_g129074 = Out_PhaseData15_g129073;
					float4 In_BoundsData16_g129074 = Out_BoundsData15_g129073;
					float4 In_RotationData16_g129074 = Out_RotationData15_g129073;
					{
					Data16_g129074.Dummy = In_Dummy16_g129074;
					Data16_g129074.PositionOS = In_PositionOS16_g129074;
					Data16_g129074.PositionWS = In_PositionWS16_g129074;
					Data16_g129074.PositionWO = In_PositionWO16_g129074;
					Data16_g129074.PositionRawOS = In_PositionRawOS16_g129074;
					Data16_g129074.PositionAddOS = In_PositionAddOS16_g129074;
					Data16_g129074.PivotOS = In_PivotOS16_g129074;
					Data16_g129074.PivotWS = In_PivotWS16_g129074;
					Data16_g129074.PivotWO = In_PivotWO16_g129074;
					Data16_g129074.NormalOS = In_NormalOS16_g129074;
					Data16_g129074.NormalWS = In_NormalWS16_g129074;
					Data16_g129074.NormalRawOS = In_NormalRawOS16_g129074;
					Data16_g129074.NormalRawWS = In_NormalRawWS16_g129074;
					Data16_g129074.TangentOS = In_TangentOS16_g129074;
					Data16_g129074.ViewDirWS = In_ViewDirWS16_g129074;
					Data16_g129074.VertexData = In_VertexData16_g129074;
					Data16_g129074.PhaseData = In_PhaseData16_g129074;
					Data16_g129074.BoundsData = In_BoundsData16_g129074;
					Data16_g129074.RotationData = In_RotationData16_g129074;
					}
					TVEModelData Data15_g129096 = Data16_g129074;
					float Out_Dummy15_g129096 = 0;
					float3 Out_PositionOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129096 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129096 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129096 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129096 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129096 = float3( 0,0,0 );
					float4 Out_VertexData15_g129096 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129096 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129096 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129096 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129096 = Data15_g129096.Dummy;
					Out_PositionOS15_g129096 = Data15_g129096.PositionOS;
					Out_PositionWS15_g129096 = Data15_g129096.PositionWS;
					Out_PositionWO15_g129096 = Data15_g129096.PositionWO;
					Out_PositionRawOS15_g129096 = Data15_g129096.PositionRawOS;
					Out_PositionAddOS15_g129096 = Data15_g129096.PositionAddOS;
					Out_PivotOS15_g129096 = Data15_g129096.PivotOS;
					Out_PivotWS15_g129096 = Data15_g129096.PivotWS;
					Out_PivotWO15_g129096 = Data15_g129096.PivotWO;
					Out_NormalOS15_g129096 = Data15_g129096.NormalOS;
					Out_NormalWS15_g129096 = Data15_g129096.NormalWS;
					Out_NormalRawOS15_g129096 = Data15_g129096.NormalRawOS;
					Out_NormalRawWS15_g129096 = Data15_g129096.NormalRawWS;
					Out_TangentOS15_g129096 = Data15_g129096.TangentOS;
					Out_ViewDirWS15_g129096 = Data15_g129096.ViewDirWS;
					Out_VertexData15_g129096 = Data15_g129096.VertexData;
					Out_PhaseData15_g129096 = Data15_g129096.PhaseData;
					Out_BoundsData15_g129096 = Data15_g129096.BoundsData;
					Out_RotationData15_g129096 = Data15_g129096.RotationData;
					}
					float3 temp_output_31_0_g129094 = Out_PositionOS15_g129096;
					
					float3 temp_output_31_20_g129094 = Out_NormalOS15_g129096;
					
					float4 appendResult120_g129094 = (float4(cross( temp_output_31_20_g129094 , float3( 0, 0, 1 ) ) , -1.0));
					float4 temp_output_6_0_g129107 = appendResult120_g129094;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129107 = ( temp_output_6_0_g129107 + 0.0 );
					#else
					float4 staticSwitch14_g129107 = temp_output_6_0_g129107;
					#endif
					
					o.ase_texcoord8.xyz = vertexToFrag73_g114306;
					
					o.ase_color = v.ase_color;
					o.ase_texcoord9 = v.ase_texcoord;
					
					//setting value to unused interpolator channels and avoid initialization warnings
					o.ase_texcoord8.w = 0;

					#ifdef ASE_ABSOLUTE_VERTEX_POS
						float3 defaultVertexValue = v.vertex.xyz;
					#else
						float3 defaultVertexValue = float3(0, 0, 0);
					#endif
					float3 vertexValue = temp_output_31_0_g129094;
					#ifdef ASE_ABSOLUTE_VERTEX_POS
						v.vertex.xyz = vertexValue;
					#else
						v.vertex.xyz += vertexValue;
					#endif
					v.vertex.w = 1;
					v.normal = temp_output_31_20_g129094;
					v.tangent = staticSwitch14_g129107;

					float3 worldPos = mul( unity_ObjectToWorld, v.vertex ).xyz;
					half3 worldNormal = UnityObjectToWorldNormal( v.normal );
					half3 worldTangent = UnityObjectToWorldDir( v.tangent.xyz );
					half tangentSign = v.tangent.w * unity_WorldTransformParams.w;
					half3 worldBitangent = cross( worldNormal, worldTangent ) * tangentSign;

					o.pos = UnityObjectToClipPos( v.vertex );
					o.worldNormal = float4( worldNormal, worldPos.x );
					o.worldTangent = float4( worldTangent, worldPos.y );
					o.worldBitangent = float4( worldBitangent, worldPos.z );

					o.ambientOrLightmapUV = 0;
					#ifdef LIGHTMAP_ON
						o.ambientOrLightmapUV.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					#elif UNITY_SHOULD_SAMPLE_SH
						#ifdef VERTEXLIGHT_ON
							o.ambientOrLightmapUV.rgb += Shade4PointLights(
								unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0,
								unity_LightColor[0].rgb, unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,
								unity_4LightAtten0, worldPos, worldNormal );
						#endif
						o.ambientOrLightmapUV.rgb = ShadeSHPerVertex( worldNormal, o.ambientOrLightmapUV.rgb );
					#endif
					#ifdef DYNAMICLIGHTMAP_ON
						o.ambientOrLightmapUV.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					#endif

					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);

					#ifdef ASE_FOG
						UNITY_TRANSFER_FOG(o,o.pos);
					#endif
					return o;
				}

				#if defined(ASE_TESSELLATION)
				struct VertexControl
				{
					float4 vertex : INTERNALTESSPOS;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;

					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct TessellationFactors
				{
					float edge[3] : SV_TessFactor;
					float inside : SV_InsideTessFactor;
				};

				VertexControl vert ( appdata v )
				{
					VertexControl o;
					UNITY_SETUP_INSTANCE_ID(v);
					UNITY_TRANSFER_INSTANCE_ID(v, o);
					o.vertex = v.vertex;
					o.tangent = v.tangent;
					o.normal = v.normal;
					o.texcoord1 = v.texcoord1;
					o.texcoord2 = v.texcoord2;
					o.ase_color = v.ase_color;
					o.ase_texcoord = v.ase_texcoord;
					return o;
				}

				TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
				{
					TessellationFactors o;
					float4 tf = 1;
					float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
					float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
					#if defined(ASE_FIXED_TESSELLATION)
					tf = FixedTess( tessValue );
					#elif defined(ASE_DISTANCE_TESSELLATION)
					tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
					#elif defined(ASE_LENGTH_TESSELLATION)
					tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
					#elif defined(ASE_LENGTH_CULL_TESSELLATION)
					tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
					#endif
					o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
					return o;
				}

				[domain("tri")]
				[partitioning("fractional_odd")]
				[outputtopology("triangle_cw")]
				[patchconstantfunc("TessellationFunction")]
				[outputcontrolpoints(3)]
				VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
				{
				   return patch[id];
				}

				[domain("tri")]
				v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
				{
					appdata o = (appdata) 0;
					o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
					o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
					o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
					o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
					o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
					o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
					o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
					#if defined(ASE_PHONG_TESSELLATION)
					float3 pp[3];
					for (int i = 0; i < 3; ++i)
						pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
					float phongStrength = _TessPhongStrength;
					o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
					#endif
					UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
					return VertexFunction(o);
				}
				#else
				v2f vert ( appdata v )
				{
					return VertexFunction( v );
				}
				#endif

				half4 frag (v2f IN 
					#if defined( ASE_DEPTH_WRITE_ON )
					, out float outputDepth : SV_Depth
					#endif
					) : SV_Target
				{
					UNITY_SETUP_INSTANCE_ID(IN);

					#ifdef LOD_FADE_CROSSFADE
						UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
					#endif

					#if defined(ASE_LIGHTING_SIMPLE)
						SurfaceOutput o = (SurfaceOutput)0;
					#else
						#if defined(_SPECULAR_SETUP)
							SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
						#else
							SurfaceOutputStandard o = (SurfaceOutputStandard)0;
						#endif
					#endif

					float3 WorldNormal = IN.worldNormal;
					float3 WorldTangent = IN.worldTangent;
					float3 WorldBiTangent = IN.worldBitangent;
					float3 worldPos = float3(IN.worldNormal.w,IN.worldTangent.w,IN.worldBitangent.w);
					float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));

					#if defined( ASE_NEEDS_FRAG_SHADOWCOORDS )
						UNITY_LIGHT_ATTENUATION( atten, IN, worldPos )
					#else
						half atten = 1;
					#endif

					#if defined( ASE_NEEDS_FRAG_SCREEN_POSITION )
						float4 ScreenPos = IN.screenPos;
					#endif

					float localBreakData4_g129098 = ( 0.0 );
					float localCompData3_g129056 = ( 0.0 );
					TVEVisualData Data3_g129056 = (TVEVisualData)0;
					half Dummy594_g129055 = ( _CutoutCategory + _CutoutEnd + _CutoutSpace + _CutoutBakeInfo );
					float In_Dummy3_g129056 = Dummy594_g129055;
					float localBreakData4_g129058 = ( 0.0 );
					float localCompData3_g129054 = ( 0.0 );
					TVEVisualData Data3_g129054 = (TVEVisualData)0;
					half Dummy145_g129039 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveFlagMode );
					float In_Dummy3_g129054 = Dummy145_g129039;
					float localBreakData4_g129043 = ( 0.0 );
					float localCompData3_g129012 = ( 0.0 );
					TVEVisualData Data3_g129012 = (TVEVisualData)0;
					half Dummy594_g129010 = ( _WetnessCategory + _WetnessEnd + _WetnessBakeInfo );
					float In_Dummy3_g129012 = Dummy594_g129010;
					float localBreakData4_g129011 = ( 0.0 );
					float localCompData3_g128976 = ( 0.0 );
					TVEVisualData Data3_g128976 = (TVEVisualData)0;
					half Dummy594_g128973 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayBakeInfo );
					float In_Dummy3_g128976 = Dummy594_g128973;
					float localBreakData4_g128974 = ( 0.0 );
					float localCompData3_g128952 = ( 0.0 );
					TVEVisualData Data3_g128952 = (TVEVisualData)0;
					half Dummy205_g128949 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessBakeInfo );
					float In_Dummy3_g128952 = Dummy205_g128949;
					float localBreakData4_g128951 = ( 0.0 );
					float localCompData3_g128944 = ( 0.0 );
					TVEVisualData Data3_g128944 = (TVEVisualData)0;
					half Dummy205_g128924 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
					float In_Dummy3_g128944 = Dummy205_g128924;
					float localBreakData4_g128928 = ( 0.0 );
					float localCompData3_g128923 = ( 0.0 );
					TVEVisualData Data3_g128923 = (TVEVisualData)0;
					half Dummy9163_g128810 = ( _CategoryTerrain + _EndTerrain );
					float In_Dummy3_g128923 = Dummy9163_g128810;
					float localHeightBasedBlending7362_g128811 = ( 0.0 );
					float4 appendResult9125_g128811 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
					float4 temp_output_35_0_g128903 = appendResult9125_g128811;
					float2 InputScale48_g128903 = (temp_output_35_0_g128903).zw;
					half2 FinalScale53_g128903 = ( 1.0 / InputScale48_g128903 );
					float2 InputPosition52_g128903 = (temp_output_35_0_g128903).xy;
					half2 FinalPosition58_g128903 = -( FinalScale53_g128903 * InputPosition52_g128903 );
					float2 temp_output_65_0_g128903 = ( ( (worldPos).xz * FinalScale53_g128903 ) + FinalPosition58_g128903 );
					float4 temp_output_70_0_g128903 = _TerrainControlTex1_TexelSize;
					float2 InputTexelSize68_g128903 = (temp_output_70_0_g128903).zw;
					float2 temp_cast_0 = (1.0).xx;
					float2 InputTexelRecip69_g128903 = (temp_output_70_0_g128903).xy;
					float2 Terrain_Control_UV7873_g128811 = ( ( ( temp_output_65_0_g128903 / ( 1.0 / ( InputTexelSize68_g128903 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g128903 );
					half4 Terrain_Control_047365_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_047362_g128811 = Terrain_Control_047365_g128811;
					half4 Terrain_Control_087366_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_087362_g128811 = Terrain_Control_087366_g128811;
					half4 Terrain_Control_127712_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_127362_g128811 = Terrain_Control_127712_g128811;
					half4 Terrain_Control_167711_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_167362_g128811 = Terrain_Control_167711_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128840) = _TerrainShaderTex1;
					float localFilterTexture30_g128901 = ( 0.0 );
					SamplerState SS30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerDefault30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerPoint30_g128901 = sampler_Point_Repeat;
					SamplerState SamplerLow30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerMedium30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerHigh30_g128901 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS30_g128901 = SamplerDefault30_g128901;
					#if defined (TVE_FILTER_DEFAULT)
					    SS30_g128901 = SamplerDefault30_g128901;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS30_g128901 = SamplerPoint30_g128901;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS30_g128901 = SamplerLow30_g128901;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS30_g128901 = SamplerMedium30_g128901;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS30_g128901 = SamplerHigh30_g128901;
					#endif
					}
					SamplerState Sampler238_g128840 = SS30_g128901;
					half4 Input_Terrain_Coords_016785_g128811 = _TerrainCoord1;
					float4 temp_output_37_0_g128840 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128840 = temp_output_37_0_g128840;
					half3 Input_Position9197_g128811 = worldPos;
					float3 temp_output_279_0_g128840 = Input_Position9197_g128811;
					half3 WorldPosition238_g128840 = temp_output_279_0_g128840;
					half4 localSamplePlanar2D238_g128840 = SamplePlanar2D( Texture238_g128840 , Sampler238_g128840 , Coords238_g128840 , WorldPosition238_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128840) = _TerrainShaderTex1;
					SamplerState Sampler246_g128840 = SS30_g128901;
					half4 Coords246_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition246_g128840 = temp_output_279_0_g128840;
					half3 Input_Normal9199_g128811 = WorldNormal;
					float3 temp_output_280_0_g128840 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128840 = temp_output_280_0_g128840;
					half4 localSamplePlanar3D246_g128840 = SamplePlanar3D( Texture246_g128840 , Sampler246_g128840 , Coords246_g128840 , WorldPosition246_g128840 , WorldNormal246_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128840) = _TerrainShaderTex1;
					SamplerState Sampler234_g128840 = SS30_g128901;
					float4 Coords234_g128840 = temp_output_37_0_g128840;
					float3 WorldPosition234_g128840 = temp_output_279_0_g128840;
					float4 localSampleStochastic2D234_g128840 = SampleStochastic2D( Texture234_g128840 , Sampler234_g128840 , Coords234_g128840 , WorldPosition234_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128840) = _TerrainShaderTex1;
					SamplerState Sampler263_g128840 = SS30_g128901;
					half4 Coords263_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition263_g128840 = temp_output_279_0_g128840;
					half3 WorldNormal263_g128840 = temp_output_280_0_g128840;
					half4 localSampleStochastic3D263_g128840 = SampleStochastic3D( Texture263_g128840 , Sampler263_g128840 , Coords263_g128840 , WorldPosition263_g128840 , WorldNormal263_g128840 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8639_g128811 = localSamplePlanar3D246_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8639_g128811 = localSampleStochastic2D234_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8639_g128811 = localSampleStochastic3D263_g128840;
					#else
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#endif
					float4 temp_output_7_0_g128905 = _TerrainShaderMin1;
					float4 temp_output_9_0_g128905 = ( staticSwitch8639_g128811 - temp_output_7_0_g128905 );
					float4 temp_output_6970_0_g128811 = saturate( ( ( temp_output_9_0_g128905 * _TerrainShaderRcp1 ) + 0.0001 ) );
					half4 Masks_015_g128816 = temp_output_6970_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128844) = _TerrainShaderTex2;
					SamplerState Sampler238_g128844 = SS30_g128901;
					half4 Input_Terrain_Coords_026787_g128811 = _TerrainCoord2;
					float4 temp_output_37_0_g128844 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128844 = temp_output_37_0_g128844;
					float3 temp_output_279_0_g128844 = Input_Position9197_g128811;
					half3 WorldPosition238_g128844 = temp_output_279_0_g128844;
					half4 localSamplePlanar2D238_g128844 = SamplePlanar2D( Texture238_g128844 , Sampler238_g128844 , Coords238_g128844 , WorldPosition238_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128844) = _TerrainShaderTex2;
					SamplerState Sampler246_g128844 = SS30_g128901;
					half4 Coords246_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition246_g128844 = temp_output_279_0_g128844;
					float3 temp_output_280_0_g128844 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128844 = temp_output_280_0_g128844;
					half4 localSamplePlanar3D246_g128844 = SamplePlanar3D( Texture246_g128844 , Sampler246_g128844 , Coords246_g128844 , WorldPosition246_g128844 , WorldNormal246_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128844) = _TerrainShaderTex2;
					SamplerState Sampler234_g128844 = SS30_g128901;
					float4 Coords234_g128844 = temp_output_37_0_g128844;
					float3 WorldPosition234_g128844 = temp_output_279_0_g128844;
					float4 localSampleStochastic2D234_g128844 = SampleStochastic2D( Texture234_g128844 , Sampler234_g128844 , Coords234_g128844 , WorldPosition234_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128844) = _TerrainShaderTex2;
					SamplerState Sampler263_g128844 = SS30_g128901;
					half4 Coords263_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition263_g128844 = temp_output_279_0_g128844;
					half3 WorldNormal263_g128844 = temp_output_280_0_g128844;
					half4 localSampleStochastic3D263_g128844 = SampleStochastic3D( Texture263_g128844 , Sampler263_g128844 , Coords263_g128844 , WorldPosition263_g128844 , WorldNormal263_g128844 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8640_g128811 = localSamplePlanar3D246_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8640_g128811 = localSampleStochastic2D234_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8640_g128811 = localSampleStochastic3D263_g128844;
					#else
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#endif
					float4 temp_output_7_0_g128906 = _TerrainShaderMin2;
					float4 temp_output_9_0_g128906 = ( staticSwitch8640_g128811 - temp_output_7_0_g128906 );
					float4 temp_output_6977_0_g128811 = saturate( ( ( temp_output_9_0_g128906 * _TerrainShaderRcp2 ) + 0.0001 ) );
					half4 Masks_0210_g128816 = temp_output_6977_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128849) = _TerrainShaderTex3;
					SamplerState Sampler238_g128849 = SS30_g128901;
					half4 Input_Terrain_Coords_036789_g128811 = _TerrainCoord3;
					float4 temp_output_37_0_g128849 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128849 = temp_output_37_0_g128849;
					float3 temp_output_279_0_g128849 = Input_Position9197_g128811;
					half3 WorldPosition238_g128849 = temp_output_279_0_g128849;
					half4 localSamplePlanar2D238_g128849 = SamplePlanar2D( Texture238_g128849 , Sampler238_g128849 , Coords238_g128849 , WorldPosition238_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128849) = _TerrainShaderTex3;
					SamplerState Sampler246_g128849 = SS30_g128901;
					half4 Coords246_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition246_g128849 = temp_output_279_0_g128849;
					float3 temp_output_280_0_g128849 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128849 = temp_output_280_0_g128849;
					half4 localSamplePlanar3D246_g128849 = SamplePlanar3D( Texture246_g128849 , Sampler246_g128849 , Coords246_g128849 , WorldPosition246_g128849 , WorldNormal246_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128849) = _TerrainShaderTex3;
					SamplerState Sampler234_g128849 = SS30_g128901;
					float4 Coords234_g128849 = temp_output_37_0_g128849;
					float3 WorldPosition234_g128849 = temp_output_279_0_g128849;
					float4 localSampleStochastic2D234_g128849 = SampleStochastic2D( Texture234_g128849 , Sampler234_g128849 , Coords234_g128849 , WorldPosition234_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128849) = _TerrainShaderTex3;
					SamplerState Sampler263_g128849 = SS30_g128901;
					half4 Coords263_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition263_g128849 = temp_output_279_0_g128849;
					half3 WorldNormal263_g128849 = temp_output_280_0_g128849;
					half4 localSampleStochastic3D263_g128849 = SampleStochastic3D( Texture263_g128849 , Sampler263_g128849 , Coords263_g128849 , WorldPosition263_g128849 , WorldNormal263_g128849 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8641_g128811 = localSamplePlanar3D246_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8641_g128811 = localSampleStochastic2D234_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8641_g128811 = localSampleStochastic3D263_g128849;
					#else
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#endif
					float4 temp_output_7_0_g128907 = _TerrainShaderMin3;
					float4 temp_output_9_0_g128907 = ( staticSwitch8641_g128811 - temp_output_7_0_g128907 );
					float4 temp_output_6978_0_g128811 = saturate( ( ( temp_output_9_0_g128907 * _TerrainShaderRcp3 ) + 0.0001 ) );
					half4 Masks_0312_g128816 = temp_output_6978_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128850) = _TerrainShaderTex4;
					SamplerState Sampler238_g128850 = SS30_g128901;
					half4 Input_Terrain_Coords_046791_g128811 = _TerrainCoord4;
					float4 temp_output_37_0_g128850 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128850 = temp_output_37_0_g128850;
					float3 temp_output_279_0_g128850 = Input_Position9197_g128811;
					half3 WorldPosition238_g128850 = temp_output_279_0_g128850;
					half4 localSamplePlanar2D238_g128850 = SamplePlanar2D( Texture238_g128850 , Sampler238_g128850 , Coords238_g128850 , WorldPosition238_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128850) = _TerrainShaderTex4;
					SamplerState Sampler246_g128850 = SS30_g128901;
					half4 Coords246_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition246_g128850 = temp_output_279_0_g128850;
					float3 temp_output_280_0_g128850 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128850 = temp_output_280_0_g128850;
					half4 localSamplePlanar3D246_g128850 = SamplePlanar3D( Texture246_g128850 , Sampler246_g128850 , Coords246_g128850 , WorldPosition246_g128850 , WorldNormal246_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128850) = _TerrainShaderTex4;
					SamplerState Sampler234_g128850 = SS30_g128901;
					float4 Coords234_g128850 = temp_output_37_0_g128850;
					float3 WorldPosition234_g128850 = temp_output_279_0_g128850;
					float4 localSampleStochastic2D234_g128850 = SampleStochastic2D( Texture234_g128850 , Sampler234_g128850 , Coords234_g128850 , WorldPosition234_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128850) = _TerrainShaderTex4;
					SamplerState Sampler263_g128850 = SS30_g128901;
					half4 Coords263_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition263_g128850 = temp_output_279_0_g128850;
					half3 WorldNormal263_g128850 = temp_output_280_0_g128850;
					half4 localSampleStochastic3D263_g128850 = SampleStochastic3D( Texture263_g128850 , Sampler263_g128850 , Coords263_g128850 , WorldPosition263_g128850 , WorldNormal263_g128850 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8642_g128811 = localSamplePlanar3D246_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8642_g128811 = localSampleStochastic2D234_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8642_g128811 = localSampleStochastic3D263_g128850;
					#else
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#endif
					float4 temp_output_7_0_g128908 = _TerrainShaderMin4;
					float4 temp_output_9_0_g128908 = ( staticSwitch8642_g128811 - temp_output_7_0_g128908 );
					float4 temp_output_6983_0_g128811 = saturate( ( ( temp_output_9_0_g128908 * _TerrainShaderRcp4 ) + 0.0001 ) );
					half4 Masks_0414_g128816 = temp_output_6983_0_g128811;
					float4 appendResult29_g128816 = (float4((Masks_015_g128816).z , (Masks_0210_g128816).z , (Masks_0312_g128816).z , (Masks_0414_g128816).z));
					half4 Control31_g128816 = Terrain_Control_047365_g128811;
					half4 Terrain_Height_047210_g128811 = ( appendResult29_g128816 * Control31_g128816 );
					float4 heights_047362_g128811 = Terrain_Height_047210_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128853) = _TerrainShaderTex5;
					SamplerState Sampler238_g128853 = SS30_g128901;
					half4 Input_Terrain_Coords_058750_g128811 = _TerrainCoord5;
					float4 temp_output_37_0_g128853 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128853 = temp_output_37_0_g128853;
					float3 temp_output_279_0_g128853 = Input_Position9197_g128811;
					half3 WorldPosition238_g128853 = temp_output_279_0_g128853;
					half4 localSamplePlanar2D238_g128853 = SamplePlanar2D( Texture238_g128853 , Sampler238_g128853 , Coords238_g128853 , WorldPosition238_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128853) = _TerrainShaderTex5;
					SamplerState Sampler246_g128853 = SS30_g128901;
					half4 Coords246_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition246_g128853 = temp_output_279_0_g128853;
					float3 temp_output_280_0_g128853 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128853 = temp_output_280_0_g128853;
					half4 localSamplePlanar3D246_g128853 = SamplePlanar3D( Texture246_g128853 , Sampler246_g128853 , Coords246_g128853 , WorldPosition246_g128853 , WorldNormal246_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128853) = _TerrainShaderTex5;
					SamplerState Sampler234_g128853 = SS30_g128901;
					float4 Coords234_g128853 = temp_output_37_0_g128853;
					float3 WorldPosition234_g128853 = temp_output_279_0_g128853;
					float4 localSampleStochastic2D234_g128853 = SampleStochastic2D( Texture234_g128853 , Sampler234_g128853 , Coords234_g128853 , WorldPosition234_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128853) = _TerrainShaderTex5;
					SamplerState Sampler263_g128853 = SS30_g128901;
					half4 Coords263_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition263_g128853 = temp_output_279_0_g128853;
					half3 WorldNormal263_g128853 = temp_output_280_0_g128853;
					half4 localSampleStochastic3D263_g128853 = SampleStochastic3D( Texture263_g128853 , Sampler263_g128853 , Coords263_g128853 , WorldPosition263_g128853 , WorldNormal263_g128853 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8710_g128811 = localSamplePlanar3D246_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8710_g128811 = localSampleStochastic2D234_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8710_g128811 = localSampleStochastic3D263_g128853;
					#else
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#endif
					float4 temp_output_7_0_g128909 = _TerrainShaderMin5;
					float4 temp_output_9_0_g128909 = ( staticSwitch8710_g128811 - temp_output_7_0_g128909 );
					float4 temp_output_8714_0_g128811 = saturate( ( ( temp_output_9_0_g128909 * _TerrainShaderRcp5 ) + 0.0001 ) );
					half4 Masks_015_g128824 = temp_output_8714_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128884) = _TerrainShaderTex6;
					SamplerState Sampler238_g128884 = SS30_g128901;
					half4 Input_Terrain_Coords_068751_g128811 = _TerrainCoord6;
					float4 temp_output_37_0_g128884 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128884 = temp_output_37_0_g128884;
					float3 temp_output_279_0_g128884 = Input_Position9197_g128811;
					half3 WorldPosition238_g128884 = temp_output_279_0_g128884;
					half4 localSamplePlanar2D238_g128884 = SamplePlanar2D( Texture238_g128884 , Sampler238_g128884 , Coords238_g128884 , WorldPosition238_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128884) = _TerrainShaderTex6;
					SamplerState Sampler246_g128884 = SS30_g128901;
					half4 Coords246_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition246_g128884 = temp_output_279_0_g128884;
					float3 temp_output_280_0_g128884 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128884 = temp_output_280_0_g128884;
					half4 localSamplePlanar3D246_g128884 = SamplePlanar3D( Texture246_g128884 , Sampler246_g128884 , Coords246_g128884 , WorldPosition246_g128884 , WorldNormal246_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128884) = _TerrainShaderTex6;
					SamplerState Sampler234_g128884 = SS30_g128901;
					float4 Coords234_g128884 = temp_output_37_0_g128884;
					float3 WorldPosition234_g128884 = temp_output_279_0_g128884;
					float4 localSampleStochastic2D234_g128884 = SampleStochastic2D( Texture234_g128884 , Sampler234_g128884 , Coords234_g128884 , WorldPosition234_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128884) = _TerrainShaderTex6;
					SamplerState Sampler263_g128884 = SS30_g128901;
					half4 Coords263_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition263_g128884 = temp_output_279_0_g128884;
					half3 WorldNormal263_g128884 = temp_output_280_0_g128884;
					half4 localSampleStochastic3D263_g128884 = SampleStochastic3D( Texture263_g128884 , Sampler263_g128884 , Coords263_g128884 , WorldPosition263_g128884 , WorldNormal263_g128884 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8711_g128811 = localSamplePlanar3D246_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8711_g128811 = localSampleStochastic2D234_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8711_g128811 = localSampleStochastic3D263_g128884;
					#else
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#endif
					float4 temp_output_7_0_g128910 = _TerrainShaderMin6;
					float4 temp_output_9_0_g128910 = ( staticSwitch8711_g128811 - temp_output_7_0_g128910 );
					float4 temp_output_8721_0_g128811 = saturate( ( ( temp_output_9_0_g128910 * _TerrainShaderRcp6 ) + 0.0001 ) );
					half4 Masks_0210_g128824 = temp_output_8721_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128885) = _TerrainShaderTex7;
					SamplerState Sampler238_g128885 = SS30_g128901;
					half4 Input_Terrain_Coords_078752_g128811 = _TerrainCoord7;
					float4 temp_output_37_0_g128885 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128885 = temp_output_37_0_g128885;
					float3 temp_output_279_0_g128885 = Input_Position9197_g128811;
					half3 WorldPosition238_g128885 = temp_output_279_0_g128885;
					half4 localSamplePlanar2D238_g128885 = SamplePlanar2D( Texture238_g128885 , Sampler238_g128885 , Coords238_g128885 , WorldPosition238_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128885) = _TerrainShaderTex7;
					SamplerState Sampler246_g128885 = SS30_g128901;
					half4 Coords246_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition246_g128885 = temp_output_279_0_g128885;
					float3 temp_output_280_0_g128885 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128885 = temp_output_280_0_g128885;
					half4 localSamplePlanar3D246_g128885 = SamplePlanar3D( Texture246_g128885 , Sampler246_g128885 , Coords246_g128885 , WorldPosition246_g128885 , WorldNormal246_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128885) = _TerrainShaderTex7;
					SamplerState Sampler234_g128885 = SS30_g128901;
					float4 Coords234_g128885 = temp_output_37_0_g128885;
					float3 WorldPosition234_g128885 = temp_output_279_0_g128885;
					float4 localSampleStochastic2D234_g128885 = SampleStochastic2D( Texture234_g128885 , Sampler234_g128885 , Coords234_g128885 , WorldPosition234_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128885) = _TerrainShaderTex7;
					SamplerState Sampler263_g128885 = SS30_g128901;
					half4 Coords263_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition263_g128885 = temp_output_279_0_g128885;
					half3 WorldNormal263_g128885 = temp_output_280_0_g128885;
					half4 localSampleStochastic3D263_g128885 = SampleStochastic3D( Texture263_g128885 , Sampler263_g128885 , Coords263_g128885 , WorldPosition263_g128885 , WorldNormal263_g128885 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8712_g128811 = localSamplePlanar3D246_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8712_g128811 = localSampleStochastic2D234_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8712_g128811 = localSampleStochastic3D263_g128885;
					#else
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#endif
					float4 temp_output_7_0_g128911 = _TerrainShaderMin7;
					float4 temp_output_9_0_g128911 = ( staticSwitch8712_g128811 - temp_output_7_0_g128911 );
					float4 temp_output_8724_0_g128811 = saturate( ( ( temp_output_9_0_g128911 * _TerrainShaderRcp7 ) + 0.0001 ) );
					half4 Masks_0312_g128824 = temp_output_8724_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128886) = _TerrainShaderTex8;
					SamplerState Sampler238_g128886 = SS30_g128901;
					half4 Input_Terrain_Coords_088749_g128811 = _TerrainCoord8;
					float4 temp_output_37_0_g128886 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128886 = temp_output_37_0_g128886;
					float3 temp_output_279_0_g128886 = Input_Position9197_g128811;
					half3 WorldPosition238_g128886 = temp_output_279_0_g128886;
					half4 localSamplePlanar2D238_g128886 = SamplePlanar2D( Texture238_g128886 , Sampler238_g128886 , Coords238_g128886 , WorldPosition238_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128886) = _TerrainShaderTex8;
					SamplerState Sampler246_g128886 = SS30_g128901;
					half4 Coords246_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition246_g128886 = temp_output_279_0_g128886;
					float3 temp_output_280_0_g128886 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128886 = temp_output_280_0_g128886;
					half4 localSamplePlanar3D246_g128886 = SamplePlanar3D( Texture246_g128886 , Sampler246_g128886 , Coords246_g128886 , WorldPosition246_g128886 , WorldNormal246_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128886) = _TerrainShaderTex8;
					SamplerState Sampler234_g128886 = SS30_g128901;
					float4 Coords234_g128886 = temp_output_37_0_g128886;
					float3 WorldPosition234_g128886 = temp_output_279_0_g128886;
					float4 localSampleStochastic2D234_g128886 = SampleStochastic2D( Texture234_g128886 , Sampler234_g128886 , Coords234_g128886 , WorldPosition234_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128886) = _TerrainShaderTex8;
					SamplerState Sampler263_g128886 = SS30_g128901;
					half4 Coords263_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition263_g128886 = temp_output_279_0_g128886;
					half3 WorldNormal263_g128886 = temp_output_280_0_g128886;
					half4 localSampleStochastic3D263_g128886 = SampleStochastic3D( Texture263_g128886 , Sampler263_g128886 , Coords263_g128886 , WorldPosition263_g128886 , WorldNormal263_g128886 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8713_g128811 = localSamplePlanar3D246_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8713_g128811 = localSampleStochastic2D234_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8713_g128811 = localSampleStochastic3D263_g128886;
					#else
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#endif
					float4 temp_output_7_0_g128912 = _TerrainShaderMin8;
					float4 temp_output_9_0_g128912 = ( staticSwitch8713_g128811 - temp_output_7_0_g128912 );
					float4 temp_output_8727_0_g128811 = saturate( ( ( temp_output_9_0_g128912 * _TerrainShaderRcp8 ) + 0.0001 ) );
					half4 Masks_0414_g128824 = temp_output_8727_0_g128811;
					float4 appendResult29_g128824 = (float4((Masks_015_g128824).z , (Masks_0210_g128824).z , (Masks_0312_g128824).z , (Masks_0414_g128824).z));
					half4 Control31_g128824 = Terrain_Control_087366_g128811;
					half4 Terrain_Height_088731_g128811 = ( appendResult29_g128824 * Control31_g128824 );
					float4 heights_087362_g128811 = Terrain_Height_088731_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128856) = _TerrainShaderTex9;
					SamplerState Sampler238_g128856 = SS30_g128901;
					half4 Input_Terrain_Coords_098833_g128811 = _TerrainCoord9;
					float4 temp_output_37_0_g128856 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128856 = temp_output_37_0_g128856;
					float3 temp_output_279_0_g128856 = Input_Position9197_g128811;
					half3 WorldPosition238_g128856 = temp_output_279_0_g128856;
					half4 localSamplePlanar2D238_g128856 = SamplePlanar2D( Texture238_g128856 , Sampler238_g128856 , Coords238_g128856 , WorldPosition238_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128856) = _TerrainShaderTex9;
					SamplerState Sampler246_g128856 = SS30_g128901;
					half4 Coords246_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition246_g128856 = temp_output_279_0_g128856;
					float3 temp_output_280_0_g128856 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128856 = temp_output_280_0_g128856;
					half4 localSamplePlanar3D246_g128856 = SamplePlanar3D( Texture246_g128856 , Sampler246_g128856 , Coords246_g128856 , WorldPosition246_g128856 , WorldNormal246_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128856) = _TerrainShaderTex9;
					SamplerState Sampler234_g128856 = SS30_g128901;
					float4 Coords234_g128856 = temp_output_37_0_g128856;
					float3 WorldPosition234_g128856 = temp_output_279_0_g128856;
					float4 localSampleStochastic2D234_g128856 = SampleStochastic2D( Texture234_g128856 , Sampler234_g128856 , Coords234_g128856 , WorldPosition234_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128856) = _TerrainShaderTex9;
					SamplerState Sampler263_g128856 = SS30_g128901;
					half4 Coords263_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition263_g128856 = temp_output_279_0_g128856;
					half3 WorldNormal263_g128856 = temp_output_280_0_g128856;
					half4 localSampleStochastic3D263_g128856 = SampleStochastic3D( Texture263_g128856 , Sampler263_g128856 , Coords263_g128856 , WorldPosition263_g128856 , WorldNormal263_g128856 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8878_g128811 = localSamplePlanar3D246_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8878_g128811 = localSampleStochastic2D234_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8878_g128811 = localSampleStochastic3D263_g128856;
					#else
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#endif
					float4 temp_output_7_0_g128913 = _TerrainShaderMin9;
					float4 temp_output_9_0_g128913 = ( staticSwitch8878_g128811 - temp_output_7_0_g128913 );
					float4 temp_output_8815_0_g128811 = saturate( ( ( temp_output_9_0_g128913 * _TerrainShaderRcp9 ) + 0.0001 ) );
					half4 Masks_015_g128830 = temp_output_8815_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128866) = _TerrainShaderTex10;
					SamplerState Sampler238_g128866 = SS30_g128901;
					half4 Input_Terrain_Coords_108834_g128811 = _TerrainCoord10;
					float4 temp_output_37_0_g128866 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128866 = temp_output_37_0_g128866;
					float3 temp_output_279_0_g128866 = Input_Position9197_g128811;
					half3 WorldPosition238_g128866 = temp_output_279_0_g128866;
					half4 localSamplePlanar2D238_g128866 = SamplePlanar2D( Texture238_g128866 , Sampler238_g128866 , Coords238_g128866 , WorldPosition238_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128866) = _TerrainShaderTex10;
					SamplerState Sampler246_g128866 = SS30_g128901;
					half4 Coords246_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition246_g128866 = temp_output_279_0_g128866;
					float3 temp_output_280_0_g128866 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128866 = temp_output_280_0_g128866;
					half4 localSamplePlanar3D246_g128866 = SamplePlanar3D( Texture246_g128866 , Sampler246_g128866 , Coords246_g128866 , WorldPosition246_g128866 , WorldNormal246_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128866) = _TerrainShaderTex10;
					SamplerState Sampler234_g128866 = SS30_g128901;
					float4 Coords234_g128866 = temp_output_37_0_g128866;
					float3 WorldPosition234_g128866 = temp_output_279_0_g128866;
					float4 localSampleStochastic2D234_g128866 = SampleStochastic2D( Texture234_g128866 , Sampler234_g128866 , Coords234_g128866 , WorldPosition234_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128866) = _TerrainShaderTex10;
					SamplerState Sampler263_g128866 = SS30_g128901;
					half4 Coords263_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition263_g128866 = temp_output_279_0_g128866;
					half3 WorldNormal263_g128866 = temp_output_280_0_g128866;
					half4 localSampleStochastic3D263_g128866 = SampleStochastic3D( Texture263_g128866 , Sampler263_g128866 , Coords263_g128866 , WorldPosition263_g128866 , WorldNormal263_g128866 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8860_g128811 = localSamplePlanar3D246_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8860_g128811 = localSampleStochastic2D234_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8860_g128811 = localSampleStochastic3D263_g128866;
					#else
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#endif
					float4 temp_output_7_0_g128914 = _TerrainShaderMin10;
					float4 temp_output_9_0_g128914 = ( staticSwitch8860_g128811 - temp_output_7_0_g128914 );
					float4 temp_output_8818_0_g128811 = saturate( ( ( temp_output_9_0_g128914 * _TerrainShaderRcp10 ) + 0.0001 ) );
					half4 Masks_0210_g128830 = temp_output_8818_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128867) = _TerrainShaderTex11;
					SamplerState Sampler238_g128867 = SS30_g128901;
					half4 Input_Terrain_Coords_118835_g128811 = _TerrainCoord11;
					float4 temp_output_37_0_g128867 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128867 = temp_output_37_0_g128867;
					float3 temp_output_279_0_g128867 = Input_Position9197_g128811;
					half3 WorldPosition238_g128867 = temp_output_279_0_g128867;
					half4 localSamplePlanar2D238_g128867 = SamplePlanar2D( Texture238_g128867 , Sampler238_g128867 , Coords238_g128867 , WorldPosition238_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128867) = _TerrainShaderTex11;
					SamplerState Sampler246_g128867 = SS30_g128901;
					half4 Coords246_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition246_g128867 = temp_output_279_0_g128867;
					float3 temp_output_280_0_g128867 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128867 = temp_output_280_0_g128867;
					half4 localSamplePlanar3D246_g128867 = SamplePlanar3D( Texture246_g128867 , Sampler246_g128867 , Coords246_g128867 , WorldPosition246_g128867 , WorldNormal246_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128867) = _TerrainShaderTex11;
					SamplerState Sampler234_g128867 = SS30_g128901;
					float4 Coords234_g128867 = temp_output_37_0_g128867;
					float3 WorldPosition234_g128867 = temp_output_279_0_g128867;
					float4 localSampleStochastic2D234_g128867 = SampleStochastic2D( Texture234_g128867 , Sampler234_g128867 , Coords234_g128867 , WorldPosition234_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128867) = _TerrainShaderTex11;
					SamplerState Sampler263_g128867 = SS30_g128901;
					half4 Coords263_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition263_g128867 = temp_output_279_0_g128867;
					half3 WorldNormal263_g128867 = temp_output_280_0_g128867;
					half4 localSampleStochastic3D263_g128867 = SampleStochastic3D( Texture263_g128867 , Sampler263_g128867 , Coords263_g128867 , WorldPosition263_g128867 , WorldNormal263_g128867 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8861_g128811 = localSamplePlanar3D246_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8861_g128811 = localSampleStochastic2D234_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8861_g128811 = localSampleStochastic3D263_g128867;
					#else
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#endif
					float4 temp_output_7_0_g128915 = _TerrainShaderMin11;
					float4 temp_output_9_0_g128915 = ( staticSwitch8861_g128811 - temp_output_7_0_g128915 );
					float4 temp_output_8819_0_g128811 = saturate( ( ( temp_output_9_0_g128915 * _TerrainShaderRcp11 ) + 0.0001 ) );
					half4 Masks_0312_g128830 = temp_output_8819_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128868) = _TerrainShaderTex12;
					SamplerState Sampler238_g128868 = SS30_g128901;
					half4 Input_Terrain_Coords_128836_g128811 = _TerrainCoord12;
					float4 temp_output_37_0_g128868 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128868 = temp_output_37_0_g128868;
					float3 temp_output_279_0_g128868 = Input_Position9197_g128811;
					half3 WorldPosition238_g128868 = temp_output_279_0_g128868;
					half4 localSamplePlanar2D238_g128868 = SamplePlanar2D( Texture238_g128868 , Sampler238_g128868 , Coords238_g128868 , WorldPosition238_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128868) = _TerrainShaderTex12;
					SamplerState Sampler246_g128868 = SS30_g128901;
					half4 Coords246_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition246_g128868 = temp_output_279_0_g128868;
					float3 temp_output_280_0_g128868 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128868 = temp_output_280_0_g128868;
					half4 localSamplePlanar3D246_g128868 = SamplePlanar3D( Texture246_g128868 , Sampler246_g128868 , Coords246_g128868 , WorldPosition246_g128868 , WorldNormal246_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128868) = _TerrainShaderTex12;
					SamplerState Sampler234_g128868 = SS30_g128901;
					float4 Coords234_g128868 = temp_output_37_0_g128868;
					float3 WorldPosition234_g128868 = temp_output_279_0_g128868;
					float4 localSampleStochastic2D234_g128868 = SampleStochastic2D( Texture234_g128868 , Sampler234_g128868 , Coords234_g128868 , WorldPosition234_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128868) = _TerrainShaderTex12;
					SamplerState Sampler263_g128868 = SS30_g128901;
					half4 Coords263_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition263_g128868 = temp_output_279_0_g128868;
					half3 WorldNormal263_g128868 = temp_output_280_0_g128868;
					half4 localSampleStochastic3D263_g128868 = SampleStochastic3D( Texture263_g128868 , Sampler263_g128868 , Coords263_g128868 , WorldPosition263_g128868 , WorldNormal263_g128868 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8879_g128811 = localSamplePlanar3D246_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8879_g128811 = localSampleStochastic2D234_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8879_g128811 = localSampleStochastic3D263_g128868;
					#else
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#endif
					float4 temp_output_7_0_g128916 = _TerrainShaderMin12;
					float4 temp_output_9_0_g128916 = ( staticSwitch8879_g128811 - temp_output_7_0_g128916 );
					float4 temp_output_8820_0_g128811 = saturate( ( ( temp_output_9_0_g128916 * _TerrainShaderRcp12 ) + 0.0001 ) );
					half4 Masks_0414_g128830 = temp_output_8820_0_g128811;
					float4 appendResult29_g128830 = (float4((Masks_015_g128830).z , (Masks_0210_g128830).z , (Masks_0312_g128830).z , (Masks_0414_g128830).z));
					half4 Control31_g128830 = Terrain_Control_127712_g128811;
					half4 Terrain_Height_128870_g128811 = ( appendResult29_g128830 * Control31_g128830 );
					float4 heights_127362_g128811 = Terrain_Height_128870_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128864) = _TerrainShaderTex13;
					SamplerState Sampler238_g128864 = SS30_g128901;
					half4 Input_Terrain_Coords_138960_g128811 = _TerrainCoord13;
					float4 temp_output_37_0_g128864 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128864 = temp_output_37_0_g128864;
					float3 temp_output_279_0_g128864 = Input_Position9197_g128811;
					half3 WorldPosition238_g128864 = temp_output_279_0_g128864;
					half4 localSamplePlanar2D238_g128864 = SamplePlanar2D( Texture238_g128864 , Sampler238_g128864 , Coords238_g128864 , WorldPosition238_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128864) = _TerrainShaderTex13;
					SamplerState Sampler246_g128864 = SS30_g128901;
					half4 Coords246_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition246_g128864 = temp_output_279_0_g128864;
					float3 temp_output_280_0_g128864 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128864 = temp_output_280_0_g128864;
					half4 localSamplePlanar3D246_g128864 = SamplePlanar3D( Texture246_g128864 , Sampler246_g128864 , Coords246_g128864 , WorldPosition246_g128864 , WorldNormal246_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128864) = _TerrainShaderTex13;
					SamplerState Sampler234_g128864 = SS30_g128901;
					float4 Coords234_g128864 = temp_output_37_0_g128864;
					float3 WorldPosition234_g128864 = temp_output_279_0_g128864;
					float4 localSampleStochastic2D234_g128864 = SampleStochastic2D( Texture234_g128864 , Sampler234_g128864 , Coords234_g128864 , WorldPosition234_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128864) = _TerrainShaderTex13;
					SamplerState Sampler263_g128864 = SS30_g128901;
					half4 Coords263_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition263_g128864 = temp_output_279_0_g128864;
					half3 WorldNormal263_g128864 = temp_output_280_0_g128864;
					half4 localSampleStochastic3D263_g128864 = SampleStochastic3D( Texture263_g128864 , Sampler263_g128864 , Coords263_g128864 , WorldPosition263_g128864 , WorldNormal263_g128864 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch9000_g128811 = localSamplePlanar3D246_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch9000_g128811 = localSampleStochastic2D234_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch9000_g128811 = localSampleStochastic3D263_g128864;
					#else
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#endif
					float4 temp_output_7_0_g128917 = _TerrainShaderMin13;
					float4 temp_output_9_0_g128917 = ( staticSwitch9000_g128811 - temp_output_7_0_g128917 );
					float4 temp_output_8931_0_g128811 = saturate( ( ( temp_output_9_0_g128917 * _TerrainShaderRcp13 ) + 0.0001 ) );
					half4 Masks_015_g128836 = temp_output_8931_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128875) = _TerrainShaderTex14;
					SamplerState Sampler238_g128875 = SS30_g128901;
					half4 Input_Terrain_Coords_148961_g128811 = _TerrainCoord14;
					float4 temp_output_37_0_g128875 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128875 = temp_output_37_0_g128875;
					float3 temp_output_279_0_g128875 = Input_Position9197_g128811;
					half3 WorldPosition238_g128875 = temp_output_279_0_g128875;
					half4 localSamplePlanar2D238_g128875 = SamplePlanar2D( Texture238_g128875 , Sampler238_g128875 , Coords238_g128875 , WorldPosition238_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128875) = _TerrainShaderTex14;
					SamplerState Sampler246_g128875 = SS30_g128901;
					half4 Coords246_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition246_g128875 = temp_output_279_0_g128875;
					float3 temp_output_280_0_g128875 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128875 = temp_output_280_0_g128875;
					half4 localSamplePlanar3D246_g128875 = SamplePlanar3D( Texture246_g128875 , Sampler246_g128875 , Coords246_g128875 , WorldPosition246_g128875 , WorldNormal246_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128875) = _TerrainShaderTex14;
					SamplerState Sampler234_g128875 = SS30_g128901;
					float4 Coords234_g128875 = temp_output_37_0_g128875;
					float3 WorldPosition234_g128875 = temp_output_279_0_g128875;
					float4 localSampleStochastic2D234_g128875 = SampleStochastic2D( Texture234_g128875 , Sampler234_g128875 , Coords234_g128875 , WorldPosition234_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128875) = _TerrainShaderTex14;
					SamplerState Sampler263_g128875 = SS30_g128901;
					half4 Coords263_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition263_g128875 = temp_output_279_0_g128875;
					half3 WorldNormal263_g128875 = temp_output_280_0_g128875;
					half4 localSampleStochastic3D263_g128875 = SampleStochastic3D( Texture263_g128875 , Sampler263_g128875 , Coords263_g128875 , WorldPosition263_g128875 , WorldNormal263_g128875 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch9001_g128811 = localSamplePlanar3D246_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch9001_g128811 = localSampleStochastic2D234_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch9001_g128811 = localSampleStochastic3D263_g128875;
					#else
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#endif
					float4 temp_output_7_0_g128918 = _TerrainShaderMin14;
					float4 temp_output_9_0_g128918 = ( staticSwitch9001_g128811 - temp_output_7_0_g128918 );
					float4 temp_output_8934_0_g128811 = saturate( ( ( temp_output_9_0_g128918 * _TerrainShaderRcp14 ) + 0.0001 ) );
					half4 Masks_0210_g128836 = temp_output_8934_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128876) = _TerrainShaderTex15;
					SamplerState Sampler238_g128876 = SS30_g128901;
					half4 Input_Terrain_Coords_158962_g128811 = _TerrainCoord15;
					float4 temp_output_37_0_g128876 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128876 = temp_output_37_0_g128876;
					float3 temp_output_279_0_g128876 = Input_Position9197_g128811;
					half3 WorldPosition238_g128876 = temp_output_279_0_g128876;
					half4 localSamplePlanar2D238_g128876 = SamplePlanar2D( Texture238_g128876 , Sampler238_g128876 , Coords238_g128876 , WorldPosition238_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128876) = _TerrainShaderTex15;
					SamplerState Sampler246_g128876 = SS30_g128901;
					half4 Coords246_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition246_g128876 = temp_output_279_0_g128876;
					float3 temp_output_280_0_g128876 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128876 = temp_output_280_0_g128876;
					half4 localSamplePlanar3D246_g128876 = SamplePlanar3D( Texture246_g128876 , Sampler246_g128876 , Coords246_g128876 , WorldPosition246_g128876 , WorldNormal246_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128876) = _TerrainShaderTex15;
					SamplerState Sampler234_g128876 = SS30_g128901;
					float4 Coords234_g128876 = temp_output_37_0_g128876;
					float3 WorldPosition234_g128876 = temp_output_279_0_g128876;
					float4 localSampleStochastic2D234_g128876 = SampleStochastic2D( Texture234_g128876 , Sampler234_g128876 , Coords234_g128876 , WorldPosition234_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128876) = _TerrainShaderTex15;
					SamplerState Sampler263_g128876 = SS30_g128901;
					half4 Coords263_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition263_g128876 = temp_output_279_0_g128876;
					half3 WorldNormal263_g128876 = temp_output_280_0_g128876;
					half4 localSampleStochastic3D263_g128876 = SampleStochastic3D( Texture263_g128876 , Sampler263_g128876 , Coords263_g128876 , WorldPosition263_g128876 , WorldNormal263_g128876 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch9002_g128811 = localSamplePlanar3D246_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch9002_g128811 = localSampleStochastic2D234_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch9002_g128811 = localSampleStochastic3D263_g128876;
					#else
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#endif
					float4 temp_output_7_0_g128919 = _TerrainShaderMin15;
					float4 temp_output_9_0_g128919 = ( staticSwitch9002_g128811 - temp_output_7_0_g128919 );
					float4 temp_output_8935_0_g128811 = saturate( ( ( temp_output_9_0_g128919 * _TerrainShaderRcp15 ) + 0.0001 ) );
					half4 Masks_0312_g128836 = temp_output_8935_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128877) = _TerrainShaderTex16;
					SamplerState Sampler238_g128877 = SS30_g128901;
					half4 Input_Terrain_Coords_168959_g128811 = _TerrainCoord16;
					float4 temp_output_37_0_g128877 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128877 = temp_output_37_0_g128877;
					float3 temp_output_279_0_g128877 = Input_Position9197_g128811;
					half3 WorldPosition238_g128877 = temp_output_279_0_g128877;
					half4 localSamplePlanar2D238_g128877 = SamplePlanar2D( Texture238_g128877 , Sampler238_g128877 , Coords238_g128877 , WorldPosition238_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128877) = _TerrainShaderTex16;
					SamplerState Sampler246_g128877 = SS30_g128901;
					half4 Coords246_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition246_g128877 = temp_output_279_0_g128877;
					float3 temp_output_280_0_g128877 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128877 = temp_output_280_0_g128877;
					half4 localSamplePlanar3D246_g128877 = SamplePlanar3D( Texture246_g128877 , Sampler246_g128877 , Coords246_g128877 , WorldPosition246_g128877 , WorldNormal246_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128877) = _TerrainShaderTex16;
					SamplerState Sampler234_g128877 = SS30_g128901;
					float4 Coords234_g128877 = temp_output_37_0_g128877;
					float3 WorldPosition234_g128877 = temp_output_279_0_g128877;
					float4 localSampleStochastic2D234_g128877 = SampleStochastic2D( Texture234_g128877 , Sampler234_g128877 , Coords234_g128877 , WorldPosition234_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128877) = _TerrainShaderTex16;
					SamplerState Sampler263_g128877 = SS30_g128901;
					half4 Coords263_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition263_g128877 = temp_output_279_0_g128877;
					half3 WorldNormal263_g128877 = temp_output_280_0_g128877;
					half4 localSampleStochastic3D263_g128877 = SampleStochastic3D( Texture263_g128877 , Sampler263_g128877 , Coords263_g128877 , WorldPosition263_g128877 , WorldNormal263_g128877 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch9003_g128811 = localSamplePlanar3D246_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch9003_g128811 = localSampleStochastic2D234_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch9003_g128811 = localSampleStochastic3D263_g128877;
					#else
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#endif
					float4 temp_output_7_0_g128920 = _TerrainShaderMin16;
					float4 temp_output_9_0_g128920 = ( staticSwitch9003_g128811 - temp_output_7_0_g128920 );
					float4 temp_output_8936_0_g128811 = saturate( ( ( temp_output_9_0_g128920 * _TerrainShaderRcp16 ) + 0.0001 ) );
					half4 Masks_0414_g128836 = temp_output_8936_0_g128811;
					float4 appendResult29_g128836 = (float4((Masks_015_g128836).z , (Masks_0210_g128836).z , (Masks_0312_g128836).z , (Masks_0414_g128836).z));
					half4 Control31_g128836 = Terrain_Control_167711_g128811;
					half4 Terrain_Height_169015_g128811 = ( appendResult29_g128836 * Control31_g128836 );
					float4 heights_167362_g128811 = Terrain_Height_169015_g128811;
					float heightTransition7362_g128811 = ( 1.0 - _TerrainHeightBlendValue );
					float4 weights_047362_g128811 = float4( 0,0,0,0 );
					float4 weights_087362_g128811 = float4( 0,0,0,0 );
					float4 weights_127362_g128811 = float4( 0,0,0,0 );
					float4 weights_167362_g128811 = float4( 0,0,0,0 );
					{
					//Modified version of the HDRP terrain height based blending
					float maxHeight = 0;
					float4 weightedHeights_04 = float4( 0,0,0,0 );
					float4 weightedHeights_08 = float4( 0,0,0,0 );
					float4 weightedHeights_12 = float4( 0,0,0,0 );
					float4 weightedHeights_16 = float4( 0,0,0,0 );
					maxHeight = heights_047362_g128811.x;
					maxHeight = max(maxHeight, heights_047362_g128811.y);
					maxHeight = max(maxHeight, heights_047362_g128811.z);
					maxHeight = max(maxHeight, heights_047362_g128811.w);
					#ifdef TVE_TERRAIN_08
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_12
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_16
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					maxHeight = max(maxHeight, heights_167362_g128811.x);
					maxHeight = max(maxHeight, heights_167362_g128811.y);
					maxHeight = max(maxHeight, heights_167362_g128811.z);
					maxHeight = max(maxHeight, heights_167362_g128811.w);
					#endif
					float transition = max(heightTransition7362_g128811, 0.01);
					weightedHeights_04 = float4 ( heights_047362_g128811.x, heights_047362_g128811.y, heights_047362_g128811.z, heights_047362_g128811.w );
					weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
					weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g128811;
					#ifdef TVE_TERRAIN_08
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					#endif
					#ifdef TVE_TERRAIN_12
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					#endif
					#ifdef TVE_TERRAIN_16
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					weightedHeights_16 = float4 ( heights_167362_g128811.x, heights_167362_g128811.y, heights_167362_g128811.z, heights_167362_g128811.w );
					weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
					weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g128811;
					#endif
					float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
					float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
					float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
					float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
					float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
					weights_047362_g128811 = weightedHeights_04 / sumHeight.xxxx;
					#ifdef TVE_TERRAIN_08
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_12
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_16
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					weights_167362_g128811 = weightedHeights_16 / sumHeight.xxxx;
					#endif
					}
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8792_g128811 = weights_047362_g128811;
					#else
					float4 staticSwitch8792_g128811 = control_047362_g128811;
					#endif
					half4 Terrain_Weights_046781_g128811 = staticSwitch8792_g128811;
					half4 Weights52_g128815 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128841) = _TerrainAlbedoTex1;
					float localFilterTexture19_g128898 = ( 0.0 );
					SamplerState SS19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128898 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128898 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128898 = SamplerDefault19_g128898;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128898 = SamplerDefault19_g128898;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128898 = SamplerPoint19_g128898;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128898 = SamplerLow19_g128898;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128898 = SamplerMedium19_g128898;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128898 = SamplerHigh19_g128898;
					#endif
					}
					SamplerState Sampler238_g128841 = SS19_g128898;
					float4 temp_output_37_0_g128841 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128841 = temp_output_37_0_g128841;
					float3 temp_output_279_0_g128841 = Input_Position9197_g128811;
					half3 WorldPosition238_g128841 = temp_output_279_0_g128841;
					half4 localSamplePlanar2D238_g128841 = SamplePlanar2D( Texture238_g128841 , Sampler238_g128841 , Coords238_g128841 , WorldPosition238_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler246_g128841 = SS19_g128898;
					half4 Coords246_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition246_g128841 = temp_output_279_0_g128841;
					float3 temp_output_280_0_g128841 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128841 = temp_output_280_0_g128841;
					half4 localSamplePlanar3D246_g128841 = SamplePlanar3D( Texture246_g128841 , Sampler246_g128841 , Coords246_g128841 , WorldPosition246_g128841 , WorldNormal246_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler234_g128841 = SS19_g128898;
					float4 Coords234_g128841 = temp_output_37_0_g128841;
					float3 WorldPosition234_g128841 = temp_output_279_0_g128841;
					float4 localSampleStochastic2D234_g128841 = SampleStochastic2D( Texture234_g128841 , Sampler234_g128841 , Coords234_g128841 , WorldPosition234_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler263_g128841 = SS19_g128898;
					half4 Coords263_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition263_g128841 = temp_output_279_0_g128841;
					half3 WorldNormal263_g128841 = temp_output_280_0_g128841;
					half4 localSampleStochastic3D263_g128841 = SampleStochastic3D( Texture263_g128841 , Sampler263_g128841 , Coords263_g128841 , WorldPosition263_g128841 , WorldNormal263_g128841 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8614_g128811 = localSamplePlanar3D246_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8614_g128811 = localSampleStochastic2D234_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8614_g128811 = localSampleStochastic3D263_g128841;
					#else
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#endif
					half4 Layer133_g128815 = staticSwitch8614_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler238_g128842 = SS19_g128898;
					float4 temp_output_37_0_g128842 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128842 = temp_output_37_0_g128842;
					float3 temp_output_279_0_g128842 = Input_Position9197_g128811;
					half3 WorldPosition238_g128842 = temp_output_279_0_g128842;
					half4 localSamplePlanar2D238_g128842 = SamplePlanar2D( Texture238_g128842 , Sampler238_g128842 , Coords238_g128842 , WorldPosition238_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler246_g128842 = SS19_g128898;
					half4 Coords246_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition246_g128842 = temp_output_279_0_g128842;
					float3 temp_output_280_0_g128842 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128842 = temp_output_280_0_g128842;
					half4 localSamplePlanar3D246_g128842 = SamplePlanar3D( Texture246_g128842 , Sampler246_g128842 , Coords246_g128842 , WorldPosition246_g128842 , WorldNormal246_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler234_g128842 = SS19_g128898;
					float4 Coords234_g128842 = temp_output_37_0_g128842;
					float3 WorldPosition234_g128842 = temp_output_279_0_g128842;
					float4 localSampleStochastic2D234_g128842 = SampleStochastic2D( Texture234_g128842 , Sampler234_g128842 , Coords234_g128842 , WorldPosition234_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler263_g128842 = SS19_g128898;
					half4 Coords263_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition263_g128842 = temp_output_279_0_g128842;
					half3 WorldNormal263_g128842 = temp_output_280_0_g128842;
					half4 localSampleStochastic3D263_g128842 = SampleStochastic3D( Texture263_g128842 , Sampler263_g128842 , Coords263_g128842 , WorldPosition263_g128842 , WorldNormal263_g128842 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8629_g128811 = localSamplePlanar3D246_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8629_g128811 = localSampleStochastic2D234_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8629_g128811 = localSampleStochastic3D263_g128842;
					#else
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#endif
					half4 Layer237_g128815 = staticSwitch8629_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler238_g128845 = SS19_g128898;
					float4 temp_output_37_0_g128845 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128845 = temp_output_37_0_g128845;
					float3 temp_output_279_0_g128845 = Input_Position9197_g128811;
					half3 WorldPosition238_g128845 = temp_output_279_0_g128845;
					half4 localSamplePlanar2D238_g128845 = SamplePlanar2D( Texture238_g128845 , Sampler238_g128845 , Coords238_g128845 , WorldPosition238_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler246_g128845 = SS19_g128898;
					half4 Coords246_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition246_g128845 = temp_output_279_0_g128845;
					float3 temp_output_280_0_g128845 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128845 = temp_output_280_0_g128845;
					half4 localSamplePlanar3D246_g128845 = SamplePlanar3D( Texture246_g128845 , Sampler246_g128845 , Coords246_g128845 , WorldPosition246_g128845 , WorldNormal246_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler234_g128845 = SS19_g128898;
					float4 Coords234_g128845 = temp_output_37_0_g128845;
					float3 WorldPosition234_g128845 = temp_output_279_0_g128845;
					float4 localSampleStochastic2D234_g128845 = SampleStochastic2D( Texture234_g128845 , Sampler234_g128845 , Coords234_g128845 , WorldPosition234_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler263_g128845 = SS19_g128898;
					half4 Coords263_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition263_g128845 = temp_output_279_0_g128845;
					half3 WorldNormal263_g128845 = temp_output_280_0_g128845;
					half4 localSampleStochastic3D263_g128845 = SampleStochastic3D( Texture263_g128845 , Sampler263_g128845 , Coords263_g128845 , WorldPosition263_g128845 , WorldNormal263_g128845 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8630_g128811 = localSamplePlanar3D246_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8630_g128811 = localSampleStochastic2D234_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8630_g128811 = localSampleStochastic3D263_g128845;
					#else
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#endif
					half4 Layer338_g128815 = staticSwitch8630_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler238_g128847 = SS19_g128898;
					float4 temp_output_37_0_g128847 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128847 = temp_output_37_0_g128847;
					float3 temp_output_279_0_g128847 = Input_Position9197_g128811;
					half3 WorldPosition238_g128847 = temp_output_279_0_g128847;
					half4 localSamplePlanar2D238_g128847 = SamplePlanar2D( Texture238_g128847 , Sampler238_g128847 , Coords238_g128847 , WorldPosition238_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler246_g128847 = SS19_g128898;
					half4 Coords246_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition246_g128847 = temp_output_279_0_g128847;
					float3 temp_output_280_0_g128847 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128847 = temp_output_280_0_g128847;
					half4 localSamplePlanar3D246_g128847 = SamplePlanar3D( Texture246_g128847 , Sampler246_g128847 , Coords246_g128847 , WorldPosition246_g128847 , WorldNormal246_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler234_g128847 = SS19_g128898;
					float4 Coords234_g128847 = temp_output_37_0_g128847;
					float3 WorldPosition234_g128847 = temp_output_279_0_g128847;
					float4 localSampleStochastic2D234_g128847 = SampleStochastic2D( Texture234_g128847 , Sampler234_g128847 , Coords234_g128847 , WorldPosition234_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler263_g128847 = SS19_g128898;
					half4 Coords263_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition263_g128847 = temp_output_279_0_g128847;
					half3 WorldNormal263_g128847 = temp_output_280_0_g128847;
					half4 localSampleStochastic3D263_g128847 = SampleStochastic3D( Texture263_g128847 , Sampler263_g128847 , Coords263_g128847 , WorldPosition263_g128847 , WorldNormal263_g128847 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8631_g128811 = localSamplePlanar3D246_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8631_g128811 = localSampleStochastic2D234_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8631_g128811 = localSampleStochastic3D263_g128847;
					#else
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#endif
					half4 Layer439_g128815 = staticSwitch8631_g128811;
					float4 weightedBlendVar31_g128815 = Weights52_g128815;
					float4 weightedBlend31_g128815 = ( weightedBlendVar31_g128815.x*Layer133_g128815 + weightedBlendVar31_g128815.y*Layer237_g128815 + weightedBlendVar31_g128815.z*Layer338_g128815 + weightedBlendVar31_g128815.w*Layer439_g128815 );
					half4 Terrain_AAAA_047200_g128811 = weightedBlend31_g128815;
					half4 Layer_045_g128818 = Terrain_AAAA_047200_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8793_g128811 = weights_087362_g128811;
					#else
					float4 staticSwitch8793_g128811 = control_087362_g128811;
					#endif
					half4 Terrain_Weights_087340_g128811 = staticSwitch8793_g128811;
					half4 Weights52_g128822 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler238_g128851 = SS19_g128898;
					float4 temp_output_37_0_g128851 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128851 = temp_output_37_0_g128851;
					float3 temp_output_279_0_g128851 = Input_Position9197_g128811;
					half3 WorldPosition238_g128851 = temp_output_279_0_g128851;
					half4 localSamplePlanar2D238_g128851 = SamplePlanar2D( Texture238_g128851 , Sampler238_g128851 , Coords238_g128851 , WorldPosition238_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler246_g128851 = SS19_g128898;
					half4 Coords246_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition246_g128851 = temp_output_279_0_g128851;
					float3 temp_output_280_0_g128851 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128851 = temp_output_280_0_g128851;
					half4 localSamplePlanar3D246_g128851 = SamplePlanar3D( Texture246_g128851 , Sampler246_g128851 , Coords246_g128851 , WorldPosition246_g128851 , WorldNormal246_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler234_g128851 = SS19_g128898;
					float4 Coords234_g128851 = temp_output_37_0_g128851;
					float3 WorldPosition234_g128851 = temp_output_279_0_g128851;
					float4 localSampleStochastic2D234_g128851 = SampleStochastic2D( Texture234_g128851 , Sampler234_g128851 , Coords234_g128851 , WorldPosition234_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler263_g128851 = SS19_g128898;
					half4 Coords263_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition263_g128851 = temp_output_279_0_g128851;
					half3 WorldNormal263_g128851 = temp_output_280_0_g128851;
					half4 localSampleStochastic3D263_g128851 = SampleStochastic3D( Texture263_g128851 , Sampler263_g128851 , Coords263_g128851 , WorldPosition263_g128851 , WorldNormal263_g128851 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8690_g128811 = localSamplePlanar3D246_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8690_g128811 = localSampleStochastic2D234_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8690_g128811 = localSampleStochastic3D263_g128851;
					#else
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#endif
					half4 Layer133_g128822 = staticSwitch8690_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler238_g128878 = SS19_g128898;
					float4 temp_output_37_0_g128878 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128878 = temp_output_37_0_g128878;
					float3 temp_output_279_0_g128878 = Input_Position9197_g128811;
					half3 WorldPosition238_g128878 = temp_output_279_0_g128878;
					half4 localSamplePlanar2D238_g128878 = SamplePlanar2D( Texture238_g128878 , Sampler238_g128878 , Coords238_g128878 , WorldPosition238_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler246_g128878 = SS19_g128898;
					half4 Coords246_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition246_g128878 = temp_output_279_0_g128878;
					float3 temp_output_280_0_g128878 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128878 = temp_output_280_0_g128878;
					half4 localSamplePlanar3D246_g128878 = SamplePlanar3D( Texture246_g128878 , Sampler246_g128878 , Coords246_g128878 , WorldPosition246_g128878 , WorldNormal246_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler234_g128878 = SS19_g128898;
					float4 Coords234_g128878 = temp_output_37_0_g128878;
					float3 WorldPosition234_g128878 = temp_output_279_0_g128878;
					float4 localSampleStochastic2D234_g128878 = SampleStochastic2D( Texture234_g128878 , Sampler234_g128878 , Coords234_g128878 , WorldPosition234_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler263_g128878 = SS19_g128898;
					half4 Coords263_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition263_g128878 = temp_output_279_0_g128878;
					half3 WorldNormal263_g128878 = temp_output_280_0_g128878;
					half4 localSampleStochastic3D263_g128878 = SampleStochastic3D( Texture263_g128878 , Sampler263_g128878 , Coords263_g128878 , WorldPosition263_g128878 , WorldNormal263_g128878 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8691_g128811 = localSamplePlanar3D246_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8691_g128811 = localSampleStochastic2D234_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8691_g128811 = localSampleStochastic3D263_g128878;
					#else
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#endif
					half4 Layer237_g128822 = staticSwitch8691_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler238_g128879 = SS19_g128898;
					float4 temp_output_37_0_g128879 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128879 = temp_output_37_0_g128879;
					float3 temp_output_279_0_g128879 = Input_Position9197_g128811;
					half3 WorldPosition238_g128879 = temp_output_279_0_g128879;
					half4 localSamplePlanar2D238_g128879 = SamplePlanar2D( Texture238_g128879 , Sampler238_g128879 , Coords238_g128879 , WorldPosition238_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler246_g128879 = SS19_g128898;
					half4 Coords246_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition246_g128879 = temp_output_279_0_g128879;
					float3 temp_output_280_0_g128879 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128879 = temp_output_280_0_g128879;
					half4 localSamplePlanar3D246_g128879 = SamplePlanar3D( Texture246_g128879 , Sampler246_g128879 , Coords246_g128879 , WorldPosition246_g128879 , WorldNormal246_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler234_g128879 = SS19_g128898;
					float4 Coords234_g128879 = temp_output_37_0_g128879;
					float3 WorldPosition234_g128879 = temp_output_279_0_g128879;
					float4 localSampleStochastic2D234_g128879 = SampleStochastic2D( Texture234_g128879 , Sampler234_g128879 , Coords234_g128879 , WorldPosition234_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler263_g128879 = SS19_g128898;
					half4 Coords263_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition263_g128879 = temp_output_279_0_g128879;
					half3 WorldNormal263_g128879 = temp_output_280_0_g128879;
					half4 localSampleStochastic3D263_g128879 = SampleStochastic3D( Texture263_g128879 , Sampler263_g128879 , Coords263_g128879 , WorldPosition263_g128879 , WorldNormal263_g128879 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8692_g128811 = localSamplePlanar3D246_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8692_g128811 = localSampleStochastic2D234_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8692_g128811 = localSampleStochastic3D263_g128879;
					#else
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#endif
					half4 Layer338_g128822 = staticSwitch8692_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler238_g128880 = SS19_g128898;
					float4 temp_output_37_0_g128880 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128880 = temp_output_37_0_g128880;
					float3 temp_output_279_0_g128880 = Input_Position9197_g128811;
					half3 WorldPosition238_g128880 = temp_output_279_0_g128880;
					half4 localSamplePlanar2D238_g128880 = SamplePlanar2D( Texture238_g128880 , Sampler238_g128880 , Coords238_g128880 , WorldPosition238_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler246_g128880 = SS19_g128898;
					half4 Coords246_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition246_g128880 = temp_output_279_0_g128880;
					float3 temp_output_280_0_g128880 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128880 = temp_output_280_0_g128880;
					half4 localSamplePlanar3D246_g128880 = SamplePlanar3D( Texture246_g128880 , Sampler246_g128880 , Coords246_g128880 , WorldPosition246_g128880 , WorldNormal246_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler234_g128880 = SS19_g128898;
					float4 Coords234_g128880 = temp_output_37_0_g128880;
					float3 WorldPosition234_g128880 = temp_output_279_0_g128880;
					float4 localSampleStochastic2D234_g128880 = SampleStochastic2D( Texture234_g128880 , Sampler234_g128880 , Coords234_g128880 , WorldPosition234_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler263_g128880 = SS19_g128898;
					half4 Coords263_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition263_g128880 = temp_output_279_0_g128880;
					half3 WorldNormal263_g128880 = temp_output_280_0_g128880;
					half4 localSampleStochastic3D263_g128880 = SampleStochastic3D( Texture263_g128880 , Sampler263_g128880 , Coords263_g128880 , WorldPosition263_g128880 , WorldNormal263_g128880 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8693_g128811 = localSamplePlanar3D246_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8693_g128811 = localSampleStochastic2D234_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8693_g128811 = localSampleStochastic3D263_g128880;
					#else
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#endif
					half4 Layer439_g128822 = staticSwitch8693_g128811;
					float4 weightedBlendVar31_g128822 = Weights52_g128822;
					float4 weightedBlend31_g128822 = ( weightedBlendVar31_g128822.x*Layer133_g128822 + weightedBlendVar31_g128822.y*Layer237_g128822 + weightedBlendVar31_g128822.z*Layer338_g128822 + weightedBlendVar31_g128822.w*Layer439_g128822 );
					half4 Terrain_AAAA_088665_g128811 = weightedBlend31_g128822;
					half4 Layer_0810_g128818 = Terrain_AAAA_088665_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8794_g128811 = weights_127362_g128811;
					#else
					float4 staticSwitch8794_g128811 = control_127362_g128811;
					#endif
					half4 Terrain_Weights_127710_g128811 = staticSwitch8794_g128811;
					half4 Weights52_g128828 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler238_g128854 = SS19_g128898;
					float4 temp_output_37_0_g128854 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128854 = temp_output_37_0_g128854;
					float3 temp_output_279_0_g128854 = Input_Position9197_g128811;
					half3 WorldPosition238_g128854 = temp_output_279_0_g128854;
					half4 localSamplePlanar2D238_g128854 = SamplePlanar2D( Texture238_g128854 , Sampler238_g128854 , Coords238_g128854 , WorldPosition238_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler246_g128854 = SS19_g128898;
					half4 Coords246_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition246_g128854 = temp_output_279_0_g128854;
					float3 temp_output_280_0_g128854 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128854 = temp_output_280_0_g128854;
					half4 localSamplePlanar3D246_g128854 = SamplePlanar3D( Texture246_g128854 , Sampler246_g128854 , Coords246_g128854 , WorldPosition246_g128854 , WorldNormal246_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler234_g128854 = SS19_g128898;
					float4 Coords234_g128854 = temp_output_37_0_g128854;
					float3 WorldPosition234_g128854 = temp_output_279_0_g128854;
					float4 localSampleStochastic2D234_g128854 = SampleStochastic2D( Texture234_g128854 , Sampler234_g128854 , Coords234_g128854 , WorldPosition234_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler263_g128854 = SS19_g128898;
					half4 Coords263_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition263_g128854 = temp_output_279_0_g128854;
					half3 WorldNormal263_g128854 = temp_output_280_0_g128854;
					half4 localSampleStochastic3D263_g128854 = SampleStochastic3D( Texture263_g128854 , Sampler263_g128854 , Coords263_g128854 , WorldPosition263_g128854 , WorldNormal263_g128854 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8872_g128811 = localSamplePlanar3D246_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8872_g128811 = localSampleStochastic2D234_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8872_g128811 = localSampleStochastic3D263_g128854;
					#else
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#endif
					half4 Layer133_g128828 = staticSwitch8872_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler238_g128857 = SS19_g128898;
					float4 temp_output_37_0_g128857 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128857 = temp_output_37_0_g128857;
					float3 temp_output_279_0_g128857 = Input_Position9197_g128811;
					half3 WorldPosition238_g128857 = temp_output_279_0_g128857;
					half4 localSamplePlanar2D238_g128857 = SamplePlanar2D( Texture238_g128857 , Sampler238_g128857 , Coords238_g128857 , WorldPosition238_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler246_g128857 = SS19_g128898;
					half4 Coords246_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition246_g128857 = temp_output_279_0_g128857;
					float3 temp_output_280_0_g128857 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128857 = temp_output_280_0_g128857;
					half4 localSamplePlanar3D246_g128857 = SamplePlanar3D( Texture246_g128857 , Sampler246_g128857 , Coords246_g128857 , WorldPosition246_g128857 , WorldNormal246_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler234_g128857 = SS19_g128898;
					float4 Coords234_g128857 = temp_output_37_0_g128857;
					float3 WorldPosition234_g128857 = temp_output_279_0_g128857;
					float4 localSampleStochastic2D234_g128857 = SampleStochastic2D( Texture234_g128857 , Sampler234_g128857 , Coords234_g128857 , WorldPosition234_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler263_g128857 = SS19_g128898;
					half4 Coords263_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition263_g128857 = temp_output_279_0_g128857;
					half3 WorldNormal263_g128857 = temp_output_280_0_g128857;
					half4 localSampleStochastic3D263_g128857 = SampleStochastic3D( Texture263_g128857 , Sampler263_g128857 , Coords263_g128857 , WorldPosition263_g128857 , WorldNormal263_g128857 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8873_g128811 = localSamplePlanar3D246_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8873_g128811 = localSampleStochastic2D234_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8873_g128811 = localSampleStochastic3D263_g128857;
					#else
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#endif
					half4 Layer237_g128828 = staticSwitch8873_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler238_g128858 = SS19_g128898;
					float4 temp_output_37_0_g128858 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128858 = temp_output_37_0_g128858;
					float3 temp_output_279_0_g128858 = Input_Position9197_g128811;
					half3 WorldPosition238_g128858 = temp_output_279_0_g128858;
					half4 localSamplePlanar2D238_g128858 = SamplePlanar2D( Texture238_g128858 , Sampler238_g128858 , Coords238_g128858 , WorldPosition238_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler246_g128858 = SS19_g128898;
					half4 Coords246_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition246_g128858 = temp_output_279_0_g128858;
					float3 temp_output_280_0_g128858 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128858 = temp_output_280_0_g128858;
					half4 localSamplePlanar3D246_g128858 = SamplePlanar3D( Texture246_g128858 , Sampler246_g128858 , Coords246_g128858 , WorldPosition246_g128858 , WorldNormal246_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler234_g128858 = SS19_g128898;
					float4 Coords234_g128858 = temp_output_37_0_g128858;
					float3 WorldPosition234_g128858 = temp_output_279_0_g128858;
					float4 localSampleStochastic2D234_g128858 = SampleStochastic2D( Texture234_g128858 , Sampler234_g128858 , Coords234_g128858 , WorldPosition234_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler263_g128858 = SS19_g128898;
					half4 Coords263_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition263_g128858 = temp_output_279_0_g128858;
					half3 WorldNormal263_g128858 = temp_output_280_0_g128858;
					half4 localSampleStochastic3D263_g128858 = SampleStochastic3D( Texture263_g128858 , Sampler263_g128858 , Coords263_g128858 , WorldPosition263_g128858 , WorldNormal263_g128858 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8874_g128811 = localSamplePlanar3D246_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8874_g128811 = localSampleStochastic2D234_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8874_g128811 = localSampleStochastic3D263_g128858;
					#else
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#endif
					half4 Layer338_g128828 = staticSwitch8874_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler238_g128859 = SS19_g128898;
					float4 temp_output_37_0_g128859 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128859 = temp_output_37_0_g128859;
					float3 temp_output_279_0_g128859 = Input_Position9197_g128811;
					half3 WorldPosition238_g128859 = temp_output_279_0_g128859;
					half4 localSamplePlanar2D238_g128859 = SamplePlanar2D( Texture238_g128859 , Sampler238_g128859 , Coords238_g128859 , WorldPosition238_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler246_g128859 = SS19_g128898;
					half4 Coords246_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition246_g128859 = temp_output_279_0_g128859;
					float3 temp_output_280_0_g128859 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128859 = temp_output_280_0_g128859;
					half4 localSamplePlanar3D246_g128859 = SamplePlanar3D( Texture246_g128859 , Sampler246_g128859 , Coords246_g128859 , WorldPosition246_g128859 , WorldNormal246_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler234_g128859 = SS19_g128898;
					float4 Coords234_g128859 = temp_output_37_0_g128859;
					float3 WorldPosition234_g128859 = temp_output_279_0_g128859;
					float4 localSampleStochastic2D234_g128859 = SampleStochastic2D( Texture234_g128859 , Sampler234_g128859 , Coords234_g128859 , WorldPosition234_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler263_g128859 = SS19_g128898;
					half4 Coords263_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition263_g128859 = temp_output_279_0_g128859;
					half3 WorldNormal263_g128859 = temp_output_280_0_g128859;
					half4 localSampleStochastic3D263_g128859 = SampleStochastic3D( Texture263_g128859 , Sampler263_g128859 , Coords263_g128859 , WorldPosition263_g128859 , WorldNormal263_g128859 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8875_g128811 = localSamplePlanar3D246_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8875_g128811 = localSampleStochastic2D234_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8875_g128811 = localSampleStochastic3D263_g128859;
					#else
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#endif
					half4 Layer439_g128828 = staticSwitch8875_g128811;
					float4 weightedBlendVar31_g128828 = Weights52_g128828;
					float4 weightedBlend31_g128828 = ( weightedBlendVar31_g128828.x*Layer133_g128828 + weightedBlendVar31_g128828.y*Layer237_g128828 + weightedBlendVar31_g128828.z*Layer338_g128828 + weightedBlendVar31_g128828.w*Layer439_g128828 );
					half4 Terrain_AAAA_128851_g128811 = weightedBlend31_g128828;
					half4 Layer_1243_g128818 = Terrain_AAAA_128851_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8795_g128811 = weights_167362_g128811;
					#else
					float4 staticSwitch8795_g128811 = control_167362_g128811;
					#endif
					half4 Terrain_Weights_167709_g128811 = staticSwitch8795_g128811;
					half4 Weights52_g128834 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler238_g128863 = SS19_g128898;
					float4 temp_output_37_0_g128863 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128863 = temp_output_37_0_g128863;
					float3 temp_output_279_0_g128863 = Input_Position9197_g128811;
					half3 WorldPosition238_g128863 = temp_output_279_0_g128863;
					half4 localSamplePlanar2D238_g128863 = SamplePlanar2D( Texture238_g128863 , Sampler238_g128863 , Coords238_g128863 , WorldPosition238_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler246_g128863 = SS19_g128898;
					half4 Coords246_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition246_g128863 = temp_output_279_0_g128863;
					float3 temp_output_280_0_g128863 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128863 = temp_output_280_0_g128863;
					half4 localSamplePlanar3D246_g128863 = SamplePlanar3D( Texture246_g128863 , Sampler246_g128863 , Coords246_g128863 , WorldPosition246_g128863 , WorldNormal246_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler234_g128863 = SS19_g128898;
					float4 Coords234_g128863 = temp_output_37_0_g128863;
					float3 WorldPosition234_g128863 = temp_output_279_0_g128863;
					float4 localSampleStochastic2D234_g128863 = SampleStochastic2D( Texture234_g128863 , Sampler234_g128863 , Coords234_g128863 , WorldPosition234_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler263_g128863 = SS19_g128898;
					half4 Coords263_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition263_g128863 = temp_output_279_0_g128863;
					half3 WorldNormal263_g128863 = temp_output_280_0_g128863;
					half4 localSampleStochastic3D263_g128863 = SampleStochastic3D( Texture263_g128863 , Sampler263_g128863 , Coords263_g128863 , WorldPosition263_g128863 , WorldNormal263_g128863 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8972_g128811 = localSamplePlanar3D246_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8972_g128811 = localSampleStochastic2D234_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8972_g128811 = localSampleStochastic3D263_g128863;
					#else
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#endif
					half4 Layer133_g128834 = staticSwitch8972_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler238_g128869 = SS19_g128898;
					float4 temp_output_37_0_g128869 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128869 = temp_output_37_0_g128869;
					float3 temp_output_279_0_g128869 = Input_Position9197_g128811;
					half3 WorldPosition238_g128869 = temp_output_279_0_g128869;
					half4 localSamplePlanar2D238_g128869 = SamplePlanar2D( Texture238_g128869 , Sampler238_g128869 , Coords238_g128869 , WorldPosition238_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler246_g128869 = SS19_g128898;
					half4 Coords246_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition246_g128869 = temp_output_279_0_g128869;
					float3 temp_output_280_0_g128869 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128869 = temp_output_280_0_g128869;
					half4 localSamplePlanar3D246_g128869 = SamplePlanar3D( Texture246_g128869 , Sampler246_g128869 , Coords246_g128869 , WorldPosition246_g128869 , WorldNormal246_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler234_g128869 = SS19_g128898;
					float4 Coords234_g128869 = temp_output_37_0_g128869;
					float3 WorldPosition234_g128869 = temp_output_279_0_g128869;
					float4 localSampleStochastic2D234_g128869 = SampleStochastic2D( Texture234_g128869 , Sampler234_g128869 , Coords234_g128869 , WorldPosition234_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler263_g128869 = SS19_g128898;
					half4 Coords263_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition263_g128869 = temp_output_279_0_g128869;
					half3 WorldNormal263_g128869 = temp_output_280_0_g128869;
					half4 localSampleStochastic3D263_g128869 = SampleStochastic3D( Texture263_g128869 , Sampler263_g128869 , Coords263_g128869 , WorldPosition263_g128869 , WorldNormal263_g128869 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8973_g128811 = localSamplePlanar3D246_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8973_g128811 = localSampleStochastic2D234_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8973_g128811 = localSampleStochastic3D263_g128869;
					#else
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#endif
					half4 Layer237_g128834 = staticSwitch8973_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler238_g128870 = SS19_g128898;
					float4 temp_output_37_0_g128870 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128870 = temp_output_37_0_g128870;
					float3 temp_output_279_0_g128870 = Input_Position9197_g128811;
					half3 WorldPosition238_g128870 = temp_output_279_0_g128870;
					half4 localSamplePlanar2D238_g128870 = SamplePlanar2D( Texture238_g128870 , Sampler238_g128870 , Coords238_g128870 , WorldPosition238_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler246_g128870 = SS19_g128898;
					half4 Coords246_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition246_g128870 = temp_output_279_0_g128870;
					float3 temp_output_280_0_g128870 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128870 = temp_output_280_0_g128870;
					half4 localSamplePlanar3D246_g128870 = SamplePlanar3D( Texture246_g128870 , Sampler246_g128870 , Coords246_g128870 , WorldPosition246_g128870 , WorldNormal246_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler234_g128870 = SS19_g128898;
					float4 Coords234_g128870 = temp_output_37_0_g128870;
					float3 WorldPosition234_g128870 = temp_output_279_0_g128870;
					float4 localSampleStochastic2D234_g128870 = SampleStochastic2D( Texture234_g128870 , Sampler234_g128870 , Coords234_g128870 , WorldPosition234_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler263_g128870 = SS19_g128898;
					half4 Coords263_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition263_g128870 = temp_output_279_0_g128870;
					half3 WorldNormal263_g128870 = temp_output_280_0_g128870;
					half4 localSampleStochastic3D263_g128870 = SampleStochastic3D( Texture263_g128870 , Sampler263_g128870 , Coords263_g128870 , WorldPosition263_g128870 , WorldNormal263_g128870 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8974_g128811 = localSamplePlanar3D246_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8974_g128811 = localSampleStochastic2D234_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8974_g128811 = localSampleStochastic3D263_g128870;
					#else
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#endif
					half4 Layer338_g128834 = staticSwitch8974_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler238_g128871 = SS19_g128898;
					float4 temp_output_37_0_g128871 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128871 = temp_output_37_0_g128871;
					float3 temp_output_279_0_g128871 = Input_Position9197_g128811;
					half3 WorldPosition238_g128871 = temp_output_279_0_g128871;
					half4 localSamplePlanar2D238_g128871 = SamplePlanar2D( Texture238_g128871 , Sampler238_g128871 , Coords238_g128871 , WorldPosition238_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler246_g128871 = SS19_g128898;
					half4 Coords246_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition246_g128871 = temp_output_279_0_g128871;
					float3 temp_output_280_0_g128871 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128871 = temp_output_280_0_g128871;
					half4 localSamplePlanar3D246_g128871 = SamplePlanar3D( Texture246_g128871 , Sampler246_g128871 , Coords246_g128871 , WorldPosition246_g128871 , WorldNormal246_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler234_g128871 = SS19_g128898;
					float4 Coords234_g128871 = temp_output_37_0_g128871;
					float3 WorldPosition234_g128871 = temp_output_279_0_g128871;
					float4 localSampleStochastic2D234_g128871 = SampleStochastic2D( Texture234_g128871 , Sampler234_g128871 , Coords234_g128871 , WorldPosition234_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler263_g128871 = SS19_g128898;
					half4 Coords263_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition263_g128871 = temp_output_279_0_g128871;
					half3 WorldNormal263_g128871 = temp_output_280_0_g128871;
					half4 localSampleStochastic3D263_g128871 = SampleStochastic3D( Texture263_g128871 , Sampler263_g128871 , Coords263_g128871 , WorldPosition263_g128871 , WorldNormal263_g128871 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8975_g128811 = localSamplePlanar3D246_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8975_g128811 = localSampleStochastic2D234_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8975_g128811 = localSampleStochastic3D263_g128871;
					#else
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#endif
					half4 Layer439_g128834 = staticSwitch8975_g128811;
					float4 weightedBlendVar31_g128834 = Weights52_g128834;
					float4 weightedBlend31_g128834 = ( weightedBlendVar31_g128834.x*Layer133_g128834 + weightedBlendVar31_g128834.y*Layer237_g128834 + weightedBlendVar31_g128834.z*Layer338_g128834 + weightedBlendVar31_g128834.w*Layer439_g128834 );
					half4 Terrain_AAAA_168986_g128811 = weightedBlend31_g128834;
					half4 Layer_1644_g128818 = Terrain_AAAA_168986_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 + Layer_1644_g128818 );
					#else
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#endif
					half4 Blend_Albedo7468_g128811 = staticSwitch40_g128818;
					half4 Weights52_g128889 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128889 = _TerrainColor1;
					half4 Layer237_g128889 = _TerrainColor2;
					half4 Layer338_g128889 = _TerrainColor3;
					half4 Layer439_g128889 = _TerrainColor4;
					float4 weightedBlendVar31_g128889 = Weights52_g128889;
					float4 weightedBlend31_g128889 = ( weightedBlendVar31_g128889.x*Layer133_g128889 + weightedBlendVar31_g128889.y*Layer237_g128889 + weightedBlendVar31_g128889.z*Layer338_g128889 + weightedBlendVar31_g128889.w*Layer439_g128889 );
					half4 Terrain_Color_049349_g128811 = weightedBlend31_g128889;
					half4 Layer_045_g128894 = Terrain_Color_049349_g128811;
					half4 Weights52_g128890 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128890 = _TerrainColor5;
					half4 Layer237_g128890 = _TerrainColor6;
					half4 Layer338_g128890 = _TerrainColor7;
					half4 Layer439_g128890 = _TerrainColor8;
					float4 weightedBlendVar31_g128890 = Weights52_g128890;
					float4 weightedBlend31_g128890 = ( weightedBlendVar31_g128890.x*Layer133_g128890 + weightedBlendVar31_g128890.y*Layer237_g128890 + weightedBlendVar31_g128890.z*Layer338_g128890 + weightedBlendVar31_g128890.w*Layer439_g128890 );
					half4 Terrain_Color_089361_g128811 = weightedBlend31_g128890;
					half4 Layer_0810_g128894 = Terrain_Color_089361_g128811;
					half4 Weights52_g128891 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128891 = _TerrainColor9;
					half4 Layer237_g128891 = _TerrainColor10;
					half4 Layer338_g128891 = _TerrainColor11;
					half4 Layer439_g128891 = _TerrainColor12;
					float4 weightedBlendVar31_g128891 = Weights52_g128891;
					float4 weightedBlend31_g128891 = ( weightedBlendVar31_g128891.x*Layer133_g128891 + weightedBlendVar31_g128891.y*Layer237_g128891 + weightedBlendVar31_g128891.z*Layer338_g128891 + weightedBlendVar31_g128891.w*Layer439_g128891 );
					half4 Terrain_Color_129373_g128811 = weightedBlend31_g128891;
					half4 Layer_1243_g128894 = Terrain_Color_129373_g128811;
					half4 Weights52_g128892 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128892 = _TerrainColor13;
					half4 Layer237_g128892 = _TerrainColor14;
					half4 Layer338_g128892 = _TerrainColor15;
					half4 Layer439_g128892 = _TerrainColor16;
					float4 weightedBlendVar31_g128892 = Weights52_g128892;
					float4 weightedBlend31_g128892 = ( weightedBlendVar31_g128892.x*Layer133_g128892 + weightedBlendVar31_g128892.y*Layer237_g128892 + weightedBlendVar31_g128892.z*Layer338_g128892 + weightedBlendVar31_g128892.w*Layer439_g128892 );
					half4 Terrain_Color_169381_g128811 = weightedBlend31_g128892;
					half4 Layer_1644_g128894 = Terrain_Color_169381_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 + Layer_1644_g128894 );
					#else
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#endif
					half4 Blend_TerrainColor9387_g128811 = staticSwitch40_g128894;
					half3 Final_Albedo9144_g128811 = ( (Blend_Albedo7468_g128811).xyz * (Blend_TerrainColor9387_g128811).rgb * (_TerrainColor).rgb );
					half3 Local_Albedo9199_g128810 = Final_Albedo9144_g128811;
					float3 In_Albedo3_g128923 = Local_Albedo9199_g128810;
					float3 In_AlbedoRaw3_g128923 = Local_Albedo9199_g128810;
					float3x3 ase_worldToTangent = float3x3( WorldTangent, WorldBiTangent, WorldNormal );
					half4 Weights52_g128812 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128887) = _TerrainNormalTex1;
					float localFilterTexture29_g128902 = ( 0.0 );
					SamplerState SS29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128902 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128902 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128902 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128902 = SamplerDefault29_g128902;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128902 = SamplerDefault29_g128902;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128902 = SamplerPoint29_g128902;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128902 = SamplerLow29_g128902;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128902 = SamplerMedium29_g128902;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128902 = SamplerHigh29_g128902;
					#endif
					}
					SamplerState Sampler238_g128887 = SS29_g128902;
					float4 temp_output_37_0_g128887 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128887 = temp_output_37_0_g128887;
					float3 temp_output_279_0_g128887 = Input_Position9197_g128811;
					half3 WorldPosition238_g128887 = temp_output_279_0_g128887;
					half4 localSamplePlanar2D238_g128887 = SamplePlanar2D( Texture238_g128887 , Sampler238_g128887 , Coords238_g128887 , WorldPosition238_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128887) = _TerrainNormalTex1;
					SamplerState Sampler246_g128887 = SS29_g128902;
					half4 Coords246_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition246_g128887 = temp_output_279_0_g128887;
					float3 temp_output_280_0_g128887 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128887 = temp_output_280_0_g128887;
					half4 localSamplePlanar3D246_g128887 = SamplePlanar3D( Texture246_g128887 , Sampler246_g128887 , Coords246_g128887 , WorldPosition246_g128887 , WorldNormal246_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128887) = _TerrainNormalTex1;
					SamplerState Sampler234_g128887 = SS29_g128902;
					float4 Coords234_g128887 = temp_output_37_0_g128887;
					float3 WorldPosition234_g128887 = temp_output_279_0_g128887;
					float4 localSampleStochastic2D234_g128887 = SampleStochastic2D( Texture234_g128887 , Sampler234_g128887 , Coords234_g128887 , WorldPosition234_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128887) = _TerrainNormalTex1;
					SamplerState Sampler263_g128887 = SS29_g128902;
					half4 Coords263_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition263_g128887 = temp_output_279_0_g128887;
					half3 WorldNormal263_g128887 = temp_output_280_0_g128887;
					half4 localSampleStochastic3D263_g128887 = SampleStochastic3D( Texture263_g128887 , Sampler263_g128887 , Coords263_g128887 , WorldPosition263_g128887 , WorldNormal263_g128887 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8635_g128811 = localSamplePlanar3D246_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8635_g128811 = localSampleStochastic2D234_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8635_g128811 = localSampleStochastic3D263_g128887;
					#else
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#endif
					half4 Layer133_g128812 = staticSwitch8635_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128843) = _TerrainNormalTex2;
					SamplerState Sampler238_g128843 = SS29_g128902;
					float4 temp_output_37_0_g128843 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128843 = temp_output_37_0_g128843;
					float3 temp_output_279_0_g128843 = Input_Position9197_g128811;
					half3 WorldPosition238_g128843 = temp_output_279_0_g128843;
					half4 localSamplePlanar2D238_g128843 = SamplePlanar2D( Texture238_g128843 , Sampler238_g128843 , Coords238_g128843 , WorldPosition238_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128843) = _TerrainNormalTex2;
					SamplerState Sampler246_g128843 = SS29_g128902;
					half4 Coords246_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition246_g128843 = temp_output_279_0_g128843;
					float3 temp_output_280_0_g128843 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128843 = temp_output_280_0_g128843;
					half4 localSamplePlanar3D246_g128843 = SamplePlanar3D( Texture246_g128843 , Sampler246_g128843 , Coords246_g128843 , WorldPosition246_g128843 , WorldNormal246_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128843) = _TerrainNormalTex2;
					SamplerState Sampler234_g128843 = SS29_g128902;
					float4 Coords234_g128843 = temp_output_37_0_g128843;
					float3 WorldPosition234_g128843 = temp_output_279_0_g128843;
					float4 localSampleStochastic2D234_g128843 = SampleStochastic2D( Texture234_g128843 , Sampler234_g128843 , Coords234_g128843 , WorldPosition234_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128843) = _TerrainNormalTex2;
					SamplerState Sampler263_g128843 = SS29_g128902;
					half4 Coords263_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition263_g128843 = temp_output_279_0_g128843;
					half3 WorldNormal263_g128843 = temp_output_280_0_g128843;
					half4 localSampleStochastic3D263_g128843 = SampleStochastic3D( Texture263_g128843 , Sampler263_g128843 , Coords263_g128843 , WorldPosition263_g128843 , WorldNormal263_g128843 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8636_g128811 = localSamplePlanar3D246_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8636_g128811 = localSampleStochastic2D234_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8636_g128811 = localSampleStochastic3D263_g128843;
					#else
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#endif
					half4 Layer237_g128812 = staticSwitch8636_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128846) = _TerrainNormalTex3;
					SamplerState Sampler238_g128846 = SS29_g128902;
					float4 temp_output_37_0_g128846 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128846 = temp_output_37_0_g128846;
					float3 temp_output_279_0_g128846 = Input_Position9197_g128811;
					half3 WorldPosition238_g128846 = temp_output_279_0_g128846;
					half4 localSamplePlanar2D238_g128846 = SamplePlanar2D( Texture238_g128846 , Sampler238_g128846 , Coords238_g128846 , WorldPosition238_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128846) = _TerrainNormalTex3;
					SamplerState Sampler246_g128846 = SS29_g128902;
					half4 Coords246_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition246_g128846 = temp_output_279_0_g128846;
					float3 temp_output_280_0_g128846 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128846 = temp_output_280_0_g128846;
					half4 localSamplePlanar3D246_g128846 = SamplePlanar3D( Texture246_g128846 , Sampler246_g128846 , Coords246_g128846 , WorldPosition246_g128846 , WorldNormal246_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128846) = _TerrainNormalTex3;
					SamplerState Sampler234_g128846 = SS29_g128902;
					float4 Coords234_g128846 = temp_output_37_0_g128846;
					float3 WorldPosition234_g128846 = temp_output_279_0_g128846;
					float4 localSampleStochastic2D234_g128846 = SampleStochastic2D( Texture234_g128846 , Sampler234_g128846 , Coords234_g128846 , WorldPosition234_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128846) = _TerrainNormalTex3;
					SamplerState Sampler263_g128846 = SS29_g128902;
					half4 Coords263_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition263_g128846 = temp_output_279_0_g128846;
					half3 WorldNormal263_g128846 = temp_output_280_0_g128846;
					half4 localSampleStochastic3D263_g128846 = SampleStochastic3D( Texture263_g128846 , Sampler263_g128846 , Coords263_g128846 , WorldPosition263_g128846 , WorldNormal263_g128846 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8637_g128811 = localSamplePlanar3D246_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8637_g128811 = localSampleStochastic2D234_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8637_g128811 = localSampleStochastic3D263_g128846;
					#else
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#endif
					half4 Layer338_g128812 = staticSwitch8637_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128848) = _TerrainNormalTex4;
					SamplerState Sampler238_g128848 = SS29_g128902;
					float4 temp_output_37_0_g128848 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128848 = temp_output_37_0_g128848;
					float3 temp_output_279_0_g128848 = Input_Position9197_g128811;
					half3 WorldPosition238_g128848 = temp_output_279_0_g128848;
					half4 localSamplePlanar2D238_g128848 = SamplePlanar2D( Texture238_g128848 , Sampler238_g128848 , Coords238_g128848 , WorldPosition238_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128848) = _TerrainNormalTex4;
					SamplerState Sampler246_g128848 = SS29_g128902;
					half4 Coords246_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition246_g128848 = temp_output_279_0_g128848;
					float3 temp_output_280_0_g128848 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128848 = temp_output_280_0_g128848;
					half4 localSamplePlanar3D246_g128848 = SamplePlanar3D( Texture246_g128848 , Sampler246_g128848 , Coords246_g128848 , WorldPosition246_g128848 , WorldNormal246_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128848) = _TerrainNormalTex4;
					SamplerState Sampler234_g128848 = SS29_g128902;
					float4 Coords234_g128848 = temp_output_37_0_g128848;
					float3 WorldPosition234_g128848 = temp_output_279_0_g128848;
					float4 localSampleStochastic2D234_g128848 = SampleStochastic2D( Texture234_g128848 , Sampler234_g128848 , Coords234_g128848 , WorldPosition234_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128848) = _TerrainNormalTex4;
					SamplerState Sampler263_g128848 = SS29_g128902;
					half4 Coords263_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition263_g128848 = temp_output_279_0_g128848;
					half3 WorldNormal263_g128848 = temp_output_280_0_g128848;
					half4 localSampleStochastic3D263_g128848 = SampleStochastic3D( Texture263_g128848 , Sampler263_g128848 , Coords263_g128848 , WorldPosition263_g128848 , WorldNormal263_g128848 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8638_g128811 = localSamplePlanar3D246_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8638_g128811 = localSampleStochastic2D234_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8638_g128811 = localSampleStochastic3D263_g128848;
					#else
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#endif
					half4 Layer439_g128812 = staticSwitch8638_g128811;
					float4 weightedBlendVar31_g128812 = Weights52_g128812;
					float4 weightedBlend31_g128812 = ( weightedBlendVar31_g128812.x*Layer133_g128812 + weightedBlendVar31_g128812.y*Layer237_g128812 + weightedBlendVar31_g128812.z*Layer338_g128812 + weightedBlendVar31_g128812.w*Layer439_g128812 );
					half4 Terrain_B_047202_g128811 = weightedBlend31_g128812;
					half4 Layer_045_g128817 = Terrain_B_047202_g128811;
					half4 Weights52_g128823 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128852) = _TerrainNormalTex5;
					SamplerState Sampler238_g128852 = SS29_g128902;
					float4 temp_output_37_0_g128852 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128852 = temp_output_37_0_g128852;
					float3 temp_output_279_0_g128852 = Input_Position9197_g128811;
					half3 WorldPosition238_g128852 = temp_output_279_0_g128852;
					half4 localSamplePlanar2D238_g128852 = SamplePlanar2D( Texture238_g128852 , Sampler238_g128852 , Coords238_g128852 , WorldPosition238_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128852) = _TerrainNormalTex5;
					SamplerState Sampler246_g128852 = SS29_g128902;
					half4 Coords246_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition246_g128852 = temp_output_279_0_g128852;
					float3 temp_output_280_0_g128852 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128852 = temp_output_280_0_g128852;
					half4 localSamplePlanar3D246_g128852 = SamplePlanar3D( Texture246_g128852 , Sampler246_g128852 , Coords246_g128852 , WorldPosition246_g128852 , WorldNormal246_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128852) = _TerrainNormalTex5;
					SamplerState Sampler234_g128852 = SS29_g128902;
					float4 Coords234_g128852 = temp_output_37_0_g128852;
					float3 WorldPosition234_g128852 = temp_output_279_0_g128852;
					float4 localSampleStochastic2D234_g128852 = SampleStochastic2D( Texture234_g128852 , Sampler234_g128852 , Coords234_g128852 , WorldPosition234_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128852) = _TerrainNormalTex5;
					SamplerState Sampler263_g128852 = SS29_g128902;
					half4 Coords263_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition263_g128852 = temp_output_279_0_g128852;
					half3 WorldNormal263_g128852 = temp_output_280_0_g128852;
					half4 localSampleStochastic3D263_g128852 = SampleStochastic3D( Texture263_g128852 , Sampler263_g128852 , Coords263_g128852 , WorldPosition263_g128852 , WorldNormal263_g128852 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8686_g128811 = localSamplePlanar3D246_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8686_g128811 = localSampleStochastic2D234_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8686_g128811 = localSampleStochastic3D263_g128852;
					#else
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#endif
					half4 Layer133_g128823 = staticSwitch8686_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128881) = _TerrainNormalTex6;
					SamplerState Sampler238_g128881 = SS29_g128902;
					float4 temp_output_37_0_g128881 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128881 = temp_output_37_0_g128881;
					float3 temp_output_279_0_g128881 = Input_Position9197_g128811;
					half3 WorldPosition238_g128881 = temp_output_279_0_g128881;
					half4 localSamplePlanar2D238_g128881 = SamplePlanar2D( Texture238_g128881 , Sampler238_g128881 , Coords238_g128881 , WorldPosition238_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128881) = _TerrainNormalTex6;
					SamplerState Sampler246_g128881 = SS29_g128902;
					half4 Coords246_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition246_g128881 = temp_output_279_0_g128881;
					float3 temp_output_280_0_g128881 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128881 = temp_output_280_0_g128881;
					half4 localSamplePlanar3D246_g128881 = SamplePlanar3D( Texture246_g128881 , Sampler246_g128881 , Coords246_g128881 , WorldPosition246_g128881 , WorldNormal246_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128881) = _TerrainNormalTex6;
					SamplerState Sampler234_g128881 = SS29_g128902;
					float4 Coords234_g128881 = temp_output_37_0_g128881;
					float3 WorldPosition234_g128881 = temp_output_279_0_g128881;
					float4 localSampleStochastic2D234_g128881 = SampleStochastic2D( Texture234_g128881 , Sampler234_g128881 , Coords234_g128881 , WorldPosition234_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128881) = _TerrainNormalTex6;
					SamplerState Sampler263_g128881 = SS29_g128902;
					half4 Coords263_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition263_g128881 = temp_output_279_0_g128881;
					half3 WorldNormal263_g128881 = temp_output_280_0_g128881;
					half4 localSampleStochastic3D263_g128881 = SampleStochastic3D( Texture263_g128881 , Sampler263_g128881 , Coords263_g128881 , WorldPosition263_g128881 , WorldNormal263_g128881 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8687_g128811 = localSamplePlanar3D246_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8687_g128811 = localSampleStochastic2D234_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8687_g128811 = localSampleStochastic3D263_g128881;
					#else
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#endif
					half4 Layer237_g128823 = staticSwitch8687_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128882) = _TerrainNormalTex7;
					SamplerState Sampler238_g128882 = SS29_g128902;
					float4 temp_output_37_0_g128882 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128882 = temp_output_37_0_g128882;
					float3 temp_output_279_0_g128882 = Input_Position9197_g128811;
					half3 WorldPosition238_g128882 = temp_output_279_0_g128882;
					half4 localSamplePlanar2D238_g128882 = SamplePlanar2D( Texture238_g128882 , Sampler238_g128882 , Coords238_g128882 , WorldPosition238_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128882) = _TerrainNormalTex7;
					SamplerState Sampler246_g128882 = SS29_g128902;
					half4 Coords246_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition246_g128882 = temp_output_279_0_g128882;
					float3 temp_output_280_0_g128882 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128882 = temp_output_280_0_g128882;
					half4 localSamplePlanar3D246_g128882 = SamplePlanar3D( Texture246_g128882 , Sampler246_g128882 , Coords246_g128882 , WorldPosition246_g128882 , WorldNormal246_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128882) = _TerrainNormalTex7;
					SamplerState Sampler234_g128882 = SS29_g128902;
					float4 Coords234_g128882 = temp_output_37_0_g128882;
					float3 WorldPosition234_g128882 = temp_output_279_0_g128882;
					float4 localSampleStochastic2D234_g128882 = SampleStochastic2D( Texture234_g128882 , Sampler234_g128882 , Coords234_g128882 , WorldPosition234_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128882) = _TerrainNormalTex7;
					SamplerState Sampler263_g128882 = SS29_g128902;
					half4 Coords263_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition263_g128882 = temp_output_279_0_g128882;
					half3 WorldNormal263_g128882 = temp_output_280_0_g128882;
					half4 localSampleStochastic3D263_g128882 = SampleStochastic3D( Texture263_g128882 , Sampler263_g128882 , Coords263_g128882 , WorldPosition263_g128882 , WorldNormal263_g128882 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8688_g128811 = localSamplePlanar3D246_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8688_g128811 = localSampleStochastic2D234_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8688_g128811 = localSampleStochastic3D263_g128882;
					#else
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#endif
					half4 Layer338_g128823 = staticSwitch8688_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128883) = _TerrainNormalTex8;
					SamplerState Sampler238_g128883 = SS29_g128902;
					float4 temp_output_37_0_g128883 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128883 = temp_output_37_0_g128883;
					float3 temp_output_279_0_g128883 = Input_Position9197_g128811;
					half3 WorldPosition238_g128883 = temp_output_279_0_g128883;
					half4 localSamplePlanar2D238_g128883 = SamplePlanar2D( Texture238_g128883 , Sampler238_g128883 , Coords238_g128883 , WorldPosition238_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128883) = _TerrainNormalTex8;
					SamplerState Sampler246_g128883 = SS29_g128902;
					half4 Coords246_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition246_g128883 = temp_output_279_0_g128883;
					float3 temp_output_280_0_g128883 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128883 = temp_output_280_0_g128883;
					half4 localSamplePlanar3D246_g128883 = SamplePlanar3D( Texture246_g128883 , Sampler246_g128883 , Coords246_g128883 , WorldPosition246_g128883 , WorldNormal246_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128883) = _TerrainNormalTex8;
					SamplerState Sampler234_g128883 = SS29_g128902;
					float4 Coords234_g128883 = temp_output_37_0_g128883;
					float3 WorldPosition234_g128883 = temp_output_279_0_g128883;
					float4 localSampleStochastic2D234_g128883 = SampleStochastic2D( Texture234_g128883 , Sampler234_g128883 , Coords234_g128883 , WorldPosition234_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128883) = _TerrainNormalTex8;
					SamplerState Sampler263_g128883 = SS29_g128902;
					half4 Coords263_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition263_g128883 = temp_output_279_0_g128883;
					half3 WorldNormal263_g128883 = temp_output_280_0_g128883;
					half4 localSampleStochastic3D263_g128883 = SampleStochastic3D( Texture263_g128883 , Sampler263_g128883 , Coords263_g128883 , WorldPosition263_g128883 , WorldNormal263_g128883 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8689_g128811 = localSamplePlanar3D246_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8689_g128811 = localSampleStochastic2D234_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8689_g128811 = localSampleStochastic3D263_g128883;
					#else
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#endif
					half4 Layer439_g128823 = staticSwitch8689_g128811;
					float4 weightedBlendVar31_g128823 = Weights52_g128823;
					float4 weightedBlend31_g128823 = ( weightedBlendVar31_g128823.x*Layer133_g128823 + weightedBlendVar31_g128823.y*Layer237_g128823 + weightedBlendVar31_g128823.z*Layer338_g128823 + weightedBlendVar31_g128823.w*Layer439_g128823 );
					half4 Terrain_B_088684_g128811 = weightedBlend31_g128823;
					half4 Layer_0810_g128817 = Terrain_B_088684_g128811;
					half4 Weights52_g128829 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128855) = _TerrainNormalTex9;
					SamplerState Sampler238_g128855 = SS29_g128902;
					float4 temp_output_37_0_g128855 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128855 = temp_output_37_0_g128855;
					float3 temp_output_279_0_g128855 = Input_Position9197_g128811;
					half3 WorldPosition238_g128855 = temp_output_279_0_g128855;
					half4 localSamplePlanar2D238_g128855 = SamplePlanar2D( Texture238_g128855 , Sampler238_g128855 , Coords238_g128855 , WorldPosition238_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128855) = _TerrainNormalTex9;
					SamplerState Sampler246_g128855 = SS29_g128902;
					half4 Coords246_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition246_g128855 = temp_output_279_0_g128855;
					float3 temp_output_280_0_g128855 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128855 = temp_output_280_0_g128855;
					half4 localSamplePlanar3D246_g128855 = SamplePlanar3D( Texture246_g128855 , Sampler246_g128855 , Coords246_g128855 , WorldPosition246_g128855 , WorldNormal246_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128855) = _TerrainNormalTex9;
					SamplerState Sampler234_g128855 = SS29_g128902;
					float4 Coords234_g128855 = temp_output_37_0_g128855;
					float3 WorldPosition234_g128855 = temp_output_279_0_g128855;
					float4 localSampleStochastic2D234_g128855 = SampleStochastic2D( Texture234_g128855 , Sampler234_g128855 , Coords234_g128855 , WorldPosition234_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128855) = _TerrainNormalTex9;
					SamplerState Sampler263_g128855 = SS29_g128902;
					half4 Coords263_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition263_g128855 = temp_output_279_0_g128855;
					half3 WorldNormal263_g128855 = temp_output_280_0_g128855;
					half4 localSampleStochastic3D263_g128855 = SampleStochastic3D( Texture263_g128855 , Sampler263_g128855 , Coords263_g128855 , WorldPosition263_g128855 , WorldNormal263_g128855 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8849_g128811 = localSamplePlanar3D246_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8849_g128811 = localSampleStochastic2D234_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8849_g128811 = localSampleStochastic3D263_g128855;
					#else
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#endif
					half4 Layer133_g128829 = staticSwitch8849_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128860) = _TerrainNormalTex10;
					SamplerState Sampler238_g128860 = SS29_g128902;
					float4 temp_output_37_0_g128860 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128860 = temp_output_37_0_g128860;
					float3 temp_output_279_0_g128860 = Input_Position9197_g128811;
					half3 WorldPosition238_g128860 = temp_output_279_0_g128860;
					half4 localSamplePlanar2D238_g128860 = SamplePlanar2D( Texture238_g128860 , Sampler238_g128860 , Coords238_g128860 , WorldPosition238_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128860) = _TerrainNormalTex10;
					SamplerState Sampler246_g128860 = SS29_g128902;
					half4 Coords246_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition246_g128860 = temp_output_279_0_g128860;
					float3 temp_output_280_0_g128860 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128860 = temp_output_280_0_g128860;
					half4 localSamplePlanar3D246_g128860 = SamplePlanar3D( Texture246_g128860 , Sampler246_g128860 , Coords246_g128860 , WorldPosition246_g128860 , WorldNormal246_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128860) = _TerrainNormalTex10;
					SamplerState Sampler234_g128860 = SS29_g128902;
					float4 Coords234_g128860 = temp_output_37_0_g128860;
					float3 WorldPosition234_g128860 = temp_output_279_0_g128860;
					float4 localSampleStochastic2D234_g128860 = SampleStochastic2D( Texture234_g128860 , Sampler234_g128860 , Coords234_g128860 , WorldPosition234_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128860) = _TerrainNormalTex10;
					SamplerState Sampler263_g128860 = SS29_g128902;
					half4 Coords263_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition263_g128860 = temp_output_279_0_g128860;
					half3 WorldNormal263_g128860 = temp_output_280_0_g128860;
					half4 localSampleStochastic3D263_g128860 = SampleStochastic3D( Texture263_g128860 , Sampler263_g128860 , Coords263_g128860 , WorldPosition263_g128860 , WorldNormal263_g128860 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8876_g128811 = localSamplePlanar3D246_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8876_g128811 = localSampleStochastic2D234_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8876_g128811 = localSampleStochastic3D263_g128860;
					#else
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#endif
					half4 Layer237_g128829 = staticSwitch8876_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128861) = _TerrainNormalTex11;
					SamplerState Sampler238_g128861 = SS29_g128902;
					float4 temp_output_37_0_g128861 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128861 = temp_output_37_0_g128861;
					float3 temp_output_279_0_g128861 = Input_Position9197_g128811;
					half3 WorldPosition238_g128861 = temp_output_279_0_g128861;
					half4 localSamplePlanar2D238_g128861 = SamplePlanar2D( Texture238_g128861 , Sampler238_g128861 , Coords238_g128861 , WorldPosition238_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128861) = _TerrainNormalTex11;
					SamplerState Sampler246_g128861 = SS29_g128902;
					half4 Coords246_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition246_g128861 = temp_output_279_0_g128861;
					float3 temp_output_280_0_g128861 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128861 = temp_output_280_0_g128861;
					half4 localSamplePlanar3D246_g128861 = SamplePlanar3D( Texture246_g128861 , Sampler246_g128861 , Coords246_g128861 , WorldPosition246_g128861 , WorldNormal246_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128861) = _TerrainNormalTex11;
					SamplerState Sampler234_g128861 = SS29_g128902;
					float4 Coords234_g128861 = temp_output_37_0_g128861;
					float3 WorldPosition234_g128861 = temp_output_279_0_g128861;
					float4 localSampleStochastic2D234_g128861 = SampleStochastic2D( Texture234_g128861 , Sampler234_g128861 , Coords234_g128861 , WorldPosition234_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128861) = _TerrainNormalTex11;
					SamplerState Sampler263_g128861 = SS29_g128902;
					half4 Coords263_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition263_g128861 = temp_output_279_0_g128861;
					half3 WorldNormal263_g128861 = temp_output_280_0_g128861;
					half4 localSampleStochastic3D263_g128861 = SampleStochastic3D( Texture263_g128861 , Sampler263_g128861 , Coords263_g128861 , WorldPosition263_g128861 , WorldNormal263_g128861 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8850_g128811 = localSamplePlanar3D246_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8850_g128811 = localSampleStochastic2D234_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8850_g128811 = localSampleStochastic3D263_g128861;
					#else
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#endif
					half4 Layer338_g128829 = staticSwitch8850_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128862) = _TerrainNormalTex12;
					SamplerState Sampler238_g128862 = SS29_g128902;
					float4 temp_output_37_0_g128862 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128862 = temp_output_37_0_g128862;
					float3 temp_output_279_0_g128862 = Input_Position9197_g128811;
					half3 WorldPosition238_g128862 = temp_output_279_0_g128862;
					half4 localSamplePlanar2D238_g128862 = SamplePlanar2D( Texture238_g128862 , Sampler238_g128862 , Coords238_g128862 , WorldPosition238_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128862) = _TerrainNormalTex12;
					SamplerState Sampler246_g128862 = SS29_g128902;
					half4 Coords246_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition246_g128862 = temp_output_279_0_g128862;
					float3 temp_output_280_0_g128862 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128862 = temp_output_280_0_g128862;
					half4 localSamplePlanar3D246_g128862 = SamplePlanar3D( Texture246_g128862 , Sampler246_g128862 , Coords246_g128862 , WorldPosition246_g128862 , WorldNormal246_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128862) = _TerrainNormalTex12;
					SamplerState Sampler234_g128862 = SS29_g128902;
					float4 Coords234_g128862 = temp_output_37_0_g128862;
					float3 WorldPosition234_g128862 = temp_output_279_0_g128862;
					float4 localSampleStochastic2D234_g128862 = SampleStochastic2D( Texture234_g128862 , Sampler234_g128862 , Coords234_g128862 , WorldPosition234_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128862) = _TerrainNormalTex12;
					SamplerState Sampler263_g128862 = SS29_g128902;
					half4 Coords263_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition263_g128862 = temp_output_279_0_g128862;
					half3 WorldNormal263_g128862 = temp_output_280_0_g128862;
					half4 localSampleStochastic3D263_g128862 = SampleStochastic3D( Texture263_g128862 , Sampler263_g128862 , Coords263_g128862 , WorldPosition263_g128862 , WorldNormal263_g128862 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8877_g128811 = localSamplePlanar3D246_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8877_g128811 = localSampleStochastic2D234_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8877_g128811 = localSampleStochastic3D263_g128862;
					#else
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#endif
					half4 Layer439_g128829 = staticSwitch8877_g128811;
					float4 weightedBlendVar31_g128829 = Weights52_g128829;
					float4 weightedBlend31_g128829 = ( weightedBlendVar31_g128829.x*Layer133_g128829 + weightedBlendVar31_g128829.y*Layer237_g128829 + weightedBlendVar31_g128829.z*Layer338_g128829 + weightedBlendVar31_g128829.w*Layer439_g128829 );
					half4 Terrain_B_128865_g128811 = weightedBlend31_g128829;
					half4 Layer_1243_g128817 = Terrain_B_128865_g128811;
					half4 Weights52_g128835 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128865) = _TerrainNormalTex13;
					SamplerState Sampler238_g128865 = SS29_g128902;
					float4 temp_output_37_0_g128865 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128865 = temp_output_37_0_g128865;
					float3 temp_output_279_0_g128865 = Input_Position9197_g128811;
					half3 WorldPosition238_g128865 = temp_output_279_0_g128865;
					half4 localSamplePlanar2D238_g128865 = SamplePlanar2D( Texture238_g128865 , Sampler238_g128865 , Coords238_g128865 , WorldPosition238_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128865) = _TerrainNormalTex13;
					SamplerState Sampler246_g128865 = SS29_g128902;
					half4 Coords246_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition246_g128865 = temp_output_279_0_g128865;
					float3 temp_output_280_0_g128865 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128865 = temp_output_280_0_g128865;
					half4 localSamplePlanar3D246_g128865 = SamplePlanar3D( Texture246_g128865 , Sampler246_g128865 , Coords246_g128865 , WorldPosition246_g128865 , WorldNormal246_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128865) = _TerrainNormalTex13;
					SamplerState Sampler234_g128865 = SS29_g128902;
					float4 Coords234_g128865 = temp_output_37_0_g128865;
					float3 WorldPosition234_g128865 = temp_output_279_0_g128865;
					float4 localSampleStochastic2D234_g128865 = SampleStochastic2D( Texture234_g128865 , Sampler234_g128865 , Coords234_g128865 , WorldPosition234_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128865) = _TerrainNormalTex13;
					SamplerState Sampler263_g128865 = SS29_g128902;
					half4 Coords263_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition263_g128865 = temp_output_279_0_g128865;
					half3 WorldNormal263_g128865 = temp_output_280_0_g128865;
					half4 localSampleStochastic3D263_g128865 = SampleStochastic3D( Texture263_g128865 , Sampler263_g128865 , Coords263_g128865 , WorldPosition263_g128865 , WorldNormal263_g128865 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8991_g128811 = localSamplePlanar3D246_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8991_g128811 = localSampleStochastic2D234_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8991_g128811 = localSampleStochastic3D263_g128865;
					#else
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#endif
					half4 Layer133_g128835 = staticSwitch8991_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128872) = _TerrainNormalTex14;
					SamplerState Sampler238_g128872 = SS29_g128902;
					float4 temp_output_37_0_g128872 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128872 = temp_output_37_0_g128872;
					float3 temp_output_279_0_g128872 = Input_Position9197_g128811;
					half3 WorldPosition238_g128872 = temp_output_279_0_g128872;
					half4 localSamplePlanar2D238_g128872 = SamplePlanar2D( Texture238_g128872 , Sampler238_g128872 , Coords238_g128872 , WorldPosition238_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128872) = _TerrainNormalTex14;
					SamplerState Sampler246_g128872 = SS29_g128902;
					half4 Coords246_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition246_g128872 = temp_output_279_0_g128872;
					float3 temp_output_280_0_g128872 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128872 = temp_output_280_0_g128872;
					half4 localSamplePlanar3D246_g128872 = SamplePlanar3D( Texture246_g128872 , Sampler246_g128872 , Coords246_g128872 , WorldPosition246_g128872 , WorldNormal246_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128872) = _TerrainNormalTex14;
					SamplerState Sampler234_g128872 = SS29_g128902;
					float4 Coords234_g128872 = temp_output_37_0_g128872;
					float3 WorldPosition234_g128872 = temp_output_279_0_g128872;
					float4 localSampleStochastic2D234_g128872 = SampleStochastic2D( Texture234_g128872 , Sampler234_g128872 , Coords234_g128872 , WorldPosition234_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128872) = _TerrainNormalTex14;
					SamplerState Sampler263_g128872 = SS29_g128902;
					half4 Coords263_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition263_g128872 = temp_output_279_0_g128872;
					half3 WorldNormal263_g128872 = temp_output_280_0_g128872;
					half4 localSampleStochastic3D263_g128872 = SampleStochastic3D( Texture263_g128872 , Sampler263_g128872 , Coords263_g128872 , WorldPosition263_g128872 , WorldNormal263_g128872 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8990_g128811 = localSamplePlanar3D246_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8990_g128811 = localSampleStochastic2D234_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8990_g128811 = localSampleStochastic3D263_g128872;
					#else
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#endif
					half4 Layer237_g128835 = staticSwitch8990_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128873) = _TerrainNormalTex15;
					SamplerState Sampler238_g128873 = SS29_g128902;
					float4 temp_output_37_0_g128873 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128873 = temp_output_37_0_g128873;
					float3 temp_output_279_0_g128873 = Input_Position9197_g128811;
					half3 WorldPosition238_g128873 = temp_output_279_0_g128873;
					half4 localSamplePlanar2D238_g128873 = SamplePlanar2D( Texture238_g128873 , Sampler238_g128873 , Coords238_g128873 , WorldPosition238_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128873) = _TerrainNormalTex15;
					SamplerState Sampler246_g128873 = SS29_g128902;
					half4 Coords246_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition246_g128873 = temp_output_279_0_g128873;
					float3 temp_output_280_0_g128873 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128873 = temp_output_280_0_g128873;
					half4 localSamplePlanar3D246_g128873 = SamplePlanar3D( Texture246_g128873 , Sampler246_g128873 , Coords246_g128873 , WorldPosition246_g128873 , WorldNormal246_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128873) = _TerrainNormalTex15;
					SamplerState Sampler234_g128873 = SS29_g128902;
					float4 Coords234_g128873 = temp_output_37_0_g128873;
					float3 WorldPosition234_g128873 = temp_output_279_0_g128873;
					float4 localSampleStochastic2D234_g128873 = SampleStochastic2D( Texture234_g128873 , Sampler234_g128873 , Coords234_g128873 , WorldPosition234_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128873) = _TerrainNormalTex15;
					SamplerState Sampler263_g128873 = SS29_g128902;
					half4 Coords263_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition263_g128873 = temp_output_279_0_g128873;
					half3 WorldNormal263_g128873 = temp_output_280_0_g128873;
					half4 localSampleStochastic3D263_g128873 = SampleStochastic3D( Texture263_g128873 , Sampler263_g128873 , Coords263_g128873 , WorldPosition263_g128873 , WorldNormal263_g128873 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8989_g128811 = localSamplePlanar3D246_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8989_g128811 = localSampleStochastic2D234_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8989_g128811 = localSampleStochastic3D263_g128873;
					#else
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#endif
					half4 Layer338_g128835 = staticSwitch8989_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128874) = _TerrainNormalTex16;
					SamplerState Sampler238_g128874 = SS29_g128902;
					float4 temp_output_37_0_g128874 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128874 = temp_output_37_0_g128874;
					float3 temp_output_279_0_g128874 = Input_Position9197_g128811;
					half3 WorldPosition238_g128874 = temp_output_279_0_g128874;
					half4 localSamplePlanar2D238_g128874 = SamplePlanar2D( Texture238_g128874 , Sampler238_g128874 , Coords238_g128874 , WorldPosition238_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128874) = _TerrainNormalTex16;
					SamplerState Sampler246_g128874 = SS29_g128902;
					half4 Coords246_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition246_g128874 = temp_output_279_0_g128874;
					float3 temp_output_280_0_g128874 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128874 = temp_output_280_0_g128874;
					half4 localSamplePlanar3D246_g128874 = SamplePlanar3D( Texture246_g128874 , Sampler246_g128874 , Coords246_g128874 , WorldPosition246_g128874 , WorldNormal246_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128874) = _TerrainNormalTex16;
					SamplerState Sampler234_g128874 = SS29_g128902;
					float4 Coords234_g128874 = temp_output_37_0_g128874;
					float3 WorldPosition234_g128874 = temp_output_279_0_g128874;
					float4 localSampleStochastic2D234_g128874 = SampleStochastic2D( Texture234_g128874 , Sampler234_g128874 , Coords234_g128874 , WorldPosition234_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128874) = _TerrainNormalTex16;
					SamplerState Sampler263_g128874 = SS29_g128902;
					half4 Coords263_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition263_g128874 = temp_output_279_0_g128874;
					half3 WorldNormal263_g128874 = temp_output_280_0_g128874;
					half4 localSampleStochastic3D263_g128874 = SampleStochastic3D( Texture263_g128874 , Sampler263_g128874 , Coords263_g128874 , WorldPosition263_g128874 , WorldNormal263_g128874 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8988_g128811 = localSamplePlanar3D246_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8988_g128811 = localSampleStochastic2D234_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8988_g128811 = localSampleStochastic3D263_g128874;
					#else
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#endif
					half4 Layer439_g128835 = staticSwitch8988_g128811;
					float4 weightedBlendVar31_g128835 = Weights52_g128835;
					float4 weightedBlend31_g128835 = ( weightedBlendVar31_g128835.x*Layer133_g128835 + weightedBlendVar31_g128835.y*Layer237_g128835 + weightedBlendVar31_g128835.z*Layer338_g128835 + weightedBlendVar31_g128835.w*Layer439_g128835 );
					half4 Terrain_B_168987_g128811 = weightedBlend31_g128835;
					half4 Layer_1644_g128817 = Terrain_B_168987_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 + Layer_1644_g128817 );
					#else
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#endif
					half4 Blend_Normal7512_g128811 = staticSwitch40_g128817;
					half4 Normal_Packed45_g128896 = Blend_Normal7512_g128811;
					float2 appendResult58_g128896 = (float2(( (Normal_Packed45_g128896).x * (Normal_Packed45_g128896).w ) , (Normal_Packed45_g128896).y));
					half2 Normal_Default50_g128896 = appendResult58_g128896;
					half2 Normal_ASTC41_g128896 = (Normal_Packed45_g128896).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128896 = Normal_ASTC41_g128896;
					#else
					float2 staticSwitch38_g128896 = Normal_Default50_g128896;
					#endif
					half2 Normal_NO_DTX544_g128896 = (Normal_Packed45_g128896).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128896 = Normal_NO_DTX544_g128896;
					#else
					float2 staticSwitch37_g128896 = staticSwitch38_g128896;
					#endif
					half4 Weights52_g128813 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128813 = temp_output_6970_0_g128811;
					half4 Layer237_g128813 = temp_output_6977_0_g128811;
					half4 Layer338_g128813 = temp_output_6978_0_g128811;
					half4 Layer439_g128813 = temp_output_6983_0_g128811;
					float4 weightedBlendVar31_g128813 = Weights52_g128813;
					float4 weightedBlend31_g128813 = ( weightedBlendVar31_g128813.x*Layer133_g128813 + weightedBlendVar31_g128813.y*Layer237_g128813 + weightedBlendVar31_g128813.z*Layer338_g128813 + weightedBlendVar31_g128813.w*Layer439_g128813 );
					half4 Terrain_Shaders_047203_g128811 = weightedBlend31_g128813;
					half4 Layer_045_g128819 = Terrain_Shaders_047203_g128811;
					half4 Weights52_g128825 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128825 = temp_output_8714_0_g128811;
					half4 Layer237_g128825 = temp_output_8721_0_g128811;
					half4 Layer338_g128825 = temp_output_8724_0_g128811;
					half4 Layer439_g128825 = temp_output_8727_0_g128811;
					float4 weightedBlendVar31_g128825 = Weights52_g128825;
					float4 weightedBlend31_g128825 = ( weightedBlendVar31_g128825.x*Layer133_g128825 + weightedBlendVar31_g128825.y*Layer237_g128825 + weightedBlendVar31_g128825.z*Layer338_g128825 + weightedBlendVar31_g128825.w*Layer439_g128825 );
					half4 Terrain_Shaders_088730_g128811 = weightedBlend31_g128825;
					half4 Layer_0810_g128819 = Terrain_Shaders_088730_g128811;
					half4 Weights52_g128831 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128831 = temp_output_8815_0_g128811;
					half4 Layer237_g128831 = temp_output_8818_0_g128811;
					half4 Layer338_g128831 = temp_output_8819_0_g128811;
					half4 Layer439_g128831 = temp_output_8820_0_g128811;
					float4 weightedBlendVar31_g128831 = Weights52_g128831;
					float4 weightedBlend31_g128831 = ( weightedBlendVar31_g128831.x*Layer133_g128831 + weightedBlendVar31_g128831.y*Layer237_g128831 + weightedBlendVar31_g128831.z*Layer338_g128831 + weightedBlendVar31_g128831.w*Layer439_g128831 );
					half4 Terrain_Shaders_128871_g128811 = weightedBlend31_g128831;
					half4 Layer_1243_g128819 = Terrain_Shaders_128871_g128811;
					half4 Weights52_g128837 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128837 = temp_output_8931_0_g128811;
					half4 Layer237_g128837 = temp_output_8934_0_g128811;
					half4 Layer338_g128837 = temp_output_8935_0_g128811;
					half4 Layer439_g128837 = temp_output_8936_0_g128811;
					float4 weightedBlendVar31_g128837 = Weights52_g128837;
					float4 weightedBlend31_g128837 = ( weightedBlendVar31_g128837.x*Layer133_g128837 + weightedBlendVar31_g128837.y*Layer237_g128837 + weightedBlendVar31_g128837.z*Layer338_g128837 + weightedBlendVar31_g128837.w*Layer439_g128837 );
					half4 Terrain_Shaders_169014_g128811 = weightedBlend31_g128837;
					half4 Layer_1644_g128819 = Terrain_Shaders_169014_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 + Layer_1644_g128819 );
					#else
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#endif
					half4 Blend_Shaders7420_g128811 = staticSwitch40_g128819;
					half4 Normal_Packed45_g128895 = Blend_Shaders7420_g128811;
					half2 Normal_NO_DTX544_g128895 = (Normal_Packed45_g128895).wy;
					#ifdef TVE_TERRAIN_PACKED
					float2 staticSwitch9080_g128811 = (Normal_NO_DTX544_g128895*2.0 + -1.0);
					#else
					float2 staticSwitch9080_g128811 = (staticSwitch37_g128896*2.0 + -1.0);
					#endif
					half4 Weights52_g128814 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128814 = _TerrainParams1;
					half4 Layer237_g128814 = _TerrainParams2;
					half4 Layer338_g128814 = _TerrainParams3;
					half4 Layer439_g128814 = _TerrainParams4;
					float4 weightedBlendVar31_g128814 = Weights52_g128814;
					float4 weightedBlend31_g128814 = ( weightedBlendVar31_g128814.x*Layer133_g128814 + weightedBlendVar31_g128814.y*Layer237_g128814 + weightedBlendVar31_g128814.z*Layer338_g128814 + weightedBlendVar31_g128814.w*Layer439_g128814 );
					half4 Terrain_Params_047533_g128811 = weightedBlend31_g128814;
					half4 Layer_045_g128820 = Terrain_Params_047533_g128811;
					half4 Weights52_g128826 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128826 = _TerrainParams5;
					half4 Layer237_g128826 = _TerrainParams6;
					half4 Layer338_g128826 = _TerrainParams7;
					half4 Layer439_g128826 = _TerrainParams8;
					float4 weightedBlendVar31_g128826 = Weights52_g128826;
					float4 weightedBlend31_g128826 = ( weightedBlendVar31_g128826.x*Layer133_g128826 + weightedBlendVar31_g128826.y*Layer237_g128826 + weightedBlendVar31_g128826.z*Layer338_g128826 + weightedBlendVar31_g128826.w*Layer439_g128826 );
					half4 Terrain_Params_088739_g128811 = weightedBlend31_g128826;
					half4 Layer_0810_g128820 = Terrain_Params_088739_g128811;
					half4 Weights52_g128832 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128832 = _TerrainParams9;
					half4 Layer237_g128832 = _TerrainParams10;
					half4 Layer338_g128832 = _TerrainParams11;
					half4 Layer439_g128832 = _TerrainParams12;
					float4 weightedBlendVar31_g128832 = Weights52_g128832;
					float4 weightedBlend31_g128832 = ( weightedBlendVar31_g128832.x*Layer133_g128832 + weightedBlendVar31_g128832.y*Layer237_g128832 + weightedBlendVar31_g128832.z*Layer338_g128832 + weightedBlendVar31_g128832.w*Layer439_g128832 );
					half4 Terrain_Params_128867_g128811 = weightedBlend31_g128832;
					half4 Layer_1243_g128820 = Terrain_Params_128867_g128811;
					half4 Weights52_g128838 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128838 = _TerrainParams13;
					half4 Layer237_g128838 = _TerrainParams14;
					half4 Layer338_g128838 = _TerrainParams15;
					half4 Layer439_g128838 = _TerrainParams16;
					float4 weightedBlendVar31_g128838 = Weights52_g128838;
					float4 weightedBlend31_g128838 = ( weightedBlendVar31_g128838.x*Layer133_g128838 + weightedBlendVar31_g128838.y*Layer237_g128838 + weightedBlendVar31_g128838.z*Layer338_g128838 + weightedBlendVar31_g128838.w*Layer439_g128838 );
					half4 Terrain_Params_169017_g128811 = weightedBlend31_g128838;
					half4 Layer_1644_g128820 = Terrain_Params_169017_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 + Layer_1644_g128820 );
					#else
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#endif
					half4 Blend_Params7547_g128811 = staticSwitch40_g128820;
					half2 Normal_Planar45_g128897 = ( ( staticSwitch9080_g128811 * (Blend_Params7547_g128811).z ) * _TerrainNormalValue );
					float2 break71_g128897 = Normal_Planar45_g128897;
					float3 appendResult72_g128897 = (float3(break71_g128897.x , 0.0 , break71_g128897.y));
					half2 Final_NormalTS9145_g128811 = (mul( ase_worldToTangent, appendResult72_g128897 )).xy;
					half2 Local_Normal9200_g128810 = Final_NormalTS9145_g128811;
					float2 In_NormalTS3_g128923 = Local_Normal9200_g128810;
					float3 appendResult68_g128921 = (float3(Local_Normal9200_g128810 , 1.0));
					float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
					float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
					float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
					float3 tanNormal74_g128921 = appendResult68_g128921;
					float3 worldNormal74_g128921 = normalize( float3( dot( tanToWorld0, tanNormal74_g128921 ), dot( tanToWorld1, tanNormal74_g128921 ), dot( tanToWorld2, tanNormal74_g128921 ) ) );
					float3 In_NormalWS3_g128923 = worldNormal74_g128921;
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9139_g128811 = 0.0;
					#else
					float staticSwitch9139_g128811 = ( (Blend_Shaders7420_g128811).x * (Blend_Params7547_g128811).x * _TerrainMetallicValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9097_g128811 = 1.0;
					#else
					float staticSwitch9097_g128811 = ( (Blend_Shaders7420_g128811).y * _TerrainOcclusionValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).x;
					#else
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).w;
					#endif
					float4 appendResult9147_g128811 = (float4(staticSwitch9139_g128811 , staticSwitch9097_g128811 , (Blend_Shaders7420_g128811).z , ( staticSwitch9105_g128811 * (Blend_Params7547_g128811).w * _TerrainSmoothnessValue )));
					half4 Final_Shaders9146_g128811 = appendResult9147_g128811;
					half4 Local_Shader9201_g128810 = Final_Shaders9146_g128811;
					float4 In_Shader3_g128923 = Local_Shader9201_g128810;
					half4 Weights52_g128888 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128888 = _TerrainSpecular1;
					half4 Layer237_g128888 = _TerrainSpecular2;
					half4 Layer338_g128888 = _TerrainSpecular3;
					half4 Layer439_g128888 = _TerrainSpecular4;
					float4 weightedBlendVar31_g128888 = Weights52_g128888;
					float4 weightedBlend31_g128888 = ( weightedBlendVar31_g128888.x*Layer133_g128888 + weightedBlendVar31_g128888.y*Layer237_g128888 + weightedBlendVar31_g128888.z*Layer338_g128888 + weightedBlendVar31_g128888.w*Layer439_g128888 );
					half4 Terrain_Specular_047390_g128811 = weightedBlend31_g128888;
					half4 Layer_045_g128893 = Terrain_Specular_047390_g128811;
					half4 Weights52_g128827 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128827 = _TerrainSpecular5;
					half4 Layer237_g128827 = _TerrainSpecular6;
					half4 Layer338_g128827 = _TerrainSpecular7;
					half4 Layer439_g128827 = _TerrainSpecular8;
					float4 weightedBlendVar31_g128827 = Weights52_g128827;
					float4 weightedBlend31_g128827 = ( weightedBlendVar31_g128827.x*Layer133_g128827 + weightedBlendVar31_g128827.y*Layer237_g128827 + weightedBlendVar31_g128827.z*Layer338_g128827 + weightedBlendVar31_g128827.w*Layer439_g128827 );
					half4 Terrain_Specular_088745_g128811 = weightedBlend31_g128827;
					half4 Layer_0810_g128893 = Terrain_Specular_088745_g128811;
					half4 Weights52_g128833 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128833 = _TerrainSpecular9;
					half4 Layer237_g128833 = _TerrainSpecular10;
					half4 Layer338_g128833 = _TerrainSpecular11;
					half4 Layer439_g128833 = _TerrainSpecular12;
					float4 weightedBlendVar31_g128833 = Weights52_g128833;
					float4 weightedBlend31_g128833 = ( weightedBlendVar31_g128833.x*Layer133_g128833 + weightedBlendVar31_g128833.y*Layer237_g128833 + weightedBlendVar31_g128833.z*Layer338_g128833 + weightedBlendVar31_g128833.w*Layer439_g128833 );
					half4 Terrain_Specular_128869_g128811 = weightedBlend31_g128833;
					half4 Layer_1243_g128893 = Terrain_Specular_128869_g128811;
					half4 Weights52_g128839 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128839 = _TerrainSpecular13;
					half4 Layer237_g128839 = _TerrainSpecular14;
					half4 Layer338_g128839 = _TerrainSpecular15;
					half4 Layer439_g128839 = _TerrainSpecular16;
					float4 weightedBlendVar31_g128839 = Weights52_g128839;
					float4 weightedBlend31_g128839 = ( weightedBlendVar31_g128839.x*Layer133_g128839 + weightedBlendVar31_g128839.y*Layer237_g128839 + weightedBlendVar31_g128839.z*Layer338_g128839 + weightedBlendVar31_g128839.w*Layer439_g128839 );
					half4 Terrain_Specular_169019_g128811 = weightedBlend31_g128839;
					half4 Layer_1644_g128893 = Terrain_Specular_169019_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 + Layer_1644_g128893 );
					#else
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#endif
					half4 Blend_TerrainSpecular7446_g128811 = staticSwitch40_g128893;
					float3 temp_output_9088_0_g128811 = (Blend_TerrainSpecular7446_g128811).rgb;
					float4 appendResult9189_g128811 = (float4(temp_output_9088_0_g128811 , 1.0));
					half4 Final_Emissive9151_g128811 = appendResult9189_g128811;
					half4 Local_EmissiveLDR9202_g128810 = Final_Emissive9151_g128811;
					float4 In_Emissive3_g128923 = Local_EmissiveLDR9202_g128810;
					float3 temp_output_3_0_g128922 = Local_Albedo9199_g128810;
					float dotResult20_g128922 = dot( temp_output_3_0_g128922 , float3( 0.2126, 0.7152, 0.0722 ) );
					float temp_output_9165_0_g128810 = dotResult20_g128922;
					float In_Grayscale3_g128923 = temp_output_9165_0_g128810;
					float clampResult9168_g128810 = clamp( saturate( ( temp_output_9165_0_g128810 * 5.0 ) ) , 0.2 , 1.0 );
					float In_Luminosity3_g128923 = clampResult9168_g128810;
					half Final_MultiShader9150_g128811 = ( (Blend_TerrainSpecular7446_g128811).a * (Blend_Albedo7468_g128811).w );
					half Local_MultiMask9203_g128810 = Final_MultiShader9150_g128811;
					float In_MultiMask3_g128923 = Local_MultiMask9203_g128810;
					float4 temp_output_35_0_g128904 = appendResult9125_g128811;
					float2 InputScale48_g128904 = (temp_output_35_0_g128904).zw;
					half2 FinalScale53_g128904 = ( 1.0 / InputScale48_g128904 );
					float2 InputPosition52_g128904 = (temp_output_35_0_g128904).xy;
					half2 FinalPosition58_g128904 = -( FinalScale53_g128904 * InputPosition52_g128904 );
					float2 temp_output_65_0_g128904 = ( ( (worldPos).xz * FinalScale53_g128904 ) + FinalPosition58_g128904 );
					float2 Terrain_Holes_UV9406_g128811 = temp_output_65_0_g128904;
					#ifdef TVE_ALPHA_CLIP
					float staticSwitch9188_g128811 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g128811 ).r;
					#else
					float staticSwitch9188_g128811 = 1.0;
					#endif
					half Terrain_Holes7437_g128811 = staticSwitch9188_g128811;
					half Local_HoleMask9204_g128810 = Terrain_Holes7437_g128811;
					float In_AlphaClip3_g128923 = Local_HoleMask9204_g128810;
					float In_AlphaFade3_g128923 = 1.0;
					float3 temp_cast_9 = (1.0).xxx;
					float3 In_Translucency3_g128923 = temp_cast_9;
					float In_Transmission3_g128923 = 1.0;
					float In_Thickness3_g128923 = 0.0;
					float In_Diffusion3_g128923 = 0.0;
					float In_Depth3_g128923 = 0.0;
					{
					Data3_g128923.Dummy = In_Dummy3_g128923;
					Data3_g128923.Albedo = In_Albedo3_g128923;
					Data3_g128923.AlbedoRaw = In_AlbedoRaw3_g128923;
					Data3_g128923.NormalTS = In_NormalTS3_g128923;
					Data3_g128923.NormalWS = In_NormalWS3_g128923;
					Data3_g128923.Shader = In_Shader3_g128923;
					Data3_g128923.Emissive= In_Emissive3_g128923;
					Data3_g128923.MultiMask = In_MultiMask3_g128923;
					Data3_g128923.Grayscale = In_Grayscale3_g128923;
					Data3_g128923.Luminosity = In_Luminosity3_g128923;
					Data3_g128923.AlphaClip = In_AlphaClip3_g128923;
					Data3_g128923.AlphaFade = In_AlphaFade3_g128923;
					Data3_g128923.Translucency = In_Translucency3_g128923;
					Data3_g128923.Transmission = In_Transmission3_g128923;
					Data3_g128923.Thickness = In_Thickness3_g128923;
					Data3_g128923.Diffusion = In_Diffusion3_g128923;
					Data3_g128923.Depth = In_Depth3_g128923;
					}
					TVEVisualData Data4_g128928 = Data3_g128923;
					float Out_Dummy4_g128928 = 0;
					float3 Out_Albedo4_g128928 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128928 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128928 = float2( 0,0 );
					float3 Out_NormalWS4_g128928 = float3( 0,0,0 );
					float4 Out_Shader4_g128928 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128928 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128928 = 0;
					float Out_Grayscale4_g128928 = 0;
					float Out_Luminosity4_g128928 = 0;
					float Out_AlphaClip4_g128928 = 0;
					float Out_AlphaFade4_g128928 = 0;
					float3 Out_Translucency4_g128928 = float3( 0,0,0 );
					float Out_Transmission4_g128928 = 0;
					float Out_Thickness4_g128928 = 0;
					float Out_Diffusion4_g128928 = 0;
					float Out_Depth4_g128928 = 0;
					{
					Out_Dummy4_g128928 = Data4_g128928.Dummy;
					Out_Albedo4_g128928 = Data4_g128928.Albedo;
					Out_AlbedoRaw4_g128928 = Data4_g128928.AlbedoRaw;
					Out_NormalTS4_g128928 = Data4_g128928.NormalTS;
					Out_NormalWS4_g128928 = Data4_g128928.NormalWS;
					Out_Shader4_g128928 = Data4_g128928.Shader;
					Out_Emissive4_g128928= Data4_g128928.Emissive;
					Out_MultiMask4_g128928 = Data4_g128928.MultiMask;
					Out_Grayscale4_g128928 = Data4_g128928.Grayscale;
					Out_Luminosity4_g128928= Data4_g128928.Luminosity;
					Out_AlphaClip4_g128928 = Data4_g128928.AlphaClip;
					Out_AlphaFade4_g128928 = Data4_g128928.AlphaFade;
					Out_Translucency4_g128928 = Data4_g128928.Translucency;
					Out_Transmission4_g128928 = Data4_g128928.Transmission;
					Out_Thickness4_g128928 = Data4_g128928.Thickness;
					Out_Diffusion4_g128928 = Data4_g128928.Diffusion;
					Out_Depth4_g128928= Data4_g128928.Depth;
					}
					half3 Visual_Albedo139_g128924 = Out_Albedo4_g128928;
					float temp_output_200_12_g128924 = Out_Grayscale4_g128928;
					half Visual_Grayscale150_g128924 = temp_output_200_12_g128924;
					float3 temp_cast_10 = (Visual_Grayscale150_g128924).xxx;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 vertexToFrag73_g114306 = IN.ase_texcoord8.xyz;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 normalizedWorldNormal = normalize( WorldNormal );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = IN.ase_color;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g128925 = Data204_g128736;
					float Out_Dummy15_g128925 = 0;
					float4 Out_CoatDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128925 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128925 = Data15_g128925.Dummy;
					Out_CoatDataRT15_g128925 = Data15_g128925.CoatDataRT;
					Out_PaintDataRT15_g128925 = Data15_g128925.PaintDataRT;
					Out_GlowDataRT15_g128925= Data15_g128925.GlowDataRT;
					Out_AtmoDataRT15_g128925= Data15_g128925.AtmoDataRT;
					Out_FadeDataRT15_g128925= Data15_g128925.FadeDataRT;
					Out_FormDataRT15_g128925 = Data15_g128925.FormDataRT;
					Out_FlowDataRT15_g128925 = Data15_g128925.FlowDataRT;
					}
					half4 Global_PaintParams209_g128924 = Out_PaintDataRT15_g128925;
					float4 temp_output_6_0_g128942 = Global_PaintParams209_g128924;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128942 = ( temp_output_6_0_g128942 + _TintingElementMode );
					#else
					float4 staticSwitch14_g128942 = temp_output_6_0_g128942;
					#endif
					#ifdef TVE_TINTING_ELEMENT
					float4 staticSwitch283_g128924 = staticSwitch14_g128942;
					#else
					float4 staticSwitch283_g128924 = TVE_PaintParams;
					#endif
					float4 lerpResult412_g128924 = lerp( float4( 1,1,1,1 ) , staticSwitch283_g128924 , ( _TintingGlobalValue * TVE_IsEnabled ));
					half Tinting_GlobalValue285_g128924 = saturate( (lerpResult412_g128924).w );
					float3 lerpResult368_g128924 = lerp( Visual_Albedo139_g128924 , temp_cast_10 , ( Tinting_GlobalValue285_g128924 * _TintingGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128948 = 2.0;
					#else
					float staticSwitch1_g128948 = 4.594794;
					#endif
					half3 Tinting_GlobalColor290_g128924 = (lerpResult412_g128924).xyz;
					float temp_output_200_11_g128924 = Out_MultiMask4_g128928;
					half Visual_MultiMask181_g128924 = temp_output_200_11_g128924;
					float lerpResult147_g128924 = lerp( 1.0 , Visual_MultiMask181_g128924 , _TintingMultiValue);
					half Tinting_MutiMask121_g128924 = lerpResult147_g128924;
					half Tinting_TexMask385_g128924 = 1.0;
					float temp_output_200_15_g128924 = Out_Luminosity4_g128928;
					half Visual_Luminosity257_g128924 = temp_output_200_15_g128924;
					float clampResult17_g128935 = clamp( Visual_Luminosity257_g128924 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128939 = _TintingLumaRemap.x;
					float temp_output_9_0_g128939 = ( clampResult17_g128935 - temp_output_7_0_g128939 );
					float lerpResult228_g128924 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128939 * _TintingLumaRemap.z ) + 0.0001 ) ) , _TintingLumaValue);
					half Tinting_LumaMask153_g128924 = lerpResult228_g128924;
					half Tinting_VertMask309_g128924 = 1.0;
					half Tinting_NoiseMask213_g128924 = 1.0;
					half Custom_Mask345_g128924 = 1.0;
					half Tinting_CoreMasks433_g128924 = ( Tinting_MutiMask121_g128924 * Tinting_TexMask385_g128924 * Tinting_LumaMask153_g128924 * Tinting_VertMask309_g128924 * Tinting_NoiseMask213_g128924 * Custom_Mask345_g128924 );
					float temp_output_7_0_g128946 = _TintingBlendRemap.x;
					float temp_output_9_0_g128946 = ( ( _TintingIntensityValue * Tinting_CoreMasks433_g128924 * Tinting_GlobalValue285_g128924 ) - temp_output_7_0_g128946 );
					half Tinting_Mask242_g128924 = ( saturate( ( ( temp_output_9_0_g128946 * _TintingBlendRemap.z ) + 0.0001 ) ) * TVE_IsEnabled );
					float3 lerpResult90_g128924 = lerp( Visual_Albedo139_g128924 , ( lerpResult368_g128924 * staticSwitch1_g128948 * Tinting_GlobalColor290_g128924 * (_TintingColor).rgb ) , Tinting_Mask242_g128924);
					#ifdef TVE_TINTING
					float3 staticSwitch286_g128924 = lerpResult90_g128924;
					#else
					float3 staticSwitch286_g128924 = Visual_Albedo139_g128924;
					#endif
					half3 Final_Albedo97_g128924 = staticSwitch286_g128924;
					float3 In_Albedo3_g128944 = Final_Albedo97_g128924;
					float3 In_AlbedoRaw3_g128944 = Out_AlbedoRaw4_g128928;
					float2 In_NormalTS3_g128944 = Out_NormalTS4_g128928;
					float3 In_NormalWS3_g128944 = Out_NormalWS4_g128928;
					float4 In_Shader3_g128944 = Out_Shader4_g128928;
					float4 In_Emissive3_g128944 = Out_Emissive4_g128928;
					float In_Grayscale3_g128944 = temp_output_200_12_g128924;
					float In_Luminosity3_g128944 = temp_output_200_15_g128924;
					float In_MultiMask3_g128944 = temp_output_200_11_g128924;
					float In_AlphaClip3_g128944 = Out_AlphaClip4_g128928;
					float In_AlphaFade3_g128944 = Out_AlphaFade4_g128928;
					float3 In_Translucency3_g128944 = Out_Translucency4_g128928;
					float In_Transmission3_g128944 = Out_Transmission4_g128928;
					float In_Thickness3_g128944 = Out_Thickness4_g128928;
					float In_Diffusion3_g128944 = Out_Diffusion4_g128928;
					float In_Depth3_g128944 = Out_Depth4_g128928;
					{
					Data3_g128944.Dummy = In_Dummy3_g128944;
					Data3_g128944.Albedo = In_Albedo3_g128944;
					Data3_g128944.AlbedoRaw = In_AlbedoRaw3_g128944;
					Data3_g128944.NormalTS = In_NormalTS3_g128944;
					Data3_g128944.NormalWS = In_NormalWS3_g128944;
					Data3_g128944.Shader = In_Shader3_g128944;
					Data3_g128944.Emissive= In_Emissive3_g128944;
					Data3_g128944.MultiMask = In_MultiMask3_g128944;
					Data3_g128944.Grayscale = In_Grayscale3_g128944;
					Data3_g128944.Luminosity = In_Luminosity3_g128944;
					Data3_g128944.AlphaClip = In_AlphaClip3_g128944;
					Data3_g128944.AlphaFade = In_AlphaFade3_g128944;
					Data3_g128944.Translucency = In_Translucency3_g128944;
					Data3_g128944.Transmission = In_Transmission3_g128944;
					Data3_g128944.Thickness = In_Thickness3_g128944;
					Data3_g128944.Diffusion = In_Diffusion3_g128944;
					Data3_g128944.Depth = In_Depth3_g128944;
					}
					TVEVisualData Data4_g128951 = Data3_g128944;
					float Out_Dummy4_g128951 = 0;
					float3 Out_Albedo4_g128951 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128951 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128951 = float2( 0,0 );
					float3 Out_NormalWS4_g128951 = float3( 0,0,0 );
					float4 Out_Shader4_g128951 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128951 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128951 = 0;
					float Out_Grayscale4_g128951 = 0;
					float Out_Luminosity4_g128951 = 0;
					float Out_AlphaClip4_g128951 = 0;
					float Out_AlphaFade4_g128951 = 0;
					float3 Out_Translucency4_g128951 = float3( 0,0,0 );
					float Out_Transmission4_g128951 = 0;
					float Out_Thickness4_g128951 = 0;
					float Out_Diffusion4_g128951 = 0;
					float Out_Depth4_g128951 = 0;
					{
					Out_Dummy4_g128951 = Data4_g128951.Dummy;
					Out_Albedo4_g128951 = Data4_g128951.Albedo;
					Out_AlbedoRaw4_g128951 = Data4_g128951.AlbedoRaw;
					Out_NormalTS4_g128951 = Data4_g128951.NormalTS;
					Out_NormalWS4_g128951 = Data4_g128951.NormalWS;
					Out_Shader4_g128951 = Data4_g128951.Shader;
					Out_Emissive4_g128951= Data4_g128951.Emissive;
					Out_MultiMask4_g128951 = Data4_g128951.MultiMask;
					Out_Grayscale4_g128951 = Data4_g128951.Grayscale;
					Out_Luminosity4_g128951= Data4_g128951.Luminosity;
					Out_AlphaClip4_g128951 = Data4_g128951.AlphaClip;
					Out_AlphaFade4_g128951 = Data4_g128951.AlphaFade;
					Out_Translucency4_g128951 = Data4_g128951.Translucency;
					Out_Transmission4_g128951 = Data4_g128951.Transmission;
					Out_Thickness4_g128951 = Data4_g128951.Thickness;
					Out_Diffusion4_g128951 = Data4_g128951.Diffusion;
					Out_Depth4_g128951= Data4_g128951.Depth;
					}
					half3 Visual_Albedo292_g128949 = Out_Albedo4_g128951;
					float temp_output_280_12_g128949 = Out_Grayscale4_g128951;
					half Visual_Grayscale308_g128949 = temp_output_280_12_g128949;
					float3 temp_cast_32 = (Visual_Grayscale308_g128949).xxx;
					TVEGlobalData Data15_g128950 = Data204_g128736;
					float Out_Dummy15_g128950 = 0;
					float4 Out_CoatDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128950 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128950 = Data15_g128950.Dummy;
					Out_CoatDataRT15_g128950 = Data15_g128950.CoatDataRT;
					Out_PaintDataRT15_g128950 = Data15_g128950.PaintDataRT;
					Out_GlowDataRT15_g128950= Data15_g128950.GlowDataRT;
					Out_AtmoDataRT15_g128950= Data15_g128950.AtmoDataRT;
					Out_FadeDataRT15_g128950= Data15_g128950.FadeDataRT;
					Out_FormDataRT15_g128950 = Data15_g128950.FormDataRT;
					Out_FlowDataRT15_g128950 = Data15_g128950.FlowDataRT;
					}
					half4 Global_AtmoParams314_g128949 = Out_AtmoDataRT15_g128950;
					float temp_output_6_0_g128968 = (Global_AtmoParams314_g128949).x;
					#ifdef TVE_DUMMY
					float staticSwitch14_g128968 = ( temp_output_6_0_g128968 + _DrynessElementMode );
					#else
					float staticSwitch14_g128968 = temp_output_6_0_g128968;
					#endif
					#ifdef TVE_DRYNESS_ELEMENT
					float staticSwitch351_g128949 = staticSwitch14_g128968;
					#else
					float staticSwitch351_g128949 = TVE_AtmoParams.x;
					#endif
					float lerpResult505_g128949 = lerp( 1.0 , ( staticSwitch351_g128949 * TVE_IsEnabled ) , _DrynessGlobalValue);
					half Dryness_GlobalValue352_g128949 = lerpResult505_g128949;
					float3 lerpResult485_g128949 = lerp( Visual_Albedo292_g128949 , temp_cast_32 , ( Dryness_GlobalValue352_g128949 * _DrynessGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128972 = 2.0;
					#else
					float staticSwitch1_g128972 = 4.594794;
					#endif
					half Dryness_TexMask478_g128949 = 1.0;
					float temp_output_280_11_g128949 = Out_MultiMask4_g128951;
					half Visual_MultiMask310_g128949 = temp_output_280_11_g128949;
					float lerpResult283_g128949 = lerp( 1.0 , Visual_MultiMask310_g128949 , _DrynessMultiValue);
					half Dryness_MultiMask302_g128949 = lerpResult283_g128949;
					float temp_output_280_15_g128949 = Out_Luminosity4_g128951;
					half Visual_Luminosity309_g128949 = temp_output_280_15_g128949;
					float clampResult17_g128961 = clamp( Visual_Luminosity309_g128949 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128965 = _DrynessLumaRemap.x;
					float temp_output_9_0_g128965 = ( clampResult17_g128961 - temp_output_7_0_g128965 );
					float lerpResult295_g128949 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128965 * _DrynessLumaRemap.z ) + 0.0001 ) ) , _DrynessLumaValue);
					half Dryness_LumaMask301_g128949 = lerpResult295_g128949;
					half Dryness_VertMask378_g128949 = 1.0;
					half Dryness_MaskNoise291_g128949 = 1.0;
					half Custom_Mask411_g128949 = 1.0;
					float temp_output_7_0_g128970 = _DrynessBlendRemap.x;
					float temp_output_9_0_g128970 = ( ( _DrynessIntensityValue * Dryness_TexMask478_g128949 * Dryness_MultiMask302_g128949 * Dryness_LumaMask301_g128949 * Dryness_VertMask378_g128949 * Dryness_MaskNoise291_g128949 * Dryness_GlobalValue352_g128949 * Custom_Mask411_g128949 ) - temp_output_7_0_g128970 );
					half Dryness_Mask329_g128949 = saturate( ( ( temp_output_9_0_g128970 * _DrynessBlendRemap.z ) + 0.0001 ) );
					float3 lerpResult336_g128949 = lerp( Visual_Albedo292_g128949 , ( lerpResult485_g128949 * staticSwitch1_g128972 * (_DrynessColor).rgb ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float3 staticSwitch356_g128949 = lerpResult336_g128949;
					#else
					float3 staticSwitch356_g128949 = Visual_Albedo292_g128949;
					#endif
					half3 Final_Albedo331_g128949 = staticSwitch356_g128949;
					float3 In_Albedo3_g128952 = Final_Albedo331_g128949;
					float3 In_AlbedoRaw3_g128952 = Out_AlbedoRaw4_g128951;
					float2 In_NormalTS3_g128952 = Out_NormalTS4_g128951;
					float3 In_NormalWS3_g128952 = Out_NormalWS4_g128951;
					half4 Visual_Shader415_g128949 = Out_Shader4_g128951;
					float4 break438_g128949 = Visual_Shader415_g128949;
					float4 appendResult439_g128949 = (float4(break438_g128949.x , break438_g128949.y , break438_g128949.z , ( break438_g128949.w * _DrynessSmoothnessValue )));
					float4 lerpResult427_g128949 = lerp( Visual_Shader415_g128949 , appendResult439_g128949 , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float4 staticSwitch426_g128949 = lerpResult427_g128949;
					#else
					float4 staticSwitch426_g128949 = Visual_Shader415_g128949;
					#endif
					half4 Final_Shader433_g128949 = staticSwitch426_g128949;
					float4 In_Shader3_g128952 = Final_Shader433_g128949;
					float4 In_Emissive3_g128952 = Out_Emissive4_g128951;
					float In_Grayscale3_g128952 = temp_output_280_12_g128949;
					float In_Luminosity3_g128952 = temp_output_280_15_g128949;
					float In_MultiMask3_g128952 = temp_output_280_11_g128949;
					float In_AlphaClip3_g128952 = Out_AlphaClip4_g128951;
					float In_AlphaFade3_g128952 = Out_AlphaFade4_g128951;
					float3 In_Translucency3_g128952 = Out_Translucency4_g128951;
					half Visual_Transmission416_g128949 = Out_Transmission4_g128951;
					float lerpResult421_g128949 = lerp( Visual_Transmission416_g128949 , ( Visual_Transmission416_g128949 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float staticSwitch418_g128949 = lerpResult421_g128949;
					#else
					float staticSwitch418_g128949 = Visual_Transmission416_g128949;
					#endif
					half Final_Transmission425_g128949 = staticSwitch418_g128949;
					float In_Transmission3_g128952 = Final_Transmission425_g128949;
					float In_Thickness3_g128952 = Out_Thickness4_g128951;
					float In_Diffusion3_g128952 = Out_Diffusion4_g128951;
					float In_Depth3_g128952 = Out_Depth4_g128951;
					{
					Data3_g128952.Dummy = In_Dummy3_g128952;
					Data3_g128952.Albedo = In_Albedo3_g128952;
					Data3_g128952.AlbedoRaw = In_AlbedoRaw3_g128952;
					Data3_g128952.NormalTS = In_NormalTS3_g128952;
					Data3_g128952.NormalWS = In_NormalWS3_g128952;
					Data3_g128952.Shader = In_Shader3_g128952;
					Data3_g128952.Emissive= In_Emissive3_g128952;
					Data3_g128952.MultiMask = In_MultiMask3_g128952;
					Data3_g128952.Grayscale = In_Grayscale3_g128952;
					Data3_g128952.Luminosity = In_Luminosity3_g128952;
					Data3_g128952.AlphaClip = In_AlphaClip3_g128952;
					Data3_g128952.AlphaFade = In_AlphaFade3_g128952;
					Data3_g128952.Translucency = In_Translucency3_g128952;
					Data3_g128952.Transmission = In_Transmission3_g128952;
					Data3_g128952.Thickness = In_Thickness3_g128952;
					Data3_g128952.Diffusion = In_Diffusion3_g128952;
					Data3_g128952.Depth = In_Depth3_g128952;
					}
					TVEVisualData Data4_g128974 = Data3_g128952;
					float Out_Dummy4_g128974 = 0;
					float3 Out_Albedo4_g128974 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128974 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128974 = float2( 0,0 );
					float3 Out_NormalWS4_g128974 = float3( 0,0,0 );
					float4 Out_Shader4_g128974 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128974 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128974 = 0;
					float Out_Grayscale4_g128974 = 0;
					float Out_Luminosity4_g128974 = 0;
					float Out_AlphaClip4_g128974 = 0;
					float Out_AlphaFade4_g128974 = 0;
					float3 Out_Translucency4_g128974 = float3( 0,0,0 );
					float Out_Transmission4_g128974 = 0;
					float Out_Thickness4_g128974 = 0;
					float Out_Diffusion4_g128974 = 0;
					float Out_Depth4_g128974 = 0;
					{
					Out_Dummy4_g128974 = Data4_g128974.Dummy;
					Out_Albedo4_g128974 = Data4_g128974.Albedo;
					Out_AlbedoRaw4_g128974 = Data4_g128974.AlbedoRaw;
					Out_NormalTS4_g128974 = Data4_g128974.NormalTS;
					Out_NormalWS4_g128974 = Data4_g128974.NormalWS;
					Out_Shader4_g128974 = Data4_g128974.Shader;
					Out_Emissive4_g128974= Data4_g128974.Emissive;
					Out_MultiMask4_g128974 = Data4_g128974.MultiMask;
					Out_Grayscale4_g128974 = Data4_g128974.Grayscale;
					Out_Luminosity4_g128974= Data4_g128974.Luminosity;
					Out_AlphaClip4_g128974 = Data4_g128974.AlphaClip;
					Out_AlphaFade4_g128974 = Data4_g128974.AlphaFade;
					Out_Translucency4_g128974 = Data4_g128974.Translucency;
					Out_Transmission4_g128974 = Data4_g128974.Transmission;
					Out_Thickness4_g128974 = Data4_g128974.Thickness;
					Out_Diffusion4_g128974 = Data4_g128974.Diffusion;
					Out_Depth4_g128974= Data4_g128974.Depth;
					}
					half3 Visual_Albedo127_g128973 = Out_Albedo4_g128974;
					float3 temp_output_622_0_g128973 = (_OverlayColor).rgb;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128977) = _OverlayAlbedoTex;
					float localFilterTexture19_g128988 = ( 0.0 );
					SamplerState SS19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128988 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128988 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128988 = SamplerDefault19_g128988;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128988 = SamplerDefault19_g128988;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128988 = SamplerPoint19_g128988;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128988 = SamplerLow19_g128988;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128988 = SamplerMedium19_g128988;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128988 = SamplerHigh19_g128988;
					#endif
					}
					SamplerState Sampler238_g128977 = SS19_g128988;
					float4 temp_output_6_0_g128978 = _overlay_coord_value;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128978 = ( temp_output_6_0_g128978 + ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) );
					#else
					float4 staticSwitch14_g128978 = temp_output_6_0_g128978;
					#endif
					half4 Overlay_Coords639_g128973 = staticSwitch14_g128978;
					float4 temp_output_37_0_g128977 = Overlay_Coords639_g128973;
					half4 Coords238_g128977 = temp_output_37_0_g128977;
					TVEModelData Data15_g128990 = Data16_g114311;
					float Out_Dummy15_g128990 = 0;
					float3 Out_PositionWS15_g128990 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128990 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128990 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128990 = float3( 0,0,0 );
					float4 Out_VertexData15_g128990 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128990 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128990 = Data15_g128990.Dummy;
					Out_PositionWS15_g128990 = Data15_g128990.PositionWS;
					Out_PositionWO15_g128990 = Data15_g128990.PositionWO;
					Out_PivotWS15_g128990 = Data15_g128990.PivotWS;
					Out_PivotWO15_g128990 = Data15_g128990.PivotWO;
					Out_NormalWS15_g128990 = Data15_g128990.NormalWS;
					Out_ViewDirWS15_g128990 = Data15_g128990.ViewDirWS;
					Out_VertexData15_g128990 = Data15_g128990.VertexData;
					Out_BoundsData15_g128990 = Data15_g128990.BoundsData;
					}
					half3 Model_PositionWO602_g128973 = Out_PositionWO15_g128990;
					float3 temp_output_279_0_g128977 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128977 = temp_output_279_0_g128977;
					half4 localSamplePlanar2D238_g128977 = SamplePlanar2D( Texture238_g128977 , Sampler238_g128977 , Coords238_g128977 , WorldPosition238_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler246_g128977 = SS19_g128988;
					half4 Coords246_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition246_g128977 = temp_output_279_0_g128977;
					half3 Model_NormalWS712_g128973 = Out_NormalWS15_g128990;
					float3 temp_output_280_0_g128977 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128977 = temp_output_280_0_g128977;
					half4 localSamplePlanar3D246_g128977 = SamplePlanar3D( Texture246_g128977 , Sampler246_g128977 , Coords246_g128977 , WorldPosition246_g128977 , WorldNormal246_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler234_g128977 = SS19_g128988;
					float4 Coords234_g128977 = temp_output_37_0_g128977;
					float3 WorldPosition234_g128977 = temp_output_279_0_g128977;
					float4 localSampleStochastic2D234_g128977 = SampleStochastic2D( Texture234_g128977 , Sampler234_g128977 , Coords234_g128977 , WorldPosition234_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler263_g128977 = SS19_g128988;
					half4 Coords263_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition263_g128977 = temp_output_279_0_g128977;
					half3 WorldNormal263_g128977 = temp_output_280_0_g128977;
					half4 localSampleStochastic3D263_g128977 = SampleStochastic3D( Texture263_g128977 , Sampler263_g128977 , Coords263_g128977 , WorldPosition263_g128977 , WorldNormal263_g128977 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch676_g128973 = localSamplePlanar3D246_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch676_g128973 = localSampleStochastic2D234_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch676_g128973 = localSampleStochastic3D263_g128977;
					#else
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#endif
					half3 Overlay_Albedo526_g128973 = (staticSwitch676_g128973).xyz;
					#ifdef TVE_OVERLAY_TEX
					float3 staticSwitch578_g128973 = ( temp_output_622_0_g128973 * Overlay_Albedo526_g128973 );
					#else
					float3 staticSwitch578_g128973 = temp_output_622_0_g128973;
					#endif
					float3 temp_output_6_0_g128991 = staticSwitch578_g128973;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g128991 = ( temp_output_6_0_g128991 + _OverlayTextureMode );
					#else
					float3 staticSwitch14_g128991 = temp_output_6_0_g128991;
					#endif
					float3 temp_cast_33 = (0.0).xxx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128981) = _OverlayGlitterTexRT;
					SamplerState Sampler246_g128981 = sampler_Linear_Repeat;
					float4 appendResult863_g128973 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g128981 = appendResult863_g128973;
					half4 Coords246_g128981 = temp_output_37_0_g128981;
					float3 temp_output_279_0_g128981 = Model_PositionWO602_g128973;
					half3 WorldPosition246_g128981 = temp_output_279_0_g128981;
					float3 temp_output_280_0_g128981 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128981 = temp_output_280_0_g128981;
					half4 localSamplePlanar3D246_g128981 = SamplePlanar3D( Texture246_g128981 , Sampler246_g128981 , Coords246_g128981 , WorldPosition246_g128981 , WorldNormal246_g128981 );
					half Overlay_GlitterTex854_g128973 = (localSamplePlanar3D246_g128981).x;
					half3 Model_PositionWS879_g128973 = Out_PositionWS15_g128990;
					#ifdef TVE_OVERLAY_GLITTER
					float3 staticSwitch868_g128973 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g128973 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g128973 ) / _OverlayGlitterDistValue ) ) ) );
					#else
					float3 staticSwitch868_g128973 = temp_cast_33;
					#endif
					half3 Overlay_GlitterColor865_g128973 = staticSwitch868_g128973;
					half Overlay_TexMask908_g128973 = 1.0;
					float3 temp_output_739_21_g128973 = Out_NormalWS4_g128974;
					half3 Visual_NormalWS749_g128973 = temp_output_739_21_g128973;
					float clampResult17_g128997 = clamp( saturate( (Visual_NormalWS749_g128973).y ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129001 = _OverlayProjRemap.x;
					float temp_output_9_0_g129001 = ( clampResult17_g128997 - temp_output_7_0_g129001 );
					float lerpResult842_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129001 * _OverlayProjRemap.z ) + 0.0001 ) ) , _OverlayProjValue);
					half Overlay_MaskProj457_g128973 = lerpResult842_g128973;
					float temp_output_739_15_g128973 = Out_Luminosity4_g128974;
					half Visual_Luminosity654_g128973 = temp_output_739_15_g128973;
					float clampResult17_g129005 = clamp( Visual_Luminosity654_g128973 , 0.0001 , 0.9999 );
					float temp_output_7_0_g129006 = _OverlayLumaRemap.x;
					float temp_output_9_0_g129006 = ( clampResult17_g129005 - temp_output_7_0_g129006 );
					float lerpResult587_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129006 * _OverlayLumaRemap.z ) + 0.0001 ) ) , _OverlayLumaValue);
					half Overlay_MaskLuma438_g128973 = lerpResult587_g128973;
					half Overlay_VertMask801_g128973 = 1.0;
					half Overlay_MaskNoise427_g128973 = 1.0;
					TVEGlobalData Data15_g128975 = Data204_g128736;
					float Out_Dummy15_g128975 = 0;
					float4 Out_CoatDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128975 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128975 = Data15_g128975.Dummy;
					Out_CoatDataRT15_g128975 = Data15_g128975.CoatDataRT;
					Out_PaintDataRT15_g128975 = Data15_g128975.PaintDataRT;
					Out_GlowDataRT15_g128975= Data15_g128975.GlowDataRT;
					Out_AtmoDataRT15_g128975= Data15_g128975.AtmoDataRT;
					Out_FadeDataRT15_g128975= Data15_g128975.FadeDataRT;
					Out_FormDataRT15_g128975 = Data15_g128975.FormDataRT;
					Out_FlowDataRT15_g128975 = Data15_g128975.FlowDataRT;
					}
					half4 Global_AtmoParams516_g128973 = Out_AtmoDataRT15_g128975;
					float temp_output_6_0_g129007 = (Global_AtmoParams516_g128973).z;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129007 = ( temp_output_6_0_g129007 + _OverlayElementMode );
					#else
					float staticSwitch14_g129007 = temp_output_6_0_g129007;
					#endif
					#ifdef TVE_OVERLAY_ELEMENT
					float staticSwitch705_g128973 = staticSwitch14_g129007;
					#else
					float staticSwitch705_g128973 = TVE_AtmoParams.z;
					#endif
					float lerpResult937_g128973 = lerp( 1.0 , ( staticSwitch705_g128973 * TVE_IsEnabled ) , _OverlayGlobalValue);
					half Overlay_MaskGlobal429_g128973 = lerpResult937_g128973;
					half Custom_Mask646_g128973 = 1.0;
					float temp_output_7_0_g129004 = _OverlayBlendRemap.x;
					float temp_output_9_0_g129004 = ( ( _OverlayIntensityValue * Overlay_TexMask908_g128973 * Overlay_MaskProj457_g128973 * Overlay_MaskLuma438_g128973 * Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 * Custom_Mask646_g128973 ) - temp_output_7_0_g129004 );
					half Overlay_Mask494_g128973 = saturate( ( ( temp_output_9_0_g129004 / ( _OverlayBlendRemap.y - temp_output_7_0_g129004 ) ) + 0.0001 ) );
					float3 lerpResult467_g128973 = lerp( Visual_Albedo127_g128973 , ( staticSwitch14_g128991 + Overlay_GlitterColor865_g128973 ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float3 staticSwitch577_g128973 = lerpResult467_g128973;
					#else
					float3 staticSwitch577_g128973 = Visual_Albedo127_g128973;
					#endif
					half3 Final_Albedo493_g128973 = staticSwitch577_g128973;
					float3 In_Albedo3_g128976 = Final_Albedo493_g128973;
					float3 In_AlbedoRaw3_g128976 = Out_AlbedoRaw4_g128974;
					half2 Visual_NormalTS535_g128973 = Out_NormalTS4_g128974;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128979) = _OverlayNormalTex;
					float localFilterTexture29_g128989 = ( 0.0 );
					SamplerState SS29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128989 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128989 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128989 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128989 = SamplerDefault29_g128989;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128989 = SamplerDefault29_g128989;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128989 = SamplerPoint29_g128989;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128989 = SamplerLow29_g128989;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128989 = SamplerMedium29_g128989;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128989 = SamplerHigh29_g128989;
					#endif
					}
					SamplerState Sampler238_g128979 = SS29_g128989;
					float4 temp_output_37_0_g128979 = Overlay_Coords639_g128973;
					half4 Coords238_g128979 = temp_output_37_0_g128979;
					float3 temp_output_279_0_g128979 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128979 = temp_output_279_0_g128979;
					half4 localSamplePlanar2D238_g128979 = SamplePlanar2D( Texture238_g128979 , Sampler238_g128979 , Coords238_g128979 , WorldPosition238_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128979) = _OverlayNormalTex;
					SamplerState Sampler246_g128979 = SS29_g128989;
					half4 Coords246_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition246_g128979 = temp_output_279_0_g128979;
					float3 temp_output_280_0_g128979 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128979 = temp_output_280_0_g128979;
					half4 localSamplePlanar3D246_g128979 = SamplePlanar3D( Texture246_g128979 , Sampler246_g128979 , Coords246_g128979 , WorldPosition246_g128979 , WorldNormal246_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128979) = _OverlayNormalTex;
					SamplerState Sampler234_g128979 = SS29_g128989;
					float4 Coords234_g128979 = temp_output_37_0_g128979;
					float3 WorldPosition234_g128979 = temp_output_279_0_g128979;
					float4 localSampleStochastic2D234_g128979 = SampleStochastic2D( Texture234_g128979 , Sampler234_g128979 , Coords234_g128979 , WorldPosition234_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128979) = _OverlayNormalTex;
					SamplerState Sampler263_g128979 = SS29_g128989;
					half4 Coords263_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition263_g128979 = temp_output_279_0_g128979;
					half3 WorldNormal263_g128979 = temp_output_280_0_g128979;
					half4 localSampleStochastic3D263_g128979 = SampleStochastic3D( Texture263_g128979 , Sampler263_g128979 , Coords263_g128979 , WorldPosition263_g128979 , WorldNormal263_g128979 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch686_g128973 = localSamplePlanar3D246_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch686_g128973 = localSampleStochastic2D234_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch686_g128973 = localSampleStochastic3D263_g128979;
					#else
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#endif
					half4 Normal_Packed45_g128982 = staticSwitch686_g128973;
					float2 appendResult58_g128982 = (float2(( (Normal_Packed45_g128982).x * (Normal_Packed45_g128982).w ) , (Normal_Packed45_g128982).y));
					half2 Normal_Default50_g128982 = appendResult58_g128982;
					half2 Normal_ASTC41_g128982 = (Normal_Packed45_g128982).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128982 = Normal_ASTC41_g128982;
					#else
					float2 staticSwitch38_g128982 = Normal_Default50_g128982;
					#endif
					half2 Normal_NO_DTX544_g128982 = (Normal_Packed45_g128982).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128982 = Normal_NO_DTX544_g128982;
					#else
					float2 staticSwitch37_g128982 = staticSwitch38_g128982;
					#endif
					float2 temp_output_623_0_g128973 = (staticSwitch37_g128982*2.0 + -1.0);
					half2 Overlay_Normal528_g128973 = temp_output_623_0_g128973;
					#ifdef TVE_OVERLAY_TEX
					float2 staticSwitch579_g128973 = Overlay_Normal528_g128973;
					#else
					float2 staticSwitch579_g128973 = Visual_NormalTS535_g128973;
					#endif
					float2 lerpResult551_g128973 = lerp( Visual_NormalTS535_g128973 , ( staticSwitch579_g128973 * _OverlayNormalValue ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float2 staticSwitch583_g128973 = lerpResult551_g128973;
					#else
					float2 staticSwitch583_g128973 = Visual_NormalTS535_g128973;
					#endif
					half2 Final_NormalTS499_g128973 = staticSwitch583_g128973;
					float2 In_NormalTS3_g128976 = Final_NormalTS499_g128973;
					float3 In_NormalWS3_g128976 = temp_output_739_21_g128973;
					half4 Visual_Masks536_g128973 = Out_Shader4_g128974;
					float4 appendResult585_g128973 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
					float4 lerpResult584_g128973 = lerp( Visual_Masks536_g128973 , appendResult585_g128973 , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float4 staticSwitch586_g128973 = lerpResult584_g128973;
					#else
					float4 staticSwitch586_g128973 = Visual_Masks536_g128973;
					#endif
					half4 Final_Masks482_g128973 = staticSwitch586_g128973;
					float4 In_Shader3_g128976 = Final_Masks482_g128973;
					float4 In_Emissive3_g128976 = Out_Emissive4_g128974;
					float temp_output_739_12_g128973 = Out_Grayscale4_g128974;
					float In_Grayscale3_g128976 = temp_output_739_12_g128973;
					float In_Luminosity3_g128976 = temp_output_739_15_g128973;
					float In_MultiMask3_g128976 = Out_MultiMask4_g128974;
					float In_AlphaClip3_g128976 = Out_AlphaClip4_g128974;
					float In_AlphaFade3_g128976 = Out_AlphaFade4_g128974;
					float3 In_Translucency3_g128976 = Out_Translucency4_g128974;
					half Visual_Transmission699_g128973 = Out_Transmission4_g128974;
					float lerpResult746_g128973 = lerp( Visual_Transmission699_g128973 , ( Visual_Transmission699_g128973 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 ));
					#ifdef TVE_OVERLAY
					float staticSwitch703_g128973 = lerpResult746_g128973;
					#else
					float staticSwitch703_g128973 = Visual_Transmission699_g128973;
					#endif
					half Final_Transmission702_g128973 = staticSwitch703_g128973;
					float In_Transmission3_g128976 = Final_Transmission702_g128973;
					float In_Thickness3_g128976 = Out_Thickness4_g128974;
					float In_Diffusion3_g128976 = Out_Diffusion4_g128974;
					float In_Depth3_g128976 = Out_Depth4_g128974;
					{
					Data3_g128976.Dummy = In_Dummy3_g128976;
					Data3_g128976.Albedo = In_Albedo3_g128976;
					Data3_g128976.AlbedoRaw = In_AlbedoRaw3_g128976;
					Data3_g128976.NormalTS = In_NormalTS3_g128976;
					Data3_g128976.NormalWS = In_NormalWS3_g128976;
					Data3_g128976.Shader = In_Shader3_g128976;
					Data3_g128976.Emissive= In_Emissive3_g128976;
					Data3_g128976.MultiMask = In_MultiMask3_g128976;
					Data3_g128976.Grayscale = In_Grayscale3_g128976;
					Data3_g128976.Luminosity = In_Luminosity3_g128976;
					Data3_g128976.AlphaClip = In_AlphaClip3_g128976;
					Data3_g128976.AlphaFade = In_AlphaFade3_g128976;
					Data3_g128976.Translucency = In_Translucency3_g128976;
					Data3_g128976.Transmission = In_Transmission3_g128976;
					Data3_g128976.Thickness = In_Thickness3_g128976;
					Data3_g128976.Diffusion = In_Diffusion3_g128976;
					Data3_g128976.Depth = In_Depth3_g128976;
					}
					TVEVisualData Data4_g129011 = Data3_g128976;
					float Out_Dummy4_g129011 = 0;
					float3 Out_Albedo4_g129011 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129011 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129011 = float2( 0,0 );
					float3 Out_NormalWS4_g129011 = float3( 0,0,0 );
					float4 Out_Shader4_g129011 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129011 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129011 = 0;
					float Out_Grayscale4_g129011 = 0;
					float Out_Luminosity4_g129011 = 0;
					float Out_AlphaClip4_g129011 = 0;
					float Out_AlphaFade4_g129011 = 0;
					float3 Out_Translucency4_g129011 = float3( 0,0,0 );
					float Out_Transmission4_g129011 = 0;
					float Out_Thickness4_g129011 = 0;
					float Out_Diffusion4_g129011 = 0;
					float Out_Depth4_g129011 = 0;
					{
					Out_Dummy4_g129011 = Data4_g129011.Dummy;
					Out_Albedo4_g129011 = Data4_g129011.Albedo;
					Out_AlbedoRaw4_g129011 = Data4_g129011.AlbedoRaw;
					Out_NormalTS4_g129011 = Data4_g129011.NormalTS;
					Out_NormalWS4_g129011 = Data4_g129011.NormalWS;
					Out_Shader4_g129011 = Data4_g129011.Shader;
					Out_Emissive4_g129011= Data4_g129011.Emissive;
					Out_MultiMask4_g129011 = Data4_g129011.MultiMask;
					Out_Grayscale4_g129011 = Data4_g129011.Grayscale;
					Out_Luminosity4_g129011= Data4_g129011.Luminosity;
					Out_AlphaClip4_g129011 = Data4_g129011.AlphaClip;
					Out_AlphaFade4_g129011 = Data4_g129011.AlphaFade;
					Out_Translucency4_g129011 = Data4_g129011.Translucency;
					Out_Transmission4_g129011 = Data4_g129011.Transmission;
					Out_Thickness4_g129011 = Data4_g129011.Thickness;
					Out_Diffusion4_g129011 = Data4_g129011.Diffusion;
					Out_Depth4_g129011= Data4_g129011.Depth;
					}
					half3 Visual_Albedo127_g129010 = Out_Albedo4_g129011;
					TVEGlobalData Data15_g129016 = Data204_g128736;
					float Out_Dummy15_g129016 = 0;
					float4 Out_CoatDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129016 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129016 = Data15_g129016.Dummy;
					Out_CoatDataRT15_g129016 = Data15_g129016.CoatDataRT;
					Out_PaintDataRT15_g129016 = Data15_g129016.PaintDataRT;
					Out_GlowDataRT15_g129016= Data15_g129016.GlowDataRT;
					Out_AtmoDataRT15_g129016= Data15_g129016.AtmoDataRT;
					Out_FadeDataRT15_g129016= Data15_g129016.FadeDataRT;
					Out_FormDataRT15_g129016 = Data15_g129016.FormDataRT;
					Out_FlowDataRT15_g129016 = Data15_g129016.FlowDataRT;
					}
					half4 Global_AtmoParams516_g129010 = Out_AtmoDataRT15_g129016;
					float4 temp_output_6_0_g129037 = Global_AtmoParams516_g129010;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129037 = ( temp_output_6_0_g129037 + _WetnessElementMode );
					#else
					float4 staticSwitch14_g129037 = temp_output_6_0_g129037;
					#endif
					#ifdef TVE_WETNESS_ELEMENT
					float4 staticSwitch663_g129010 = staticSwitch14_g129037;
					#else
					float4 staticSwitch663_g129010 = TVE_AtmoParams;
					#endif
					float2 lerpResult1121_g129010 = lerp( float2( 1,1 ) , (( staticSwitch663_g129010 * TVE_IsEnabled )).yw , _WetnessGlobalValue);
					float2 break1123_g129010 = lerpResult1121_g129010;
					half Global_Wetness429_g129010 = break1123_g129010.x;
					half Wetness_Value1042_g129010 = ( _WetnessIntensityValue * Global_Wetness429_g129010 );
					half Wetness_VertMask1024_g129010 = 1.0;
					float temp_output_1043_0_g129010 = ( Wetness_Value1042_g129010 * Wetness_VertMask1024_g129010 );
					half Wetness_Mask866_g129010 = temp_output_1043_0_g129010;
					half Water_VertMask1094_g129010 = 1.0;
					half4 Visual_Masks536_g129010 = Out_Shader4_g129011;
					float lerpResult1013_g129010 = lerp( 1.0 , (Visual_Masks536_g129010).z , _WetnessWaterBaseValue);
					half Water_HeightMask782_g129010 = lerpResult1013_g129010;
					float clampResult17_g129023 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g129010 * Water_VertMask1094_g129010 ) - Water_HeightMask782_g129010 ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129036 = _WetnessWaterBlendRemap.x;
					float temp_output_9_0_g129036 = ( clampResult17_g129023 - temp_output_7_0_g129036 );
					TVEModelData Data15_g129022 = Data16_g114311;
					float Out_Dummy15_g129022 = 0;
					float3 Out_PositionWS15_g129022 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129022 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129022 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g129022 = float3( 0,0,0 );
					float4 Out_VertexData15_g129022 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129022 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129022 = Data15_g129022.Dummy;
					Out_PositionWS15_g129022 = Data15_g129022.PositionWS;
					Out_PositionWO15_g129022 = Data15_g129022.PositionWO;
					Out_PivotWS15_g129022 = Data15_g129022.PivotWS;
					Out_PivotWO15_g129022 = Data15_g129022.PivotWO;
					Out_NormalWS15_g129022 = Data15_g129022.NormalWS;
					Out_ViewDirWS15_g129022 = Data15_g129022.ViewDirWS;
					Out_VertexData15_g129022 = Data15_g129022.VertexData;
					Out_BoundsData15_g129022 = Data15_g129022.BoundsData;
					}
					half3 Model_NormalWS798_g129010 = Out_NormalWS15_g129022;
					float temp_output_786_0_g129010 = saturate( (Model_NormalWS798_g129010).y );
					half Wetness_ProjMask790_g129010 = temp_output_786_0_g129010;
					half Water_Mask760_g129010 = ( saturate( ( ( temp_output_9_0_g129036 * _WetnessWaterBlendRemap.z ) + 0.0001 ) ) * Wetness_ProjMask790_g129010 );
					float3 lerpResult918_g129010 = lerp( Visual_Albedo127_g129010 , ( Visual_Albedo127_g129010 * (_WetnessWaterColor).rgb ) , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float3 staticSwitch946_g129010 = lerpResult918_g129010;
					#else
					float3 staticSwitch946_g129010 = Visual_Albedo127_g129010;
					#endif
					float3 lerpResult768_g129010 = lerp( staticSwitch946_g129010 , ( staticSwitch946_g129010 * staticSwitch946_g129010 ) , _WetnessContrastValue);
					float3 lerpResult651_g129010 = lerp( Visual_Albedo127_g129010 , lerpResult768_g129010 , Wetness_Mask866_g129010);
					#ifdef TVE_WETNESS
					float3 staticSwitch577_g129010 = lerpResult651_g129010;
					#else
					float3 staticSwitch577_g129010 = Visual_Albedo127_g129010;
					#endif
					half3 Final_Albedo493_g129010 = staticSwitch577_g129010;
					float3 In_Albedo3_g129012 = Final_Albedo493_g129010;
					float3 In_AlbedoRaw3_g129012 = Out_AlbedoRaw4_g129011;
					half2 Visual_Normal535_g129010 = Out_NormalTS4_g129011;
					float lerpResult877_g129010 = lerp( 1.0 , 0.0 , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch957_g129010 = ( Visual_Normal535_g129010 * lerpResult877_g129010 );
					#else
					float2 staticSwitch957_g129010 = Visual_Normal535_g129010;
					#endif
					float2 temp_cast_34 = (0.0).xx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g129020) = _WetnessDropsTexRT;
					SamplerState Sampler238_g129020 = sampler_Linear_Repeat_Aniso8;
					float4 appendResult924_g129010 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g129020 = appendResult924_g129010;
					half4 Coords238_g129020 = temp_output_37_0_g129020;
					half3 Model_PositionWO602_g129010 = Out_PositionWO15_g129022;
					float3 temp_output_279_0_g129020 = Model_PositionWO602_g129010;
					half3 WorldPosition238_g129020 = temp_output_279_0_g129020;
					half4 localSamplePlanar2D238_g129020 = SamplePlanar2D( Texture238_g129020 , Sampler238_g129020 , Coords238_g129020 , WorldPosition238_g129020 );
					float4 temp_output_1010_0_g129010 = localSamplePlanar2D238_g129020;
					half2 Rain_DropsNormal919_g129010 = (temp_output_1010_0_g129010).zw;
					float2 temp_output_903_0_g129010 = (Rain_DropsNormal919_g129010*2.0 + -1.0);
					half2 Rain_RingsNormal713_g129010 = (temp_output_1010_0_g129010).xy;
					float2 lerpResult904_g129010 = lerp( temp_output_903_0_g129010 , (Rain_RingsNormal713_g129010*2.0 + -1.0) , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch960_g129010 = lerpResult904_g129010;
					#else
					float2 staticSwitch960_g129010 = temp_output_903_0_g129010;
					#endif
					half2 Rain_Drops1002_g129010 = ( staticSwitch960_g129010 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
					half3 Model_PositionWS823_g129010 = Out_PositionWS15_g129022;
					half Global_Rain955_g129010 = break1123_g129010.y;
					half Rain_Value1067_g129010 = Global_Rain955_g129010;
					half Rain_VertMask1108_g129010 = 1.0;
					half Rain_Mask999_g129010 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g129010 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g129010 * Rain_VertMask1108_g129010 );
					half2 Normal_Planar45_g129019 = ( Rain_Drops1002_g129010 * Rain_Mask999_g129010 * Wetness_ProjMask790_g129010 );
					float2 break71_g129019 = Normal_Planar45_g129019;
					float3 appendResult72_g129019 = (float3(break71_g129019.x , 0.0 , break71_g129019.y));
					half2 Wetness_Normal526_g129010 = (mul( ase_worldToTangent, appendResult72_g129019 )).xy;
					#ifdef TVE_WETNESS_DROPS
					float2 staticSwitch583_g129010 = Wetness_Normal526_g129010;
					#else
					float2 staticSwitch583_g129010 = temp_cast_34;
					#endif
					#ifdef TVE_WETNESS
					float2 staticSwitch774_g129010 = ( staticSwitch957_g129010 + staticSwitch583_g129010 );
					#else
					float2 staticSwitch774_g129010 = Visual_Normal535_g129010;
					#endif
					half2 Final_Normal499_g129010 = staticSwitch774_g129010;
					float2 In_NormalTS3_g129012 = Final_Normal499_g129010;
					float3 In_NormalWS3_g129012 = Out_NormalWS4_g129011;
					float4 break658_g129010 = Visual_Masks536_g129010;
					float temp_output_935_0_g129010 = ( Wetness_Mask866_g129010 * _WetnessSmoothnessValue );
					float lerpResult941_g129010 = lerp( temp_output_935_0_g129010 , 2.0 , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float staticSwitch959_g129010 = lerpResult941_g129010;
					#else
					float staticSwitch959_g129010 = temp_output_935_0_g129010;
					#endif
					float4 appendResult661_g129010 = (float4(break658_g129010.x , break658_g129010.y , break658_g129010.z , saturate( ( break658_g129010.w + staticSwitch959_g129010 ) )));
					#ifdef TVE_WETNESS
					float4 staticSwitch586_g129010 = appendResult661_g129010;
					#else
					float4 staticSwitch586_g129010 = Visual_Masks536_g129010;
					#endif
					half4 Final_Masks482_g129010 = staticSwitch586_g129010;
					float4 In_Shader3_g129012 = Final_Masks482_g129010;
					float4 In_Emissive3_g129012 = Out_Emissive4_g129011;
					float In_Grayscale3_g129012 = Out_Grayscale4_g129011;
					float In_Luminosity3_g129012 = Out_Luminosity4_g129011;
					float In_MultiMask3_g129012 = Out_MultiMask4_g129011;
					float In_AlphaClip3_g129012 = Out_AlphaClip4_g129011;
					float In_AlphaFade3_g129012 = Out_AlphaFade4_g129011;
					float3 In_Translucency3_g129012 = Out_Translucency4_g129011;
					float In_Transmission3_g129012 = Out_Transmission4_g129011;
					float In_Thickness3_g129012 = Out_Thickness4_g129011;
					float In_Diffusion3_g129012 = Out_Diffusion4_g129011;
					float In_Depth3_g129012 = Out_Depth4_g129011;
					{
					Data3_g129012.Dummy = In_Dummy3_g129012;
					Data3_g129012.Albedo = In_Albedo3_g129012;
					Data3_g129012.AlbedoRaw = In_AlbedoRaw3_g129012;
					Data3_g129012.NormalTS = In_NormalTS3_g129012;
					Data3_g129012.NormalWS = In_NormalWS3_g129012;
					Data3_g129012.Shader = In_Shader3_g129012;
					Data3_g129012.Emissive= In_Emissive3_g129012;
					Data3_g129012.MultiMask = In_MultiMask3_g129012;
					Data3_g129012.Grayscale = In_Grayscale3_g129012;
					Data3_g129012.Luminosity = In_Luminosity3_g129012;
					Data3_g129012.AlphaClip = In_AlphaClip3_g129012;
					Data3_g129012.AlphaFade = In_AlphaFade3_g129012;
					Data3_g129012.Translucency = In_Translucency3_g129012;
					Data3_g129012.Transmission = In_Transmission3_g129012;
					Data3_g129012.Thickness = In_Thickness3_g129012;
					Data3_g129012.Diffusion = In_Diffusion3_g129012;
					Data3_g129012.Depth = In_Depth3_g129012;
					}
					TVEVisualData Data4_g129043 = Data3_g129012;
					float Out_Dummy4_g129043 = 0;
					float3 Out_Albedo4_g129043 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129043 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129043 = float2( 0,0 );
					float3 Out_NormalWS4_g129043 = float3( 0,0,0 );
					float4 Out_Shader4_g129043 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129043 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129043 = 0;
					float Out_Grayscale4_g129043 = 0;
					float Out_Luminosity4_g129043 = 0;
					float Out_AlphaClip4_g129043 = 0;
					float Out_AlphaFade4_g129043 = 0;
					float3 Out_Translucency4_g129043 = float3( 0,0,0 );
					float Out_Transmission4_g129043 = 0;
					float Out_Thickness4_g129043 = 0;
					float Out_Diffusion4_g129043 = 0;
					float Out_Depth4_g129043 = 0;
					{
					Out_Dummy4_g129043 = Data4_g129043.Dummy;
					Out_Albedo4_g129043 = Data4_g129043.Albedo;
					Out_AlbedoRaw4_g129043 = Data4_g129043.AlbedoRaw;
					Out_NormalTS4_g129043 = Data4_g129043.NormalTS;
					Out_NormalWS4_g129043 = Data4_g129043.NormalWS;
					Out_Shader4_g129043 = Data4_g129043.Shader;
					Out_Emissive4_g129043= Data4_g129043.Emissive;
					Out_MultiMask4_g129043 = Data4_g129043.MultiMask;
					Out_Grayscale4_g129043 = Data4_g129043.Grayscale;
					Out_Luminosity4_g129043= Data4_g129043.Luminosity;
					Out_AlphaClip4_g129043 = Data4_g129043.AlphaClip;
					Out_AlphaFade4_g129043 = Data4_g129043.AlphaFade;
					Out_Translucency4_g129043 = Data4_g129043.Translucency;
					Out_Transmission4_g129043 = Data4_g129043.Transmission;
					Out_Thickness4_g129043 = Data4_g129043.Thickness;
					Out_Diffusion4_g129043 = Data4_g129043.Diffusion;
					Out_Depth4_g129043= Data4_g129043.Depth;
					}
					float3 temp_output_297_0_g129039 = Out_Albedo4_g129043;
					float3 In_Albedo3_g129054 = temp_output_297_0_g129039;
					float3 temp_output_297_23_g129039 = Out_AlbedoRaw4_g129043;
					float3 In_AlbedoRaw3_g129054 = temp_output_297_23_g129039;
					float2 In_NormalTS3_g129054 = Out_NormalTS4_g129043;
					float3 In_NormalWS3_g129054 = Out_NormalWS4_g129043;
					float4 In_Shader3_g129054 = Out_Shader4_g129043;
					float4 temp_cast_35 = (0.0).xxxx;
					half4 Visual_Emissive255_g129039 = Out_Emissive4_g129043;
					half Emissive_MeshMask221_g129039 = 1.0;
					half Emissive_Mask103_g129039 = 1.0;
					float temp_output_279_0_g129039 = ( Emissive_MeshMask221_g129039 * Emissive_Mask103_g129039 );
					float3 appendResult293_g129039 = (float3(temp_output_279_0_g129039 , temp_output_279_0_g129039 , temp_output_279_0_g129039));
					half3 Local_EmissiveColor278_g129039 = appendResult293_g129039;
					float3 temp_output_316_0_g129039 = (TVE_GlowParams).xyz;
					TVEGlobalData Data15_g129040 = Data204_g128736;
					float Out_Dummy15_g129040 = 0;
					float4 Out_CoatDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129040 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129040 = Data15_g129040.Dummy;
					Out_CoatDataRT15_g129040 = Data15_g129040.CoatDataRT;
					Out_PaintDataRT15_g129040 = Data15_g129040.PaintDataRT;
					Out_GlowDataRT15_g129040= Data15_g129040.GlowDataRT;
					Out_AtmoDataRT15_g129040= Data15_g129040.AtmoDataRT;
					Out_FadeDataRT15_g129040= Data15_g129040.FadeDataRT;
					Out_FormDataRT15_g129040 = Data15_g129040.FormDataRT;
					Out_FlowDataRT15_g129040 = Data15_g129040.FlowDataRT;
					}
					half4 Global_GlowParams179_g129039 = Out_GlowDataRT15_g129040;
					float3 temp_output_6_0_g129046 = (Global_GlowParams179_g129039).xyz;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g129046 = ( temp_output_6_0_g129046 + _EmissiveElementMode );
					#else
					float3 staticSwitch14_g129046 = temp_output_6_0_g129046;
					#endif
					#ifdef TVE_EMISSIVE_ELEMENT
					float3 staticSwitch228_g129039 = staticSwitch14_g129046;
					#else
					float3 staticSwitch228_g129039 = temp_output_316_0_g129039;
					#endif
					float3 lerpResult299_g129039 = lerp( float3( 1,1,1 ) , staticSwitch228_g129039 , ( _EmissiveGlobalValue * TVE_IsEnabled ));
					half3 Emissive_GlobalMask248_g129039 = lerpResult299_g129039;
					half3 Visual_AlbedoRaw306_g129039 = temp_output_297_23_g129039;
					float3 lerpResult307_g129039 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g129039 , _EmissiveColorMode);
					half3 Local_EmissiveValue88_g129039 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g129039 * lerpResult307_g129039 );
					half3 Emissive_Blend260_g129039 = ( ( (Visual_Emissive255_g129039).xyz * Local_EmissiveColor278_g129039 ) * Local_EmissiveValue88_g129039 );
					float3 temp_output_3_0_g129045 = Emissive_Blend260_g129039;
					float temp_output_15_0_g129045 = _emissive_power_value;
					float3 temp_output_23_0_g129045 = ( temp_output_3_0_g129045 * temp_output_15_0_g129045 );
					half Local_EmissiveMask294_g129039 = temp_output_279_0_g129039;
					float4 appendResult295_g129039 = (float4(temp_output_23_0_g129045 , Local_EmissiveMask294_g129039));
					#ifdef TVE_EMISSIVE
					float4 staticSwitch129_g129039 = appendResult295_g129039;
					#else
					float4 staticSwitch129_g129039 = temp_cast_35;
					#endif
					half4 Final_Emissive184_g129039 = staticSwitch129_g129039;
					float4 In_Emissive3_g129054 = Final_Emissive184_g129039;
					float In_Grayscale3_g129054 = Out_Grayscale4_g129043;
					float In_Luminosity3_g129054 = Out_Luminosity4_g129043;
					float temp_output_297_11_g129039 = Out_MultiMask4_g129043;
					float In_MultiMask3_g129054 = temp_output_297_11_g129039;
					float In_AlphaClip3_g129054 = Out_AlphaClip4_g129043;
					float In_AlphaFade3_g129054 = Out_AlphaFade4_g129043;
					float3 In_Translucency3_g129054 = Out_Translucency4_g129043;
					float In_Transmission3_g129054 = Out_Transmission4_g129043;
					float In_Thickness3_g129054 = Out_Thickness4_g129043;
					float In_Diffusion3_g129054 = Out_Diffusion4_g129043;
					float In_Depth3_g129054 = Out_Depth4_g129043;
					{
					Data3_g129054.Dummy = In_Dummy3_g129054;
					Data3_g129054.Albedo = In_Albedo3_g129054;
					Data3_g129054.AlbedoRaw = In_AlbedoRaw3_g129054;
					Data3_g129054.NormalTS = In_NormalTS3_g129054;
					Data3_g129054.NormalWS = In_NormalWS3_g129054;
					Data3_g129054.Shader = In_Shader3_g129054;
					Data3_g129054.Emissive= In_Emissive3_g129054;
					Data3_g129054.MultiMask = In_MultiMask3_g129054;
					Data3_g129054.Grayscale = In_Grayscale3_g129054;
					Data3_g129054.Luminosity = In_Luminosity3_g129054;
					Data3_g129054.AlphaClip = In_AlphaClip3_g129054;
					Data3_g129054.AlphaFade = In_AlphaFade3_g129054;
					Data3_g129054.Translucency = In_Translucency3_g129054;
					Data3_g129054.Transmission = In_Transmission3_g129054;
					Data3_g129054.Thickness = In_Thickness3_g129054;
					Data3_g129054.Diffusion = In_Diffusion3_g129054;
					Data3_g129054.Depth = In_Depth3_g129054;
					}
					TVEVisualData Data4_g129058 = Data3_g129054;
					float Out_Dummy4_g129058 = 0;
					float3 Out_Albedo4_g129058 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129058 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129058 = float2( 0,0 );
					float3 Out_NormalWS4_g129058 = float3( 0,0,0 );
					float4 Out_Shader4_g129058 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129058 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129058 = 0;
					float Out_Grayscale4_g129058 = 0;
					float Out_Luminosity4_g129058 = 0;
					float Out_AlphaClip4_g129058 = 0;
					float Out_AlphaFade4_g129058 = 0;
					float3 Out_Translucency4_g129058 = float3( 0,0,0 );
					float Out_Transmission4_g129058 = 0;
					float Out_Thickness4_g129058 = 0;
					float Out_Diffusion4_g129058 = 0;
					float Out_Depth4_g129058 = 0;
					{
					Out_Dummy4_g129058 = Data4_g129058.Dummy;
					Out_Albedo4_g129058 = Data4_g129058.Albedo;
					Out_AlbedoRaw4_g129058 = Data4_g129058.AlbedoRaw;
					Out_NormalTS4_g129058 = Data4_g129058.NormalTS;
					Out_NormalWS4_g129058 = Data4_g129058.NormalWS;
					Out_Shader4_g129058 = Data4_g129058.Shader;
					Out_Emissive4_g129058= Data4_g129058.Emissive;
					Out_MultiMask4_g129058 = Data4_g129058.MultiMask;
					Out_Grayscale4_g129058 = Data4_g129058.Grayscale;
					Out_Luminosity4_g129058= Data4_g129058.Luminosity;
					Out_AlphaClip4_g129058 = Data4_g129058.AlphaClip;
					Out_AlphaFade4_g129058 = Data4_g129058.AlphaFade;
					Out_Translucency4_g129058 = Data4_g129058.Translucency;
					Out_Transmission4_g129058 = Data4_g129058.Transmission;
					Out_Thickness4_g129058 = Data4_g129058.Thickness;
					Out_Diffusion4_g129058 = Data4_g129058.Diffusion;
					Out_Depth4_g129058= Data4_g129058.Depth;
					}
					float3 In_Albedo3_g129056 = Out_Albedo4_g129058;
					float3 In_AlbedoRaw3_g129056 = Out_AlbedoRaw4_g129058;
					float2 In_NormalTS3_g129056 = Out_NormalTS4_g129058;
					float3 In_NormalWS3_g129056 = Out_NormalWS4_g129058;
					float4 In_Shader3_g129056 = Out_Shader4_g129058;
					float4 In_Emissive3_g129056 = Out_Emissive4_g129058;
					float In_Grayscale3_g129056 = Out_Grayscale4_g129058;
					float In_Luminosity3_g129056 = Out_Luminosity4_g129058;
					float temp_output_836_11_g129055 = Out_MultiMask4_g129058;
					float In_MultiMask3_g129056 = temp_output_836_11_g129055;
					half Visual_AlphaClip667_g129055 = Out_AlphaClip4_g129058;
					TVEGlobalData Data15_g129057 = Data204_g128736;
					float Out_Dummy15_g129057 = 0;
					float4 Out_CoatDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129057 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129057 = Data15_g129057.Dummy;
					Out_CoatDataRT15_g129057 = Data15_g129057.CoatDataRT;
					Out_PaintDataRT15_g129057 = Data15_g129057.PaintDataRT;
					Out_GlowDataRT15_g129057= Data15_g129057.GlowDataRT;
					Out_AtmoDataRT15_g129057= Data15_g129057.AtmoDataRT;
					Out_FadeDataRT15_g129057= Data15_g129057.FadeDataRT;
					Out_FormDataRT15_g129057 = Data15_g129057.FormDataRT;
					Out_FlowDataRT15_g129057 = Data15_g129057.FlowDataRT;
					}
					half4 Global_FadeParams516_g129055 = Out_FadeDataRT15_g129057;
					float temp_output_6_0_g129064 = saturate( (Global_FadeParams516_g129055).w );
					#ifdef TVE_DUMMY
					float staticSwitch14_g129064 = ( temp_output_6_0_g129064 + _CutoutElementMode );
					#else
					float staticSwitch14_g129064 = temp_output_6_0_g129064;
					#endif
					#ifdef TVE_CUTOUT_ELEMENT
					float staticSwitch663_g129055 = staticSwitch14_g129064;
					#else
					float staticSwitch663_g129055 = TVE_FadeParams.w;
					#endif
					float lerpResult843_g129055 = lerp( 1.0 , ( staticSwitch663_g129055 * TVE_IsEnabled ) , _CutoutGlobalValue);
					half Local_GlobalMask429_g129055 = lerpResult843_g129055;
					half Local_AlphaMask814_g129055 = 1.0;
					half Local_NoiseMask678_g129055 = 1.0;
					half Local_VertMask766_g129055 = 1.0;
					half Local_MultiMask685_g129055 = 1.0;
					float lerpResult728_g129055 = lerp( Visual_AlphaClip667_g129055 , min( Visual_AlphaClip667_g129055 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g129055 ) - ( Local_AlphaMask814_g129055 * Local_NoiseMask678_g129055 * Local_VertMask766_g129055 ) ) ) ) , Local_MultiMask685_g129055);
					half Local_AlphaClip784_g129055 = lerpResult728_g129055;
					#ifdef TVE_CUTOUT
					float staticSwitch577_g129055 = Local_AlphaClip784_g129055;
					#else
					float staticSwitch577_g129055 = Visual_AlphaClip667_g129055;
					#endif
					half Final_AlphaClip795_g129055 = staticSwitch577_g129055;
					float In_AlphaClip3_g129056 = Final_AlphaClip795_g129055;
					float In_AlphaFade3_g129056 = Out_AlphaFade4_g129058;
					float3 In_Translucency3_g129056 = Out_Translucency4_g129058;
					float In_Transmission3_g129056 = Out_Transmission4_g129058;
					float In_Thickness3_g129056 = Out_Thickness4_g129058;
					float In_Diffusion3_g129056 = Out_Diffusion4_g129058;
					float In_Depth3_g129056 = Out_Depth4_g129058;
					{
					Data3_g129056.Dummy = In_Dummy3_g129056;
					Data3_g129056.Albedo = In_Albedo3_g129056;
					Data3_g129056.AlbedoRaw = In_AlbedoRaw3_g129056;
					Data3_g129056.NormalTS = In_NormalTS3_g129056;
					Data3_g129056.NormalWS = In_NormalWS3_g129056;
					Data3_g129056.Shader = In_Shader3_g129056;
					Data3_g129056.Emissive= In_Emissive3_g129056;
					Data3_g129056.MultiMask = In_MultiMask3_g129056;
					Data3_g129056.Grayscale = In_Grayscale3_g129056;
					Data3_g129056.Luminosity = In_Luminosity3_g129056;
					Data3_g129056.AlphaClip = In_AlphaClip3_g129056;
					Data3_g129056.AlphaFade = In_AlphaFade3_g129056;
					Data3_g129056.Translucency = In_Translucency3_g129056;
					Data3_g129056.Transmission = In_Transmission3_g129056;
					Data3_g129056.Thickness = In_Thickness3_g129056;
					Data3_g129056.Diffusion = In_Diffusion3_g129056;
					Data3_g129056.Depth = In_Depth3_g129056;
					}
					TVEVisualData Data4_g129098 = Data3_g129056;
					float Out_Dummy4_g129098 = 0;
					float3 Out_Albedo4_g129098 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129098 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129098 = float2( 0,0 );
					float3 Out_NormalWS4_g129098 = float3( 0,0,0 );
					float4 Out_Shader4_g129098 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129098 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129098 = 0;
					float Out_Grayscale4_g129098 = 0;
					float Out_Luminosity4_g129098 = 0;
					float Out_AlphaClip4_g129098 = 0;
					float Out_AlphaFade4_g129098 = 0;
					float3 Out_Translucency4_g129098 = float3( 0,0,0 );
					float Out_Transmission4_g129098 = 0;
					float Out_Thickness4_g129098 = 0;
					float Out_Diffusion4_g129098 = 0;
					float Out_Depth4_g129098 = 0;
					{
					Out_Dummy4_g129098 = Data4_g129098.Dummy;
					Out_Albedo4_g129098 = Data4_g129098.Albedo;
					Out_AlbedoRaw4_g129098 = Data4_g129098.AlbedoRaw;
					Out_NormalTS4_g129098 = Data4_g129098.NormalTS;
					Out_NormalWS4_g129098 = Data4_g129098.NormalWS;
					Out_Shader4_g129098 = Data4_g129098.Shader;
					Out_Emissive4_g129098= Data4_g129098.Emissive;
					Out_MultiMask4_g129098 = Data4_g129098.MultiMask;
					Out_Grayscale4_g129098 = Data4_g129098.Grayscale;
					Out_Luminosity4_g129098= Data4_g129098.Luminosity;
					Out_AlphaClip4_g129098 = Data4_g129098.AlphaClip;
					Out_AlphaFade4_g129098 = Data4_g129098.AlphaFade;
					Out_Translucency4_g129098 = Data4_g129098.Translucency;
					Out_Transmission4_g129098 = Data4_g129098.Transmission;
					Out_Thickness4_g129098 = Data4_g129098.Thickness;
					Out_Diffusion4_g129098 = Data4_g129098.Diffusion;
					Out_Depth4_g129098= Data4_g129098.Depth;
					}
					half3 Input_Albedo24_g129097 = Out_Albedo4_g129098;
					#ifdef UNITY_COLORSPACE_GAMMA
					float4 staticSwitch22_g129097 = half4( 0.2209163, 0.2209163, 0.2209163, 0.7790837 );
					#else
					float4 staticSwitch22_g129097 = half4( 0.04, 0.04, 0.04, 0.96 );
					#endif
					half4 ColorSpaceDielectricSpec23_g129097 = staticSwitch22_g129097;
					float4 break24_g129094 = Out_Shader4_g129098;
					half Metallic95_g129094 = break24_g129094.x;
					half Input_Metallic25_g129097 = Metallic95_g129094;
					half OneMinusReflectivity31_g129097 = ( (ColorSpaceDielectricSpec23_g129097).w - ( (ColorSpaceDielectricSpec23_g129097).w * Input_Metallic25_g129097 ) );
					
					float3 appendResult23_g129094 = (float3(Out_NormalTS4_g129098 , 1.0));
					
					half Smoothness101_g129094 = break24_g129094.w;
					half Input_Smoothness43_g129102 = Smoothness101_g129094;
					half Input_True57_g129104 = Input_Smoothness43_g129102;
					half True33_g129104 = Input_True57_g129104;
					half Render_Specualr110_g129094 = _RenderSpecular;
					half Input_RenderSpec58_g129102 = Render_Specualr110_g129094;
					float temp_output_46_0_g129102 = max( ( Input_Smoothness43_g129102 * Input_RenderSpec58_g129102 ) , 0.001 );
					float temp_output_6_0_g129103 = temp_output_46_0_g129102;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129103 = ( temp_output_6_0_g129103 + _SpecColor.r );
					#else
					float staticSwitch14_g129103 = temp_output_6_0_g129103;
					#endif
					float temp_output_61_0_g129102 = staticSwitch14_g129103;
					half Input_False58_g129104 = temp_output_61_0_g129102;
					half False33_g129104 = Input_False58_g129104;
					half localShadowPassCheck33_g129104 = ShadowPassCheck33_g129104( True33_g129104 , False33_g129104 );
					
					half Input_True57_g129105 = 0.04;
					half True33_g129105 = Input_True57_g129105;
					half Input_False58_g129105 = temp_output_46_0_g129102;
					half False33_g129105 = Input_False58_g129105;
					half localShadowPassCheck33_g129105 = ShadowPassCheck33_g129105( True33_g129105 , False33_g129105 );
					
					float localCustomAlphaClip20_g129100 = ( 0.0 );
					float temp_output_3_0_g129100 = Out_AlphaClip4_g129098;
					float Alpha20_g129100 = temp_output_3_0_g129100;
					float temp_output_15_0_g129100 = 0.5;
					float Treshold20_g129100 = temp_output_15_0_g129100;
					{
					#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_GLANCING) || defined (TVE_DITHER)
					clip(Alpha20_g129100 - Treshold20_g129100);
					#endif
					}
					

					o.Albedo = ( Input_Albedo24_g129097 * OneMinusReflectivity31_g129097 );
					o.Normal = appendResult23_g129094;
					#if defined(ASE_LIGHTING_SIMPLE)
						o.Specular = localShadowPassCheck33_g129104;
						o.Gloss = localShadowPassCheck33_g129105;
					#else
						#if defined(_SPECULAR_SETUP)
							o.Specular = fixed3( 1, 1, 1 );
						#else
							o.Metallic = 0;
						#endif
						o.Occlusion = 1;
						o.Smoothness = 0;
					#endif
					o.Emission = (Out_Emissive4_g129098).xyz;
					o.Alpha = Alpha20_g129100;
					float3 BakedGI = 0;
					float3 Transmission = 1;
					float3 Translucency = 1;

					#if defined( ASE_DEPTH_WRITE_ON )
						float DeviceDepth = IN.pos.z;
					#endif

					#ifdef _ALPHATEST_ON
						clip( o.Alpha - AlphaClipThreshold );
					#endif

					#if ( ASE_FRAGMENT_NORMAL == 0 )
						o.Normal = normalize(o.Normal.x * IN.worldTangent.xyz + o.Normal.y * IN.worldBitangent.xyz + o.Normal.z * IN.worldNormal.xyz);
					#elif ( ASE_FRAGMENT_NORMAL == 1 )
						o.Normal = UnityObjectToWorldNormal( o.Normal );
					#elif ( ASE_FRAGMENT_NORMAL == 2 )
						// @diogo: already in world-space; do nothing
					#endif

					#if defined( ASE_DEPTH_WRITE_ON )
						outputDepth = DeviceDepth;
					#endif

					#ifndef USING_DIRECTIONAL_LIGHT
						half3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
					#else
						half3 lightDir = _WorldSpaceLightPos0.xyz;
					#endif

					UnityGI gi;
					UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
					gi.indirect.diffuse = 0;
					gi.indirect.specular = 0;
					gi.light.color = _LightColor0.rgb;
					gi.light.dir = lightDir;

					UnityGIInput giInput;
					UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);
					giInput.light = gi.light;
					giInput.worldPos = worldPos;
					giInput.worldViewDir = worldViewDir;
					giInput.atten = atten;
					#if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)
						giInput.lightmapUV = IN.ambientOrLightmapUV;
					#else
						giInput.lightmapUV = 0.0;
					#endif
					#if UNITY_SHOULD_SAMPLE_SH && !UNITY_SAMPLE_FULL_SH_PER_PIXEL
						giInput.ambient = IN.ambientOrLightmapUV.rgb;
					#else
						giInput.ambient.rgb = 0.0;
					#endif
					giInput.probeHDR[0] = unity_SpecCube0_HDR;
					giInput.probeHDR[1] = unity_SpecCube1_HDR;
					#if defined(UNITY_SPECCUBE_BLENDING) || defined(UNITY_SPECCUBE_BOX_PROJECTION)
						giInput.boxMin[0] = unity_SpecCube0_BoxMin;
					#endif
					#ifdef UNITY_SPECCUBE_BOX_PROJECTION
						giInput.boxMax[0] = unity_SpecCube0_BoxMax;
						giInput.probePosition[0] = unity_SpecCube0_ProbePosition;
						giInput.boxMax[1] = unity_SpecCube1_BoxMax;
						giInput.boxMin[1] = unity_SpecCube1_BoxMin;
						giInput.probePosition[1] = unity_SpecCube1_ProbePosition;
					#endif

					#if defined(ASE_LIGHTING_SIMPLE)
						#if defined(_SPECULAR_SETUP)
							LightingBlinnPhong_GI(o, giInput, gi);
						#else
							LightingLambert_GI(o, giInput, gi);
						#endif
					#else
						#if defined(_SPECULAR_SETUP)
							LightingStandardSpecular_GI(o, giInput, gi);
						#else
							LightingStandard_GI(o, giInput, gi);
						#endif
					#endif

					#ifdef ASE_BAKEDGI
						gi.indirect.diffuse = BakedGI;
					#endif

					#if UNITY_SHOULD_SAMPLE_SH && !defined(LIGHTMAP_ON) && defined(ASE_NO_AMBIENT)
						gi.indirect.diffuse = 0;
					#endif

					half4 c = 0;
					#if defined(ASE_LIGHTING_SIMPLE)
						#if defined(_SPECULAR_SETUP)
							c += LightingBlinnPhong (o, worldViewDir, gi);
						#else
							c += LightingLambert( o, gi );
						#endif
					#else
						#if defined(_SPECULAR_SETUP)
							c += LightingStandardSpecular (o, worldViewDir, gi);
						#else
							c += LightingStandard(o, worldViewDir, gi);
						#endif
					#endif

					#ifdef ASE_TRANSMISSION
					{
						float shadow = _TransmissionShadow;
						#ifdef DIRECTIONAL
							float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
						#else
							float3 lightAtten = gi.light.color;
						#endif
						half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
						c.rgb += o.Albedo * transmission;
					}
					#endif

					#ifdef ASE_TRANSLUCENCY
					{
						float shadow = _TransShadow;
						float normal = _TransNormal;
						float scattering = _TransScattering;
						float direct = _TransDirect;
						float ambient = _TransAmbient;
						float strength = _TransStrength;

						#ifdef DIRECTIONAL
							float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
						#else
							float3 lightAtten = gi.light.color;
						#endif
						half3 lightDir = gi.light.dir + o.Normal * normal;
						half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
						half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
						c.rgb += o.Albedo * translucency * strength;
					}
					#endif

					c.rgb += o.Emission;

					#ifdef ASE_FOG
						UNITY_APPLY_FOG(IN.fogCoord, c);
					#endif
					return c;
				}
			ENDCG
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "ForwardAdd"
			Tags { "LightMode"="ForwardAdd" }
			ZWrite Off
			Blend One One

			CGPROGRAM
				#define ASE_FRAGMENT_NORMAL 0
				#define ASE_NEEDS_FRAG_SHADOWCOORDS
				#pragma shader_feature_local_fragment _SPECULARHIGHLIGHTS_OFF
				#pragma multi_compile __ LOD_FADE_CROSSFADE
				#pragma multi_compile_fog
				#define ASE_ABSOLUTE_VERTEX_POS 1
				#define ASE_TERRAIN 1
				#define _SPECULAR_SETUP 1
				#define ASE_LIGHTING_SIMPLE 1
				#define _ENVIRONMENTREFLECTIONS_OFF 1
				#define ASE_VERSION 19802
				#define ASE_USING_SAMPLING_MACROS 1

				#pragma vertex vert
				#pragma fragment frag
				#pragma skip_variants INSTANCING_ON
				#pragma multi_compile_fwdadd_fullshadows
				#ifndef UNITY_PASS_FORWARDADD
					#define UNITY_PASS_FORWARDADD
				#endif
				#include "HLSLSupport.cginc"
				#ifdef ASE_GEOMETRY
					#ifndef UNITY_INSTANCED_LOD_FADE
						#define UNITY_INSTANCED_LOD_FADE
					#endif
					#ifndef UNITY_INSTANCED_SH
						#define UNITY_INSTANCED_SH
					#endif
					#ifndef UNITY_INSTANCED_LIGHTMAPSTS
						#define UNITY_INSTANCED_LIGHTMAPSTS
					#endif
				#endif
				#include "UnityShaderVariables.cginc"
				#include "UnityCG.cginc"
				#include "Lighting.cginc"
				#include "UnityPBSLighting.cginc"
				#include "AutoLight.cginc"

				#define ASE_NEEDS_VERT_POSITION
				#define ASE_NEEDS_VERT_NORMAL
				#define ASE_NEEDS_VERT_TANGENT
				#define ASE_NEEDS_WORLD_POSITION
				#define ASE_NEEDS_FRAG_WORLD_POSITION
				#define ASE_NEEDS_WORLD_NORMAL
				#define ASE_NEEDS_FRAG_WORLD_NORMAL
				#define ASE_NEEDS_WORLD_TANGENT
				#define ASE_NEEDS_FRAG_WORLD_TANGENT
				#define ASE_NEEDS_WORLD_BITANGENT
				#define ASE_NEEDS_FRAG_WORLD_BITANGENT
				#define ASE_NEEDS_TEXTURE_COORDINATES0
				#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
				#pragma shader_feature_local_vertex TVE_CONFORM
				#pragma shader_feature_local_fragment TVE_WETNESS
				#pragma shader_feature_local_fragment TVE_OVERLAY
				#pragma shader_feature_local_fragment TVE_DRYNESS
				#pragma shader_feature_local_fragment TVE_TINTING
				#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
				#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
				#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
				#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
				#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
				#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
				#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_WATER
				#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
				#pragma shader_feature_local_fragment TVE_EMISSIVE
				#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
				#pragma shader_feature_local_fragment TVE_CUTOUT
				#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
				#pragma multi_compile_instancing
				#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
				  
				struct TVEVisualData
				{  
					half Dummy;  
					half3 Albedo;
					half3 AlbedoRaw;
					half2 NormalTS;
					half3 NormalWS; 
					half4 Shader;
					half4 Emissive;
					half AlphaClip;
					half AlphaFade;
					half MultiMask;
					half Grayscale;
					half Luminosity;
					half3 Translucency;
					half Transmission;
					half Thickness;
					float Diffusion;
					float Depth;
				};  
				    
				struct TVEModelData
				{    
					half Dummy;    
					half3 PositionOS;
					half3 PositionWS;
					half3 PositionWO;
					half3 PositionRawOS;
					half3 PositionAddOS;
					half3 PivotOS;
					half3 PivotWS;
					half3 PivotWO;
					half3 NormalOS;
					half3 NormalWS;
					half3 NormalRawOS;
					half3 NormalRawWS;
					half4 TangentOS;
					half3 ViewDirWS;
					half4 VertexData;
					half4 PhaseData;
					half4 BoundsData;
					half4 RotationData;
				};    
				      
				struct TVEGlobalData
				{      
					half Dummy;      
					half4 CoatDataRT;
					half4 PaintDataRT;
					half4 GlowDataRT;
					half4 AtmoDataRT;
					half4 FadeDataRT;
					half4 FormDataRT;
					half4 FlowDataRT;
				};      
				        
				struct TVEMasksData
				{        
					half4 Mask0;
					half4 Mask1;
					half4 Mask2;
					half4 Mask3;
				};        
				#define TVE_TERRAIN_SHADER
				//#pragma editor_sync_compilation
				#ifndef ASE_NEEDS_TEXTURE_COORDINATES2 //Needed for ASE 1.9.8.1
					#define ASE_NEEDS_TEXTURE_COORDINATES2
				#endif
				#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#else//ASE Sampling Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
				#endif//ASE Sampling Macros
				


				struct appdata
				{
					float4 vertex : POSITION;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;
					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct v2f
				{
					UNITY_POSITION( pos );
					UNITY_LIGHTING_COORDS( 0, 1 )
					UNITY_FOG_COORDS( 2 )
					float4 worldNormal : TEXCOORD3;
					float4 worldTangent : TEXCOORD4;
					float4 worldBitangent : TEXCOORD5;
					#if defined( ASE_NEEDS_FRAG_SCREEN_POSITION )
						float4 screenPos : TEXCOORD6;
					#endif
					float4 ase_texcoord7 : TEXCOORD7;
					float4 ase_color : COLOR;
					float4 ase_texcoord8 : TEXCOORD8;
					UNITY_VERTEX_INPUT_INSTANCE_ID
					UNITY_VERTEX_OUTPUT_STEREO
				};

				#ifdef ASE_TRANSMISSION
					float _TransmissionShadow;
				#endif
				#ifdef ASE_TRANSLUCENCY
					float _TransStrength;
					float _TransNormal;
					float _TransScattering;
					float _TransDirect;
					float _TransAmbient;
					float _TransShadow;
				#endif
				#ifdef ASE_TESSELLATION
					float _TessPhongStrength;
					float _TessValue;
					float _TessMin;
					float _TessMax;
					float _TessEdgeLength;
					float _TessMaxDisp;
				#endif

				uniform half _TerrainLayersMode;
				uniform half _TerrainSampleMode1;
				uniform half _TerrainSampleMode2;
				uniform half _TerrainSampleMode3;
				uniform half _TerrainSampleMode4;
				uniform half _TerrainSampleMode5;
				uniform half _TerrainSampleMode6;
				uniform half _TerrainSampleMode7;
				uniform half _TerrainSampleMode8;
				uniform half _TerrainSampleMode9;
				uniform half _TerrainSampleMode10;
				uniform half _TerrainSampleMode11;
				uniform half _TerrainSampleMode12;
				uniform half _TerrainSampleMode13;
				uniform half _TerrainSampleMode14;
				uniform half _TerrainSampleMode15;
				uniform half _TerrainSampleMode16;
				uniform half _TerrainTextureMode;
				uniform half _IsTerrainShader;
				uniform half _IsSimpleShader;
				uniform half _RenderCategory;
				uniform half _RenderEnd;
				uniform half _IsTVEShader;
				uniform half _IsCustomShader;
				uniform half _IsShared;
				uniform half _IsCollected;
				uniform half _IsConverted;
				uniform half _IsIdentifier;
				uniform half _RenderDecals;
				uniform half _RenderSSR;
				uniform half _RenderClip;
				uniform half _IsVersion;
				uniform half _RenderShadow;
				uniform half _RenderFilter;
				UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
				SamplerState sampler_NoiseTex3D;
				uniform half _ConformCategory;
				uniform half _ConformEnd;
				uniform half _ConformInfo;
				uniform float3 TVE_WorldOrigin;
				uniform half4 TVE_TimeParams;
				uniform half4 _object_phase_mode;
				uniform half _GlobalCategory;
				uniform half _GlobalEnd;
				uniform half4 TVE_CoatParams;
				uniform half _GlobalPaintLayerValue;
				uniform float TVE_PaintLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
				uniform half4 TVE_RenderBaseCoords;
				SamplerState sampler_Linear_Clamp;
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
				uniform half4 TVE_RenderNearCoords;
				SamplerState sampler_Linear_Repeat;
				uniform float4 TVE_RenderNearPositionR;
				uniform half TVE_RenderNearFadeValue;
				uniform half4 TVE_PaintParams;
				uniform half _GlobalGlowLayerValue;
				uniform float TVE_GlowLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
				uniform half4 TVE_GlowParams;
				uniform half _GlobalAtmoLayerValue;
				uniform float TVE_AtmoLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
				uniform half4 TVE_AtmoParams;
				uniform half _GlobalFadeLayerValue;
				uniform float TVE_FadeLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
				uniform half4 TVE_FadeParams;
				uniform half _GlobalFormLayerValue;
				uniform float TVE_FormLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
				uniform half4 TVE_FormParams;
				uniform half4 TVE_FlowParams;
				uniform half _ConformHeightMode;
				uniform half _ConformHeightValue;
				uniform half TVE_IsEnabled;
				uniform half _CutoutCategory;
				uniform half _CutoutEnd;
				uniform half _CutoutSpace;
				uniform half _CutoutBakeInfo;
				uniform half _EmissiveCategory;
				uniform half _EmissiveEnd;
				uniform half _EmissivePowerMode;
				uniform half _EmissivePowerValue;
				uniform half _EmissiveFlagMode;
				uniform half _WetnessCategory;
				uniform half _WetnessEnd;
				uniform half _WetnessBakeInfo;
				uniform half _OverlayCategory;
				uniform half _OverlayEnd;
				uniform half _OverlaySpace;
				uniform half _OverlayBakeInfo;
				uniform half _DrynessCategory;
				uniform half _DrynessEnd;
				uniform half _DrynessSpace;
				uniform half _DrynessBakeInfo;
				uniform half _TintingCategory;
				uniform half _TintingEnd;
				uniform half _TintingSpace;
				uniform half _TintingBakeInfo;
				uniform half _CategoryTerrain;
				uniform half _EndTerrain;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
				uniform half4 _TerrainPosition;
				uniform half4 _TerrainSize;
				float4 _TerrainControlTex1_TexelSize;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
				SamplerState sampler_Point_Repeat;
				SamplerState sampler_Linear_Repeat_Aniso8;
				uniform half4 _TerrainCoord1;
				uniform half4 _TerrainShaderMin1;
				uniform half4 _TerrainShaderRcp1;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
				uniform half4 _TerrainCoord2;
				uniform half4 _TerrainShaderMin2;
				uniform half4 _TerrainShaderRcp2;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
				uniform half4 _TerrainCoord3;
				uniform half4 _TerrainShaderMin3;
				uniform half4 _TerrainShaderRcp3;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
				uniform half4 _TerrainCoord4;
				uniform half4 _TerrainShaderMin4;
				uniform half4 _TerrainShaderRcp4;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
				uniform half4 _TerrainCoord5;
				uniform half4 _TerrainShaderMin5;
				uniform half4 _TerrainShaderRcp5;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
				uniform half4 _TerrainCoord6;
				uniform half4 _TerrainShaderMin6;
				uniform half4 _TerrainShaderRcp6;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
				uniform half4 _TerrainCoord7;
				uniform half4 _TerrainShaderMin7;
				uniform half4 _TerrainShaderRcp7;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
				uniform half4 _TerrainCoord8;
				uniform half4 _TerrainShaderMin8;
				uniform half4 _TerrainShaderRcp8;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
				uniform half4 _TerrainCoord9;
				uniform half4 _TerrainShaderMin9;
				uniform half4 _TerrainShaderRcp9;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
				uniform half4 _TerrainCoord10;
				uniform half4 _TerrainShaderMin10;
				uniform half4 _TerrainShaderRcp10;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
				uniform half4 _TerrainCoord11;
				uniform half4 _TerrainShaderMin11;
				uniform half4 _TerrainShaderRcp11;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
				uniform half4 _TerrainCoord12;
				uniform half4 _TerrainShaderMin12;
				uniform half4 _TerrainShaderRcp12;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
				uniform half4 _TerrainCoord13;
				uniform half4 _TerrainShaderMin13;
				uniform half4 _TerrainShaderRcp13;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
				uniform half4 _TerrainCoord14;
				uniform half4 _TerrainShaderMin14;
				uniform half4 _TerrainShaderRcp14;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
				uniform half4 _TerrainCoord15;
				uniform half4 _TerrainShaderMin15;
				uniform half4 _TerrainShaderRcp15;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
				uniform half4 _TerrainCoord16;
				uniform half4 _TerrainShaderMin16;
				uniform half4 _TerrainShaderRcp16;
				uniform half _TerrainHeightBlendValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
				uniform half4 _TerrainColor1;
				uniform half4 _TerrainColor2;
				uniform half4 _TerrainColor3;
				uniform half4 _TerrainColor4;
				uniform half4 _TerrainColor5;
				uniform half4 _TerrainColor6;
				uniform half4 _TerrainColor7;
				uniform half4 _TerrainColor8;
				uniform half4 _TerrainColor9;
				uniform half4 _TerrainColor10;
				uniform half4 _TerrainColor11;
				uniform half4 _TerrainColor12;
				uniform half4 _TerrainColor13;
				uniform half4 _TerrainColor14;
				uniform half4 _TerrainColor15;
				uniform half4 _TerrainColor16;
				uniform half4 _TerrainColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
				uniform half4 _TerrainParams1;
				uniform half4 _TerrainParams2;
				uniform half4 _TerrainParams3;
				uniform half4 _TerrainParams4;
				uniform half4 _TerrainParams5;
				uniform half4 _TerrainParams6;
				uniform half4 _TerrainParams7;
				uniform half4 _TerrainParams8;
				uniform half4 _TerrainParams9;
				uniform half4 _TerrainParams10;
				uniform half4 _TerrainParams11;
				uniform half4 _TerrainParams12;
				uniform half4 _TerrainParams13;
				uniform half4 _TerrainParams14;
				uniform half4 _TerrainParams15;
				uniform half4 _TerrainParams16;
				uniform half _TerrainNormalValue;
				uniform half _TerrainMetallicValue;
				uniform half _TerrainOcclusionValue;
				uniform half _TerrainSmoothnessValue;
				uniform half4 _TerrainSpecular1;
				uniform half4 _TerrainSpecular2;
				uniform half4 _TerrainSpecular3;
				uniform half4 _TerrainSpecular4;
				uniform half4 _TerrainSpecular5;
				uniform half4 _TerrainSpecular6;
				uniform half4 _TerrainSpecular7;
				uniform half4 _TerrainSpecular8;
				uniform half4 _TerrainSpecular9;
				uniform half4 _TerrainSpecular10;
				uniform half4 _TerrainSpecular11;
				uniform half4 _TerrainSpecular12;
				uniform half4 _TerrainSpecular13;
				uniform half4 _TerrainSpecular14;
				uniform half4 _TerrainSpecular15;
				uniform half4 _TerrainSpecular16;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
				uniform half _TintingElementMode;
				uniform half _TintingGlobalValue;
				uniform half _TintingGrayValue;
				uniform float4 _TintingColor;
				uniform half _TintingIntensityValue;
				uniform half _TintingMultiValue;
				uniform half4 _TintingLumaRemap;
				uniform half _TintingLumaValue;
				uniform half4 _TintingBlendRemap;
				uniform half _DrynessElementMode;
				uniform half _DrynessGlobalValue;
				uniform half _DrynessGrayValue;
				uniform float4 _DrynessColor;
				uniform half _DrynessIntensityValue;
				uniform half _DrynessMultiValue;
				uniform half4 _DrynessLumaRemap;
				uniform half _DrynessLumaValue;
				uniform half4 _DrynessBlendRemap;
				uniform half _DrynessSmoothnessValue;
				uniform half _DrynessSubsurfaceValue;
				uniform half4 _OverlayColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
				uniform half4 _overlay_coord_value;
				uniform half _OverlaySampleMode;
				uniform half _OverlayCoordMode;
				uniform half4 _OverlayCoordValue;
				uniform half _OverlayTextureMode;
				uniform half _OverlayGlitterIntensityValue;
				uniform half4 _OverlayGlitterColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
				uniform half _OverlayGlitterTillingValue;
				uniform half _OverlayGlitterDistValue;
				uniform half _OverlayIntensityValue;
				uniform half4 _OverlayProjRemap;
				uniform half _OverlayProjValue;
				uniform half4 _OverlayLumaRemap;
				uniform half _OverlayLumaValue;
				uniform half _OverlayElementMode;
				uniform half _OverlayGlobalValue;
				uniform half4 _OverlayBlendRemap;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
				uniform half _OverlayNormalValue;
				uniform half _OverlaySmoothnessValue;
				uniform half _OverlaySubsurfaceValue;
				uniform half4 _WetnessWaterColor;
				uniform half _WetnessWaterIntensityValue;
				uniform half _WetnessIntensityValue;
				uniform half _WetnessElementMode;
				uniform half _WetnessGlobalValue;
				uniform half _WetnessWaterBaseValue;
				uniform half4 _WetnessWaterBlendRemap;
				uniform half _WetnessContrastValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
				uniform half _WetnessDropsTillingValue;
				uniform half _WetnessDropsIntensityValue;
				uniform half _WetnessDropsNormalValue;
				uniform half _WetnessDropsDistValue;
				uniform half _WetnessSmoothnessValue;
				uniform half _EmissiveIntensityValue;
				uniform half4 _EmissiveColor;
				uniform half _EmissiveElementMode;
				uniform half _EmissiveGlobalValue;
				uniform half _EmissiveColorMode;
				uniform float _emissive_power_value;
				uniform half _CutoutIntensityValue;
				uniform half _CutoutElementMode;
				uniform half _CutoutGlobalValue;
				uniform half _RenderSpecular;
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
					sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
					UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
				CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
					#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
						float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
						float4 _TerrainHeightmapScale;//ASE Terrain Instancing
					#endif//ASE Terrain Instancing
				CBUFFER_END//ASE Terrain Instancing


				float4 mod289( float4 x )
				{
					return x - floor(x * 0.00346020761) * 289.0;
				}
				
				float4 perm( float4 x )
				{
					    return mod289((x * 34.0 + 1.0) * x);
				}
				
				float SimpleNoise3D( float3 p )
				{
					    // Compute integer and fractional parts.
					    float3 i = floor(p);
					    float3 f = p - i;
					    // Cubic interpolation (smoothstep)
					    f = f * f * (3.0 - 2.0 * f);
					    // Build 4-component vectors using swizzling.
					    // a = (i.x, i.x+1, i.y, i.y+1)
					    float4 a = float4(i.x, i.x, i.y, i.y) + float4(0.0, 1.0, 0.0, 1.0);
					    // Permutations along the x and y axes.
					    float4 k1 = perm(a.xyxy);
					    float4 k2 = perm(k1.xyxy + a.zzww);
					    // Incorporate the z component.
					    float4 c  = k2 + float4(i.z, i.z, i.z, i.z);
					    float4 k3 = perm(c);
					    float4 k4 = perm(c + 1.0);
					    // Map results to the [0,1] range.
					    float4 o1 = frac(k3 * 0.0243902439);
					    float4 o2 = frac(k4 * 0.0243902439);
					    // Interpolate along z, then x, then y.
					    float4 o3 = lerp(o1, o2, f.z);           // f.z blends between layers.
					    float2 o4 = lerp(o3.xz, o3.yw, f.x);       // f.x blends between pairs.
					    return lerp(o4.x, o4.y, f.y); 
				}
				
				void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
				{
					ZX = WorldPosition.xz * Coords.xx - Coords.zz;
					ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
					XY = WorldPosition.xy * Coords.xy - Coords.zw;
				}
				
				half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
					return tex;
				}
				
				void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
				{
					half3 powNormal = abs( WorldNormal.xyz );
					half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
					weights /= ( weights.x + weights.y + weights.z ).xxx;
					T1 = weights.y;
					T2 = weights.x;
					T3 = weights.z;
				}
				
				half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
					half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
					half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
					return tex1 * T1 + tex2 * T2 + tex3 * T3;
				}
				
				void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
				{
					half2 vertex1, vertex2, vertex3;
					// Scaling of the input
					half2 uv = UV * 3.464; // 2 * sqrt (3)
					// Skew input space into simplex triangle grid
					const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
					half2 skewedCoord = mul( gridToSkewedGrid, uv );
					// Compute local triangle vertex IDs and local barycentric coordinates
					int2 baseId = int2( floor( skewedCoord ) );
					half3 temp = half3( frac( skewedCoord ), 0 );
					temp.z = 1.0 - temp.x - temp.y;
					if ( temp.z > 0.0 )
					{
						W1 = temp.z;
						W2 = temp.y;
						W3 = temp.x;
						vertex1 = baseId;
						vertex2 = baseId + int2( 0, 1 );
						vertex3 = baseId + int2( 1, 0 );
					}
					else
					{
						W1 = -temp.z;
						W2 = 1.0 - temp.y;
						W3 = 1.0 - temp.x;
						vertex1 = baseId + int2( 1, 1 );
						vertex2 = baseId + int2( 1, 0 );
						vertex3 = baseId + int2( 0, 1 );
					}
					UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
					UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
					UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
					return;
				}
				
				float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
					half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
					half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
					half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
					return tex1 * W1 + tex2 * W2 + tex3 * W3;
				}
				
				half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					half4 tex1, tex2, tex3;
					ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
					half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
					half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
					half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					return texZX * T1 + texZY * T2 + texXY * T3;
				}
				
				half ShadowPassCheck33_g129104( half True, half False )
				{
					half result;
					#if defined(UNITY_PASS_DEFERRED)
						result = True;
					#else
						result = False;
					#endif
					return result;
				}
				
				half ShadowPassCheck33_g129105( half True, half False )
				{
					half result;
					#if defined(UNITY_PASS_DEFERRED)
						result = True;
					#else
						result = False;
					#endif
					return result;
				}
				
				appdata ApplyMeshModification( appdata v ){
				#ifdef UNITY_INSTANCING_ENABLED
					float2 patchVertex = v.vertex.xy;
					float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
					float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
					float4 uvoffset = instanceData.xyxy * uvscale;
					uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
					float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
					v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
					float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
					v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
					v.vertex.y = height * _TerrainHeightmapScale.y;
					v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
				#endif
				return v;
				}
				

				v2f VertexFunction (appdata v  ) {
					UNITY_SETUP_INSTANCE_ID(v);
					v2f o;
					UNITY_INITIALIZE_OUTPUT(v2f,o);
					UNITY_TRANSFER_INSTANCE_ID(v,o);
					UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

					v = ApplyMeshModification(v);
					TVEModelData Data16_g129074 = (TVEModelData)0;
					half Dummy181_g129072 = ( _ConformCategory + _ConformEnd + _ConformInfo );
					float In_Dummy16_g129074 = Dummy181_g129072;
					TVEModelData Data16_g114310 = (TVEModelData)0;
					half Dummy207_g114306 = 0.0;
					float In_Dummy16_g114310 = Dummy207_g114306;
					half3 PositionOS131_g114306 = v.vertex.xyz;
					float3 In_PositionOS16_g114310 = PositionOS131_g114306;
					float3 ase_positionWS = mul( unity_ObjectToWorld, float4( ( v.vertex ).xyz, 1 ) ).xyz;
					float3 vertexToFrag73_g114306 = ase_positionWS;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114310 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114310 = PositionWO132_g114306;
					float3 In_PositionRawOS16_g114310 = PositionOS131_g114306;
					float3 In_PositionAddOS16_g114310 = float3( 0,0,0 );
					float3 _Vector0 = float3(0,0,0);
					half3 PivotOS149_g114306 = _Vector0;
					float3 In_PivotOS16_g114310 = PivotOS149_g114306;
					float3 In_PivotWS16_g114310 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114310 = PivotWO133_g114306;
					half3 NormalOS134_g114306 = v.normal;
					float3 In_NormalOS16_g114310 = NormalOS134_g114306;
					float3 ase_normalWS = UnityObjectToWorldNormal( v.normal );
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114310 = Normal_WS95_g114306;
					float3 In_NormalRawOS16_g114310 = NormalOS134_g114306;
					float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0.0 ) ).xyz );
					half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
					float3 In_NormalRawWS16_g114310 = Normal_RawWS136_g114306;
					half4 TangentlOS153_g114306 = v.tangent;
					float4 In_TangentOS16_g114310 = TangentlOS153_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114310 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = v.ase_color;
					float4 In_VertexData16_g114310 = VertexMasks171_g114306;
					float mulTime113_g128352 = _Time.y * 0.52;
					float lerpResult128_g128352 = lerp( mulTime113_g128352 , ( ( mulTime113_g128352 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float3 break319_g114306 = PivotWO133_g114306;
					half Pivot_Position322_g114306 = ( break319_g114306.x + break319_g114306.z );
					float mulTime113_g128351 = _Time.y * 0.27;
					float lerpResult128_g128351 = lerp( mulTime113_g128351 , ( ( mulTime113_g128351 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float4 break33_g128354 = _object_phase_mode;
					float temp_output_30_0_g128354 = ( v.ase_color.r * break33_g128354.x );
					float temp_output_29_0_g128354 = ( v.ase_color.g * break33_g128354.y );
					float temp_output_31_0_g128354 = ( v.ase_color.b * break33_g128354.z );
					float temp_output_28_0_g128354 = ( temp_output_30_0_g128354 + temp_output_29_0_g128354 + temp_output_31_0_g128354 + ( v.ase_color.a * break33_g128354.w ) );
					float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g128354 + Pivot_Position322_g114306 ) )*2.0 + -1.0);
					float4 appendResult177_g114306 = (float4(sin( ( lerpResult128_g128352 + Pivot_Position322_g114306 ) ) , sin( ( lerpResult128_g128351 + Pivot_Position322_g114306 ) ) , temp_output_315_0_g114306 , 1.0));
					half4 MotionMasks176_g114306 = appendResult177_g114306;
					float4 In_PhaseData16_g114310 = MotionMasks176_g114306;
					half4 BoundsData254_g114306 = float4( 0,0,0,0 );
					float4 In_BoundsData16_g114310 = BoundsData254_g114306;
					float4 In_RotationData16_g114310 = float4( 0,0,0,0 );
					{
					Data16_g114310.Dummy = In_Dummy16_g114310;
					Data16_g114310.PositionOS = In_PositionOS16_g114310;
					Data16_g114310.PositionWS = In_PositionWS16_g114310;
					Data16_g114310.PositionWO = In_PositionWO16_g114310;
					Data16_g114310.PositionRawOS = In_PositionRawOS16_g114310;
					Data16_g114310.PositionAddOS = In_PositionAddOS16_g114310;
					Data16_g114310.PivotOS = In_PivotOS16_g114310;
					Data16_g114310.PivotWS = In_PivotWS16_g114310;
					Data16_g114310.PivotWO = In_PivotWO16_g114310;
					Data16_g114310.NormalOS = In_NormalOS16_g114310;
					Data16_g114310.NormalWS = In_NormalWS16_g114310;
					Data16_g114310.NormalRawOS = In_NormalRawOS16_g114310;
					Data16_g114310.NormalRawWS = In_NormalRawWS16_g114310;
					Data16_g114310.TangentOS = In_TangentOS16_g114310;
					Data16_g114310.ViewDirWS = In_ViewDirWS16_g114310;
					Data16_g114310.VertexData = In_VertexData16_g114310;
					Data16_g114310.PhaseData = In_PhaseData16_g114310;
					Data16_g114310.BoundsData = In_BoundsData16_g114310;
					Data16_g114310.RotationData = In_RotationData16_g114310;
					}
					TVEModelData Data15_g129073 = Data16_g114310;
					float Out_Dummy15_g129073 = 0;
					float3 Out_PositionOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129073 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129073 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129073 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129073 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129073 = float3( 0,0,0 );
					float4 Out_VertexData15_g129073 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129073 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129073 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129073 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129073 = Data15_g129073.Dummy;
					Out_PositionOS15_g129073 = Data15_g129073.PositionOS;
					Out_PositionWS15_g129073 = Data15_g129073.PositionWS;
					Out_PositionWO15_g129073 = Data15_g129073.PositionWO;
					Out_PositionRawOS15_g129073 = Data15_g129073.PositionRawOS;
					Out_PositionAddOS15_g129073 = Data15_g129073.PositionAddOS;
					Out_PivotOS15_g129073 = Data15_g129073.PivotOS;
					Out_PivotWS15_g129073 = Data15_g129073.PivotWS;
					Out_PivotWO15_g129073 = Data15_g129073.PivotWO;
					Out_NormalOS15_g129073 = Data15_g129073.NormalOS;
					Out_NormalWS15_g129073 = Data15_g129073.NormalWS;
					Out_NormalRawOS15_g129073 = Data15_g129073.NormalRawOS;
					Out_NormalRawWS15_g129073 = Data15_g129073.NormalRawWS;
					Out_TangentOS15_g129073 = Data15_g129073.TangentOS;
					Out_ViewDirWS15_g129073 = Data15_g129073.ViewDirWS;
					Out_VertexData15_g129073 = Data15_g129073.VertexData;
					Out_PhaseData15_g129073 = Data15_g129073.PhaseData;
					Out_BoundsData15_g129073 = Data15_g129073.BoundsData;
					Out_RotationData15_g129073 = Data15_g129073.RotationData;
					}
					half3 Input_PositionOS147_g129072 = Out_PositionOS15_g129073;
					float3 break592_g129072 = Input_PositionOS147_g129072;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g129077 = Data204_g128736;
					float Out_Dummy15_g129077 = 0;
					float4 Out_CoatDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129077 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129077 = Data15_g129077.Dummy;
					Out_CoatDataRT15_g129077 = Data15_g129077.CoatDataRT;
					Out_PaintDataRT15_g129077 = Data15_g129077.PaintDataRT;
					Out_GlowDataRT15_g129077= Data15_g129077.GlowDataRT;
					Out_AtmoDataRT15_g129077= Data15_g129077.AtmoDataRT;
					Out_FadeDataRT15_g129077= Data15_g129077.FadeDataRT;
					Out_FormDataRT15_g129077 = Data15_g129077.FormDataRT;
					Out_FlowDataRT15_g129077 = Data15_g129077.FlowDataRT;
					}
					half4 Input_FormParams214_g129072 = Out_FormDataRT15_g129077;
					float temp_output_642_0_g129072 = ( (Input_FormParams214_g129072).z + (TVE_WorldOrigin).y );
					float3 temp_output_481_19_g129072 = Out_PivotWO15_g129073;
					half3 Model_PivotWO602_g129072 = temp_output_481_19_g129072;
					float lerpResult594_g129072 = lerp( ( break592_g129072.y + temp_output_642_0_g129072 ) , ( temp_output_642_0_g129072 - (Model_PivotWO602_g129072).y ) , _ConformHeightMode);
					float lerpResult604_g129072 = lerp( break592_g129072.y , lerpResult594_g129072 , ( _ConformHeightValue * TVE_IsEnabled ));
					float3 appendResult593_g129072 = (float3(break592_g129072.x , lerpResult604_g129072 , break592_g129072.z));
					#ifdef TVE_CONFORM
					float3 staticSwitch575_g129072 = appendResult593_g129072;
					#else
					float3 staticSwitch575_g129072 = Input_PositionOS147_g129072;
					#endif
					half3 Final_PositionOS580_g129072 = staticSwitch575_g129072;
					float3 In_PositionOS16_g129074 = Final_PositionOS580_g129072;
					float3 In_PositionWS16_g129074 = Out_PositionWS15_g129073;
					float3 In_PositionWO16_g129074 = Out_PositionWO15_g129073;
					float3 In_PositionRawOS16_g129074 = Out_PositionRawOS15_g129073;
					float3 In_PositionAddOS16_g129074 = Out_PositionAddOS15_g129073;
					float3 In_PivotOS16_g129074 = Out_PivotOS15_g129073;
					float3 In_PivotWS16_g129074 = Out_PivotWS15_g129073;
					float3 In_PivotWO16_g129074 = temp_output_481_19_g129072;
					float3 temp_output_481_20_g129072 = Out_NormalOS15_g129073;
					float3 In_NormalOS16_g129074 = temp_output_481_20_g129072;
					float3 In_NormalWS16_g129074 = Out_NormalWS15_g129073;
					float3 In_NormalRawOS16_g129074 = Out_NormalRawOS15_g129073;
					float3 In_NormalRawWS16_g129074 = Out_NormalRawWS15_g129073;
					float4 In_TangentOS16_g129074 = Out_TangentOS15_g129073;
					float3 In_ViewDirWS16_g129074 = Out_ViewDirWS15_g129073;
					float4 In_VertexData16_g129074 = Out_VertexData15_g129073;
					float4 In_PhaseData16_g129074 = Out_PhaseData15_g129073;
					float4 In_BoundsData16_g129074 = Out_BoundsData15_g129073;
					float4 In_RotationData16_g129074 = Out_RotationData15_g129073;
					{
					Data16_g129074.Dummy = In_Dummy16_g129074;
					Data16_g129074.PositionOS = In_PositionOS16_g129074;
					Data16_g129074.PositionWS = In_PositionWS16_g129074;
					Data16_g129074.PositionWO = In_PositionWO16_g129074;
					Data16_g129074.PositionRawOS = In_PositionRawOS16_g129074;
					Data16_g129074.PositionAddOS = In_PositionAddOS16_g129074;
					Data16_g129074.PivotOS = In_PivotOS16_g129074;
					Data16_g129074.PivotWS = In_PivotWS16_g129074;
					Data16_g129074.PivotWO = In_PivotWO16_g129074;
					Data16_g129074.NormalOS = In_NormalOS16_g129074;
					Data16_g129074.NormalWS = In_NormalWS16_g129074;
					Data16_g129074.NormalRawOS = In_NormalRawOS16_g129074;
					Data16_g129074.NormalRawWS = In_NormalRawWS16_g129074;
					Data16_g129074.TangentOS = In_TangentOS16_g129074;
					Data16_g129074.ViewDirWS = In_ViewDirWS16_g129074;
					Data16_g129074.VertexData = In_VertexData16_g129074;
					Data16_g129074.PhaseData = In_PhaseData16_g129074;
					Data16_g129074.BoundsData = In_BoundsData16_g129074;
					Data16_g129074.RotationData = In_RotationData16_g129074;
					}
					TVEModelData Data15_g129096 = Data16_g129074;
					float Out_Dummy15_g129096 = 0;
					float3 Out_PositionOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129096 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129096 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129096 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129096 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129096 = float3( 0,0,0 );
					float4 Out_VertexData15_g129096 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129096 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129096 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129096 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129096 = Data15_g129096.Dummy;
					Out_PositionOS15_g129096 = Data15_g129096.PositionOS;
					Out_PositionWS15_g129096 = Data15_g129096.PositionWS;
					Out_PositionWO15_g129096 = Data15_g129096.PositionWO;
					Out_PositionRawOS15_g129096 = Data15_g129096.PositionRawOS;
					Out_PositionAddOS15_g129096 = Data15_g129096.PositionAddOS;
					Out_PivotOS15_g129096 = Data15_g129096.PivotOS;
					Out_PivotWS15_g129096 = Data15_g129096.PivotWS;
					Out_PivotWO15_g129096 = Data15_g129096.PivotWO;
					Out_NormalOS15_g129096 = Data15_g129096.NormalOS;
					Out_NormalWS15_g129096 = Data15_g129096.NormalWS;
					Out_NormalRawOS15_g129096 = Data15_g129096.NormalRawOS;
					Out_NormalRawWS15_g129096 = Data15_g129096.NormalRawWS;
					Out_TangentOS15_g129096 = Data15_g129096.TangentOS;
					Out_ViewDirWS15_g129096 = Data15_g129096.ViewDirWS;
					Out_VertexData15_g129096 = Data15_g129096.VertexData;
					Out_PhaseData15_g129096 = Data15_g129096.PhaseData;
					Out_BoundsData15_g129096 = Data15_g129096.BoundsData;
					Out_RotationData15_g129096 = Data15_g129096.RotationData;
					}
					float3 temp_output_31_0_g129094 = Out_PositionOS15_g129096;
					
					float3 temp_output_31_20_g129094 = Out_NormalOS15_g129096;
					
					float4 appendResult120_g129094 = (float4(cross( temp_output_31_20_g129094 , float3( 0, 0, 1 ) ) , -1.0));
					float4 temp_output_6_0_g129107 = appendResult120_g129094;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129107 = ( temp_output_6_0_g129107 + 0.0 );
					#else
					float4 staticSwitch14_g129107 = temp_output_6_0_g129107;
					#endif
					
					o.ase_texcoord7.xyz = vertexToFrag73_g114306;
					
					o.ase_color = v.ase_color;
					o.ase_texcoord8 = v.ase_texcoord;
					
					//setting value to unused interpolator channels and avoid initialization warnings
					o.ase_texcoord7.w = 0;

					#ifdef ASE_ABSOLUTE_VERTEX_POS
						float3 defaultVertexValue = v.vertex.xyz;
					#else
						float3 defaultVertexValue = float3(0, 0, 0);
					#endif
					float3 vertexValue = temp_output_31_0_g129094;
					#ifdef ASE_ABSOLUTE_VERTEX_POS
						v.vertex.xyz = vertexValue;
					#else
						v.vertex.xyz += vertexValue;
					#endif
					v.vertex.w = 1;
					v.normal = temp_output_31_20_g129094;
					v.tangent = staticSwitch14_g129107;

					float3 worldPos = mul( unity_ObjectToWorld, v.vertex ).xyz;
					half3 worldNormal = UnityObjectToWorldNormal( v.normal );
					half3 worldTangent = UnityObjectToWorldDir( v.tangent.xyz );
					half tangentSign = v.tangent.w * unity_WorldTransformParams.w;
					half3 worldBitangent = cross( worldNormal, worldTangent ) * tangentSign;

					o.pos = UnityObjectToClipPos( v.vertex );
					o.worldNormal = float4( worldNormal, worldPos.x );
					o.worldTangent = float4( worldTangent, worldPos.y );
					o.worldBitangent = float4( worldBitangent, worldPos.z );

					UNITY_TRANSFER_LIGHTING(o, v.texcoord1.xy);

					#ifdef ASE_FOG
						UNITY_TRANSFER_FOG(o,o.pos);
					#endif
					#if defined(ASE_NEEDS_FRAG_SCREEN_POSITION)
						o.screenPos = ComputeScreenPos(o.pos);
					#endif
					return o;
				}

				#if defined(ASE_TESSELLATION)
				struct VertexControl
				{
					float4 vertex : INTERNALTESSPOS;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;

					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct TessellationFactors
				{
					float edge[3] : SV_TessFactor;
					float inside : SV_InsideTessFactor;
				};

				VertexControl vert ( appdata v )
				{
					VertexControl o;
					UNITY_SETUP_INSTANCE_ID(v);
					UNITY_TRANSFER_INSTANCE_ID(v, o);
					o.vertex = v.vertex;
					o.tangent = v.tangent;
					o.normal = v.normal;
					o.texcoord1 = v.texcoord1;
					o.texcoord2 = v.texcoord2;
					o.ase_color = v.ase_color;
					o.ase_texcoord = v.ase_texcoord;
					return o;
				}

				TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
				{
					TessellationFactors o;
					float4 tf = 1;
					float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
					float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
					#if defined(ASE_FIXED_TESSELLATION)
					tf = FixedTess( tessValue );
					#elif defined(ASE_DISTANCE_TESSELLATION)
					tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
					#elif defined(ASE_LENGTH_TESSELLATION)
					tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
					#elif defined(ASE_LENGTH_CULL_TESSELLATION)
					tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
					#endif
					o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
					return o;
				}

				[domain("tri")]
				[partitioning("fractional_odd")]
				[outputtopology("triangle_cw")]
				[patchconstantfunc("TessellationFunction")]
				[outputcontrolpoints(3)]
				VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
				{
				   return patch[id];
				}

				[domain("tri")]
				v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
				{
					appdata o = (appdata) 0;
					o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
					o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
					o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
					o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
					o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
					o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
					o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
					#if defined(ASE_PHONG_TESSELLATION)
					float3 pp[3];
					for (int i = 0; i < 3; ++i)
						pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
					float phongStrength = _TessPhongStrength;
					o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
					#endif
					UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
					return VertexFunction(o);
				}
				#else
				v2f vert ( appdata v )
				{
					return VertexFunction( v );
				}
				#endif

				half4 frag ( v2f IN 
					#if defined( ASE_DEPTH_WRITE_ON )
					, out float outputDepth : SV_Depth
					#endif
					) : SV_Target
				{
					UNITY_SETUP_INSTANCE_ID(IN);

					#ifdef LOD_FADE_CROSSFADE
						UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
					#endif

					#if defined(ASE_LIGHTING_SIMPLE)
						SurfaceOutput o = (SurfaceOutput)0;
					#else
						#if defined(_SPECULAR_SETUP)
							SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
						#else
							SurfaceOutputStandard o = (SurfaceOutputStandard)0;
						#endif
					#endif

					float3 WorldNormal = IN.worldNormal;
					float3 WorldTangent = IN.worldTangent;
					float3 WorldBiTangent = IN.worldBitangent;
					float3 worldPos = float3(IN.worldNormal.w,IN.worldTangent.w,IN.worldBitangent.w);
					float3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));

					#if defined( ASE_NEEDS_FRAG_SCREEN_POSITION )
						float4 ScreenPos = IN.screenPos;
					#endif

					#if defined( ASE_NEEDS_FRAG_SHADOWCOORDS )
						UNITY_LIGHT_ATTENUATION( atten, IN, worldPos )
					#else
						half atten = 1;
					#endif

					float localBreakData4_g129098 = ( 0.0 );
					float localCompData3_g129056 = ( 0.0 );
					TVEVisualData Data3_g129056 = (TVEVisualData)0;
					half Dummy594_g129055 = ( _CutoutCategory + _CutoutEnd + _CutoutSpace + _CutoutBakeInfo );
					float In_Dummy3_g129056 = Dummy594_g129055;
					float localBreakData4_g129058 = ( 0.0 );
					float localCompData3_g129054 = ( 0.0 );
					TVEVisualData Data3_g129054 = (TVEVisualData)0;
					half Dummy145_g129039 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveFlagMode );
					float In_Dummy3_g129054 = Dummy145_g129039;
					float localBreakData4_g129043 = ( 0.0 );
					float localCompData3_g129012 = ( 0.0 );
					TVEVisualData Data3_g129012 = (TVEVisualData)0;
					half Dummy594_g129010 = ( _WetnessCategory + _WetnessEnd + _WetnessBakeInfo );
					float In_Dummy3_g129012 = Dummy594_g129010;
					float localBreakData4_g129011 = ( 0.0 );
					float localCompData3_g128976 = ( 0.0 );
					TVEVisualData Data3_g128976 = (TVEVisualData)0;
					half Dummy594_g128973 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayBakeInfo );
					float In_Dummy3_g128976 = Dummy594_g128973;
					float localBreakData4_g128974 = ( 0.0 );
					float localCompData3_g128952 = ( 0.0 );
					TVEVisualData Data3_g128952 = (TVEVisualData)0;
					half Dummy205_g128949 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessBakeInfo );
					float In_Dummy3_g128952 = Dummy205_g128949;
					float localBreakData4_g128951 = ( 0.0 );
					float localCompData3_g128944 = ( 0.0 );
					TVEVisualData Data3_g128944 = (TVEVisualData)0;
					half Dummy205_g128924 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
					float In_Dummy3_g128944 = Dummy205_g128924;
					float localBreakData4_g128928 = ( 0.0 );
					float localCompData3_g128923 = ( 0.0 );
					TVEVisualData Data3_g128923 = (TVEVisualData)0;
					half Dummy9163_g128810 = ( _CategoryTerrain + _EndTerrain );
					float In_Dummy3_g128923 = Dummy9163_g128810;
					float localHeightBasedBlending7362_g128811 = ( 0.0 );
					float4 appendResult9125_g128811 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
					float4 temp_output_35_0_g128903 = appendResult9125_g128811;
					float2 InputScale48_g128903 = (temp_output_35_0_g128903).zw;
					half2 FinalScale53_g128903 = ( 1.0 / InputScale48_g128903 );
					float2 InputPosition52_g128903 = (temp_output_35_0_g128903).xy;
					half2 FinalPosition58_g128903 = -( FinalScale53_g128903 * InputPosition52_g128903 );
					float2 temp_output_65_0_g128903 = ( ( (worldPos).xz * FinalScale53_g128903 ) + FinalPosition58_g128903 );
					float4 temp_output_70_0_g128903 = _TerrainControlTex1_TexelSize;
					float2 InputTexelSize68_g128903 = (temp_output_70_0_g128903).zw;
					float2 temp_cast_0 = (1.0).xx;
					float2 InputTexelRecip69_g128903 = (temp_output_70_0_g128903).xy;
					float2 Terrain_Control_UV7873_g128811 = ( ( ( temp_output_65_0_g128903 / ( 1.0 / ( InputTexelSize68_g128903 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g128903 );
					half4 Terrain_Control_047365_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_047362_g128811 = Terrain_Control_047365_g128811;
					half4 Terrain_Control_087366_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_087362_g128811 = Terrain_Control_087366_g128811;
					half4 Terrain_Control_127712_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_127362_g128811 = Terrain_Control_127712_g128811;
					half4 Terrain_Control_167711_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_167362_g128811 = Terrain_Control_167711_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128840) = _TerrainShaderTex1;
					float localFilterTexture30_g128901 = ( 0.0 );
					SamplerState SS30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerDefault30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerPoint30_g128901 = sampler_Point_Repeat;
					SamplerState SamplerLow30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerMedium30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerHigh30_g128901 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS30_g128901 = SamplerDefault30_g128901;
					#if defined (TVE_FILTER_DEFAULT)
					    SS30_g128901 = SamplerDefault30_g128901;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS30_g128901 = SamplerPoint30_g128901;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS30_g128901 = SamplerLow30_g128901;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS30_g128901 = SamplerMedium30_g128901;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS30_g128901 = SamplerHigh30_g128901;
					#endif
					}
					SamplerState Sampler238_g128840 = SS30_g128901;
					half4 Input_Terrain_Coords_016785_g128811 = _TerrainCoord1;
					float4 temp_output_37_0_g128840 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128840 = temp_output_37_0_g128840;
					half3 Input_Position9197_g128811 = worldPos;
					float3 temp_output_279_0_g128840 = Input_Position9197_g128811;
					half3 WorldPosition238_g128840 = temp_output_279_0_g128840;
					half4 localSamplePlanar2D238_g128840 = SamplePlanar2D( Texture238_g128840 , Sampler238_g128840 , Coords238_g128840 , WorldPosition238_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128840) = _TerrainShaderTex1;
					SamplerState Sampler246_g128840 = SS30_g128901;
					half4 Coords246_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition246_g128840 = temp_output_279_0_g128840;
					half3 Input_Normal9199_g128811 = WorldNormal;
					float3 temp_output_280_0_g128840 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128840 = temp_output_280_0_g128840;
					half4 localSamplePlanar3D246_g128840 = SamplePlanar3D( Texture246_g128840 , Sampler246_g128840 , Coords246_g128840 , WorldPosition246_g128840 , WorldNormal246_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128840) = _TerrainShaderTex1;
					SamplerState Sampler234_g128840 = SS30_g128901;
					float4 Coords234_g128840 = temp_output_37_0_g128840;
					float3 WorldPosition234_g128840 = temp_output_279_0_g128840;
					float4 localSampleStochastic2D234_g128840 = SampleStochastic2D( Texture234_g128840 , Sampler234_g128840 , Coords234_g128840 , WorldPosition234_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128840) = _TerrainShaderTex1;
					SamplerState Sampler263_g128840 = SS30_g128901;
					half4 Coords263_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition263_g128840 = temp_output_279_0_g128840;
					half3 WorldNormal263_g128840 = temp_output_280_0_g128840;
					half4 localSampleStochastic3D263_g128840 = SampleStochastic3D( Texture263_g128840 , Sampler263_g128840 , Coords263_g128840 , WorldPosition263_g128840 , WorldNormal263_g128840 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8639_g128811 = localSamplePlanar3D246_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8639_g128811 = localSampleStochastic2D234_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8639_g128811 = localSampleStochastic3D263_g128840;
					#else
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#endif
					float4 temp_output_7_0_g128905 = _TerrainShaderMin1;
					float4 temp_output_9_0_g128905 = ( staticSwitch8639_g128811 - temp_output_7_0_g128905 );
					float4 temp_output_6970_0_g128811 = saturate( ( ( temp_output_9_0_g128905 * _TerrainShaderRcp1 ) + 0.0001 ) );
					half4 Masks_015_g128816 = temp_output_6970_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128844) = _TerrainShaderTex2;
					SamplerState Sampler238_g128844 = SS30_g128901;
					half4 Input_Terrain_Coords_026787_g128811 = _TerrainCoord2;
					float4 temp_output_37_0_g128844 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128844 = temp_output_37_0_g128844;
					float3 temp_output_279_0_g128844 = Input_Position9197_g128811;
					half3 WorldPosition238_g128844 = temp_output_279_0_g128844;
					half4 localSamplePlanar2D238_g128844 = SamplePlanar2D( Texture238_g128844 , Sampler238_g128844 , Coords238_g128844 , WorldPosition238_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128844) = _TerrainShaderTex2;
					SamplerState Sampler246_g128844 = SS30_g128901;
					half4 Coords246_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition246_g128844 = temp_output_279_0_g128844;
					float3 temp_output_280_0_g128844 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128844 = temp_output_280_0_g128844;
					half4 localSamplePlanar3D246_g128844 = SamplePlanar3D( Texture246_g128844 , Sampler246_g128844 , Coords246_g128844 , WorldPosition246_g128844 , WorldNormal246_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128844) = _TerrainShaderTex2;
					SamplerState Sampler234_g128844 = SS30_g128901;
					float4 Coords234_g128844 = temp_output_37_0_g128844;
					float3 WorldPosition234_g128844 = temp_output_279_0_g128844;
					float4 localSampleStochastic2D234_g128844 = SampleStochastic2D( Texture234_g128844 , Sampler234_g128844 , Coords234_g128844 , WorldPosition234_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128844) = _TerrainShaderTex2;
					SamplerState Sampler263_g128844 = SS30_g128901;
					half4 Coords263_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition263_g128844 = temp_output_279_0_g128844;
					half3 WorldNormal263_g128844 = temp_output_280_0_g128844;
					half4 localSampleStochastic3D263_g128844 = SampleStochastic3D( Texture263_g128844 , Sampler263_g128844 , Coords263_g128844 , WorldPosition263_g128844 , WorldNormal263_g128844 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8640_g128811 = localSamplePlanar3D246_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8640_g128811 = localSampleStochastic2D234_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8640_g128811 = localSampleStochastic3D263_g128844;
					#else
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#endif
					float4 temp_output_7_0_g128906 = _TerrainShaderMin2;
					float4 temp_output_9_0_g128906 = ( staticSwitch8640_g128811 - temp_output_7_0_g128906 );
					float4 temp_output_6977_0_g128811 = saturate( ( ( temp_output_9_0_g128906 * _TerrainShaderRcp2 ) + 0.0001 ) );
					half4 Masks_0210_g128816 = temp_output_6977_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128849) = _TerrainShaderTex3;
					SamplerState Sampler238_g128849 = SS30_g128901;
					half4 Input_Terrain_Coords_036789_g128811 = _TerrainCoord3;
					float4 temp_output_37_0_g128849 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128849 = temp_output_37_0_g128849;
					float3 temp_output_279_0_g128849 = Input_Position9197_g128811;
					half3 WorldPosition238_g128849 = temp_output_279_0_g128849;
					half4 localSamplePlanar2D238_g128849 = SamplePlanar2D( Texture238_g128849 , Sampler238_g128849 , Coords238_g128849 , WorldPosition238_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128849) = _TerrainShaderTex3;
					SamplerState Sampler246_g128849 = SS30_g128901;
					half4 Coords246_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition246_g128849 = temp_output_279_0_g128849;
					float3 temp_output_280_0_g128849 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128849 = temp_output_280_0_g128849;
					half4 localSamplePlanar3D246_g128849 = SamplePlanar3D( Texture246_g128849 , Sampler246_g128849 , Coords246_g128849 , WorldPosition246_g128849 , WorldNormal246_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128849) = _TerrainShaderTex3;
					SamplerState Sampler234_g128849 = SS30_g128901;
					float4 Coords234_g128849 = temp_output_37_0_g128849;
					float3 WorldPosition234_g128849 = temp_output_279_0_g128849;
					float4 localSampleStochastic2D234_g128849 = SampleStochastic2D( Texture234_g128849 , Sampler234_g128849 , Coords234_g128849 , WorldPosition234_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128849) = _TerrainShaderTex3;
					SamplerState Sampler263_g128849 = SS30_g128901;
					half4 Coords263_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition263_g128849 = temp_output_279_0_g128849;
					half3 WorldNormal263_g128849 = temp_output_280_0_g128849;
					half4 localSampleStochastic3D263_g128849 = SampleStochastic3D( Texture263_g128849 , Sampler263_g128849 , Coords263_g128849 , WorldPosition263_g128849 , WorldNormal263_g128849 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8641_g128811 = localSamplePlanar3D246_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8641_g128811 = localSampleStochastic2D234_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8641_g128811 = localSampleStochastic3D263_g128849;
					#else
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#endif
					float4 temp_output_7_0_g128907 = _TerrainShaderMin3;
					float4 temp_output_9_0_g128907 = ( staticSwitch8641_g128811 - temp_output_7_0_g128907 );
					float4 temp_output_6978_0_g128811 = saturate( ( ( temp_output_9_0_g128907 * _TerrainShaderRcp3 ) + 0.0001 ) );
					half4 Masks_0312_g128816 = temp_output_6978_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128850) = _TerrainShaderTex4;
					SamplerState Sampler238_g128850 = SS30_g128901;
					half4 Input_Terrain_Coords_046791_g128811 = _TerrainCoord4;
					float4 temp_output_37_0_g128850 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128850 = temp_output_37_0_g128850;
					float3 temp_output_279_0_g128850 = Input_Position9197_g128811;
					half3 WorldPosition238_g128850 = temp_output_279_0_g128850;
					half4 localSamplePlanar2D238_g128850 = SamplePlanar2D( Texture238_g128850 , Sampler238_g128850 , Coords238_g128850 , WorldPosition238_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128850) = _TerrainShaderTex4;
					SamplerState Sampler246_g128850 = SS30_g128901;
					half4 Coords246_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition246_g128850 = temp_output_279_0_g128850;
					float3 temp_output_280_0_g128850 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128850 = temp_output_280_0_g128850;
					half4 localSamplePlanar3D246_g128850 = SamplePlanar3D( Texture246_g128850 , Sampler246_g128850 , Coords246_g128850 , WorldPosition246_g128850 , WorldNormal246_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128850) = _TerrainShaderTex4;
					SamplerState Sampler234_g128850 = SS30_g128901;
					float4 Coords234_g128850 = temp_output_37_0_g128850;
					float3 WorldPosition234_g128850 = temp_output_279_0_g128850;
					float4 localSampleStochastic2D234_g128850 = SampleStochastic2D( Texture234_g128850 , Sampler234_g128850 , Coords234_g128850 , WorldPosition234_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128850) = _TerrainShaderTex4;
					SamplerState Sampler263_g128850 = SS30_g128901;
					half4 Coords263_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition263_g128850 = temp_output_279_0_g128850;
					half3 WorldNormal263_g128850 = temp_output_280_0_g128850;
					half4 localSampleStochastic3D263_g128850 = SampleStochastic3D( Texture263_g128850 , Sampler263_g128850 , Coords263_g128850 , WorldPosition263_g128850 , WorldNormal263_g128850 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8642_g128811 = localSamplePlanar3D246_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8642_g128811 = localSampleStochastic2D234_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8642_g128811 = localSampleStochastic3D263_g128850;
					#else
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#endif
					float4 temp_output_7_0_g128908 = _TerrainShaderMin4;
					float4 temp_output_9_0_g128908 = ( staticSwitch8642_g128811 - temp_output_7_0_g128908 );
					float4 temp_output_6983_0_g128811 = saturate( ( ( temp_output_9_0_g128908 * _TerrainShaderRcp4 ) + 0.0001 ) );
					half4 Masks_0414_g128816 = temp_output_6983_0_g128811;
					float4 appendResult29_g128816 = (float4((Masks_015_g128816).z , (Masks_0210_g128816).z , (Masks_0312_g128816).z , (Masks_0414_g128816).z));
					half4 Control31_g128816 = Terrain_Control_047365_g128811;
					half4 Terrain_Height_047210_g128811 = ( appendResult29_g128816 * Control31_g128816 );
					float4 heights_047362_g128811 = Terrain_Height_047210_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128853) = _TerrainShaderTex5;
					SamplerState Sampler238_g128853 = SS30_g128901;
					half4 Input_Terrain_Coords_058750_g128811 = _TerrainCoord5;
					float4 temp_output_37_0_g128853 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128853 = temp_output_37_0_g128853;
					float3 temp_output_279_0_g128853 = Input_Position9197_g128811;
					half3 WorldPosition238_g128853 = temp_output_279_0_g128853;
					half4 localSamplePlanar2D238_g128853 = SamplePlanar2D( Texture238_g128853 , Sampler238_g128853 , Coords238_g128853 , WorldPosition238_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128853) = _TerrainShaderTex5;
					SamplerState Sampler246_g128853 = SS30_g128901;
					half4 Coords246_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition246_g128853 = temp_output_279_0_g128853;
					float3 temp_output_280_0_g128853 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128853 = temp_output_280_0_g128853;
					half4 localSamplePlanar3D246_g128853 = SamplePlanar3D( Texture246_g128853 , Sampler246_g128853 , Coords246_g128853 , WorldPosition246_g128853 , WorldNormal246_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128853) = _TerrainShaderTex5;
					SamplerState Sampler234_g128853 = SS30_g128901;
					float4 Coords234_g128853 = temp_output_37_0_g128853;
					float3 WorldPosition234_g128853 = temp_output_279_0_g128853;
					float4 localSampleStochastic2D234_g128853 = SampleStochastic2D( Texture234_g128853 , Sampler234_g128853 , Coords234_g128853 , WorldPosition234_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128853) = _TerrainShaderTex5;
					SamplerState Sampler263_g128853 = SS30_g128901;
					half4 Coords263_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition263_g128853 = temp_output_279_0_g128853;
					half3 WorldNormal263_g128853 = temp_output_280_0_g128853;
					half4 localSampleStochastic3D263_g128853 = SampleStochastic3D( Texture263_g128853 , Sampler263_g128853 , Coords263_g128853 , WorldPosition263_g128853 , WorldNormal263_g128853 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8710_g128811 = localSamplePlanar3D246_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8710_g128811 = localSampleStochastic2D234_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8710_g128811 = localSampleStochastic3D263_g128853;
					#else
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#endif
					float4 temp_output_7_0_g128909 = _TerrainShaderMin5;
					float4 temp_output_9_0_g128909 = ( staticSwitch8710_g128811 - temp_output_7_0_g128909 );
					float4 temp_output_8714_0_g128811 = saturate( ( ( temp_output_9_0_g128909 * _TerrainShaderRcp5 ) + 0.0001 ) );
					half4 Masks_015_g128824 = temp_output_8714_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128884) = _TerrainShaderTex6;
					SamplerState Sampler238_g128884 = SS30_g128901;
					half4 Input_Terrain_Coords_068751_g128811 = _TerrainCoord6;
					float4 temp_output_37_0_g128884 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128884 = temp_output_37_0_g128884;
					float3 temp_output_279_0_g128884 = Input_Position9197_g128811;
					half3 WorldPosition238_g128884 = temp_output_279_0_g128884;
					half4 localSamplePlanar2D238_g128884 = SamplePlanar2D( Texture238_g128884 , Sampler238_g128884 , Coords238_g128884 , WorldPosition238_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128884) = _TerrainShaderTex6;
					SamplerState Sampler246_g128884 = SS30_g128901;
					half4 Coords246_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition246_g128884 = temp_output_279_0_g128884;
					float3 temp_output_280_0_g128884 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128884 = temp_output_280_0_g128884;
					half4 localSamplePlanar3D246_g128884 = SamplePlanar3D( Texture246_g128884 , Sampler246_g128884 , Coords246_g128884 , WorldPosition246_g128884 , WorldNormal246_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128884) = _TerrainShaderTex6;
					SamplerState Sampler234_g128884 = SS30_g128901;
					float4 Coords234_g128884 = temp_output_37_0_g128884;
					float3 WorldPosition234_g128884 = temp_output_279_0_g128884;
					float4 localSampleStochastic2D234_g128884 = SampleStochastic2D( Texture234_g128884 , Sampler234_g128884 , Coords234_g128884 , WorldPosition234_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128884) = _TerrainShaderTex6;
					SamplerState Sampler263_g128884 = SS30_g128901;
					half4 Coords263_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition263_g128884 = temp_output_279_0_g128884;
					half3 WorldNormal263_g128884 = temp_output_280_0_g128884;
					half4 localSampleStochastic3D263_g128884 = SampleStochastic3D( Texture263_g128884 , Sampler263_g128884 , Coords263_g128884 , WorldPosition263_g128884 , WorldNormal263_g128884 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8711_g128811 = localSamplePlanar3D246_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8711_g128811 = localSampleStochastic2D234_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8711_g128811 = localSampleStochastic3D263_g128884;
					#else
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#endif
					float4 temp_output_7_0_g128910 = _TerrainShaderMin6;
					float4 temp_output_9_0_g128910 = ( staticSwitch8711_g128811 - temp_output_7_0_g128910 );
					float4 temp_output_8721_0_g128811 = saturate( ( ( temp_output_9_0_g128910 * _TerrainShaderRcp6 ) + 0.0001 ) );
					half4 Masks_0210_g128824 = temp_output_8721_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128885) = _TerrainShaderTex7;
					SamplerState Sampler238_g128885 = SS30_g128901;
					half4 Input_Terrain_Coords_078752_g128811 = _TerrainCoord7;
					float4 temp_output_37_0_g128885 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128885 = temp_output_37_0_g128885;
					float3 temp_output_279_0_g128885 = Input_Position9197_g128811;
					half3 WorldPosition238_g128885 = temp_output_279_0_g128885;
					half4 localSamplePlanar2D238_g128885 = SamplePlanar2D( Texture238_g128885 , Sampler238_g128885 , Coords238_g128885 , WorldPosition238_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128885) = _TerrainShaderTex7;
					SamplerState Sampler246_g128885 = SS30_g128901;
					half4 Coords246_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition246_g128885 = temp_output_279_0_g128885;
					float3 temp_output_280_0_g128885 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128885 = temp_output_280_0_g128885;
					half4 localSamplePlanar3D246_g128885 = SamplePlanar3D( Texture246_g128885 , Sampler246_g128885 , Coords246_g128885 , WorldPosition246_g128885 , WorldNormal246_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128885) = _TerrainShaderTex7;
					SamplerState Sampler234_g128885 = SS30_g128901;
					float4 Coords234_g128885 = temp_output_37_0_g128885;
					float3 WorldPosition234_g128885 = temp_output_279_0_g128885;
					float4 localSampleStochastic2D234_g128885 = SampleStochastic2D( Texture234_g128885 , Sampler234_g128885 , Coords234_g128885 , WorldPosition234_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128885) = _TerrainShaderTex7;
					SamplerState Sampler263_g128885 = SS30_g128901;
					half4 Coords263_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition263_g128885 = temp_output_279_0_g128885;
					half3 WorldNormal263_g128885 = temp_output_280_0_g128885;
					half4 localSampleStochastic3D263_g128885 = SampleStochastic3D( Texture263_g128885 , Sampler263_g128885 , Coords263_g128885 , WorldPosition263_g128885 , WorldNormal263_g128885 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8712_g128811 = localSamplePlanar3D246_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8712_g128811 = localSampleStochastic2D234_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8712_g128811 = localSampleStochastic3D263_g128885;
					#else
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#endif
					float4 temp_output_7_0_g128911 = _TerrainShaderMin7;
					float4 temp_output_9_0_g128911 = ( staticSwitch8712_g128811 - temp_output_7_0_g128911 );
					float4 temp_output_8724_0_g128811 = saturate( ( ( temp_output_9_0_g128911 * _TerrainShaderRcp7 ) + 0.0001 ) );
					half4 Masks_0312_g128824 = temp_output_8724_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128886) = _TerrainShaderTex8;
					SamplerState Sampler238_g128886 = SS30_g128901;
					half4 Input_Terrain_Coords_088749_g128811 = _TerrainCoord8;
					float4 temp_output_37_0_g128886 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128886 = temp_output_37_0_g128886;
					float3 temp_output_279_0_g128886 = Input_Position9197_g128811;
					half3 WorldPosition238_g128886 = temp_output_279_0_g128886;
					half4 localSamplePlanar2D238_g128886 = SamplePlanar2D( Texture238_g128886 , Sampler238_g128886 , Coords238_g128886 , WorldPosition238_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128886) = _TerrainShaderTex8;
					SamplerState Sampler246_g128886 = SS30_g128901;
					half4 Coords246_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition246_g128886 = temp_output_279_0_g128886;
					float3 temp_output_280_0_g128886 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128886 = temp_output_280_0_g128886;
					half4 localSamplePlanar3D246_g128886 = SamplePlanar3D( Texture246_g128886 , Sampler246_g128886 , Coords246_g128886 , WorldPosition246_g128886 , WorldNormal246_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128886) = _TerrainShaderTex8;
					SamplerState Sampler234_g128886 = SS30_g128901;
					float4 Coords234_g128886 = temp_output_37_0_g128886;
					float3 WorldPosition234_g128886 = temp_output_279_0_g128886;
					float4 localSampleStochastic2D234_g128886 = SampleStochastic2D( Texture234_g128886 , Sampler234_g128886 , Coords234_g128886 , WorldPosition234_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128886) = _TerrainShaderTex8;
					SamplerState Sampler263_g128886 = SS30_g128901;
					half4 Coords263_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition263_g128886 = temp_output_279_0_g128886;
					half3 WorldNormal263_g128886 = temp_output_280_0_g128886;
					half4 localSampleStochastic3D263_g128886 = SampleStochastic3D( Texture263_g128886 , Sampler263_g128886 , Coords263_g128886 , WorldPosition263_g128886 , WorldNormal263_g128886 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8713_g128811 = localSamplePlanar3D246_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8713_g128811 = localSampleStochastic2D234_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8713_g128811 = localSampleStochastic3D263_g128886;
					#else
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#endif
					float4 temp_output_7_0_g128912 = _TerrainShaderMin8;
					float4 temp_output_9_0_g128912 = ( staticSwitch8713_g128811 - temp_output_7_0_g128912 );
					float4 temp_output_8727_0_g128811 = saturate( ( ( temp_output_9_0_g128912 * _TerrainShaderRcp8 ) + 0.0001 ) );
					half4 Masks_0414_g128824 = temp_output_8727_0_g128811;
					float4 appendResult29_g128824 = (float4((Masks_015_g128824).z , (Masks_0210_g128824).z , (Masks_0312_g128824).z , (Masks_0414_g128824).z));
					half4 Control31_g128824 = Terrain_Control_087366_g128811;
					half4 Terrain_Height_088731_g128811 = ( appendResult29_g128824 * Control31_g128824 );
					float4 heights_087362_g128811 = Terrain_Height_088731_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128856) = _TerrainShaderTex9;
					SamplerState Sampler238_g128856 = SS30_g128901;
					half4 Input_Terrain_Coords_098833_g128811 = _TerrainCoord9;
					float4 temp_output_37_0_g128856 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128856 = temp_output_37_0_g128856;
					float3 temp_output_279_0_g128856 = Input_Position9197_g128811;
					half3 WorldPosition238_g128856 = temp_output_279_0_g128856;
					half4 localSamplePlanar2D238_g128856 = SamplePlanar2D( Texture238_g128856 , Sampler238_g128856 , Coords238_g128856 , WorldPosition238_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128856) = _TerrainShaderTex9;
					SamplerState Sampler246_g128856 = SS30_g128901;
					half4 Coords246_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition246_g128856 = temp_output_279_0_g128856;
					float3 temp_output_280_0_g128856 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128856 = temp_output_280_0_g128856;
					half4 localSamplePlanar3D246_g128856 = SamplePlanar3D( Texture246_g128856 , Sampler246_g128856 , Coords246_g128856 , WorldPosition246_g128856 , WorldNormal246_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128856) = _TerrainShaderTex9;
					SamplerState Sampler234_g128856 = SS30_g128901;
					float4 Coords234_g128856 = temp_output_37_0_g128856;
					float3 WorldPosition234_g128856 = temp_output_279_0_g128856;
					float4 localSampleStochastic2D234_g128856 = SampleStochastic2D( Texture234_g128856 , Sampler234_g128856 , Coords234_g128856 , WorldPosition234_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128856) = _TerrainShaderTex9;
					SamplerState Sampler263_g128856 = SS30_g128901;
					half4 Coords263_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition263_g128856 = temp_output_279_0_g128856;
					half3 WorldNormal263_g128856 = temp_output_280_0_g128856;
					half4 localSampleStochastic3D263_g128856 = SampleStochastic3D( Texture263_g128856 , Sampler263_g128856 , Coords263_g128856 , WorldPosition263_g128856 , WorldNormal263_g128856 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8878_g128811 = localSamplePlanar3D246_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8878_g128811 = localSampleStochastic2D234_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8878_g128811 = localSampleStochastic3D263_g128856;
					#else
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#endif
					float4 temp_output_7_0_g128913 = _TerrainShaderMin9;
					float4 temp_output_9_0_g128913 = ( staticSwitch8878_g128811 - temp_output_7_0_g128913 );
					float4 temp_output_8815_0_g128811 = saturate( ( ( temp_output_9_0_g128913 * _TerrainShaderRcp9 ) + 0.0001 ) );
					half4 Masks_015_g128830 = temp_output_8815_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128866) = _TerrainShaderTex10;
					SamplerState Sampler238_g128866 = SS30_g128901;
					half4 Input_Terrain_Coords_108834_g128811 = _TerrainCoord10;
					float4 temp_output_37_0_g128866 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128866 = temp_output_37_0_g128866;
					float3 temp_output_279_0_g128866 = Input_Position9197_g128811;
					half3 WorldPosition238_g128866 = temp_output_279_0_g128866;
					half4 localSamplePlanar2D238_g128866 = SamplePlanar2D( Texture238_g128866 , Sampler238_g128866 , Coords238_g128866 , WorldPosition238_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128866) = _TerrainShaderTex10;
					SamplerState Sampler246_g128866 = SS30_g128901;
					half4 Coords246_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition246_g128866 = temp_output_279_0_g128866;
					float3 temp_output_280_0_g128866 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128866 = temp_output_280_0_g128866;
					half4 localSamplePlanar3D246_g128866 = SamplePlanar3D( Texture246_g128866 , Sampler246_g128866 , Coords246_g128866 , WorldPosition246_g128866 , WorldNormal246_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128866) = _TerrainShaderTex10;
					SamplerState Sampler234_g128866 = SS30_g128901;
					float4 Coords234_g128866 = temp_output_37_0_g128866;
					float3 WorldPosition234_g128866 = temp_output_279_0_g128866;
					float4 localSampleStochastic2D234_g128866 = SampleStochastic2D( Texture234_g128866 , Sampler234_g128866 , Coords234_g128866 , WorldPosition234_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128866) = _TerrainShaderTex10;
					SamplerState Sampler263_g128866 = SS30_g128901;
					half4 Coords263_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition263_g128866 = temp_output_279_0_g128866;
					half3 WorldNormal263_g128866 = temp_output_280_0_g128866;
					half4 localSampleStochastic3D263_g128866 = SampleStochastic3D( Texture263_g128866 , Sampler263_g128866 , Coords263_g128866 , WorldPosition263_g128866 , WorldNormal263_g128866 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8860_g128811 = localSamplePlanar3D246_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8860_g128811 = localSampleStochastic2D234_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8860_g128811 = localSampleStochastic3D263_g128866;
					#else
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#endif
					float4 temp_output_7_0_g128914 = _TerrainShaderMin10;
					float4 temp_output_9_0_g128914 = ( staticSwitch8860_g128811 - temp_output_7_0_g128914 );
					float4 temp_output_8818_0_g128811 = saturate( ( ( temp_output_9_0_g128914 * _TerrainShaderRcp10 ) + 0.0001 ) );
					half4 Masks_0210_g128830 = temp_output_8818_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128867) = _TerrainShaderTex11;
					SamplerState Sampler238_g128867 = SS30_g128901;
					half4 Input_Terrain_Coords_118835_g128811 = _TerrainCoord11;
					float4 temp_output_37_0_g128867 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128867 = temp_output_37_0_g128867;
					float3 temp_output_279_0_g128867 = Input_Position9197_g128811;
					half3 WorldPosition238_g128867 = temp_output_279_0_g128867;
					half4 localSamplePlanar2D238_g128867 = SamplePlanar2D( Texture238_g128867 , Sampler238_g128867 , Coords238_g128867 , WorldPosition238_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128867) = _TerrainShaderTex11;
					SamplerState Sampler246_g128867 = SS30_g128901;
					half4 Coords246_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition246_g128867 = temp_output_279_0_g128867;
					float3 temp_output_280_0_g128867 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128867 = temp_output_280_0_g128867;
					half4 localSamplePlanar3D246_g128867 = SamplePlanar3D( Texture246_g128867 , Sampler246_g128867 , Coords246_g128867 , WorldPosition246_g128867 , WorldNormal246_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128867) = _TerrainShaderTex11;
					SamplerState Sampler234_g128867 = SS30_g128901;
					float4 Coords234_g128867 = temp_output_37_0_g128867;
					float3 WorldPosition234_g128867 = temp_output_279_0_g128867;
					float4 localSampleStochastic2D234_g128867 = SampleStochastic2D( Texture234_g128867 , Sampler234_g128867 , Coords234_g128867 , WorldPosition234_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128867) = _TerrainShaderTex11;
					SamplerState Sampler263_g128867 = SS30_g128901;
					half4 Coords263_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition263_g128867 = temp_output_279_0_g128867;
					half3 WorldNormal263_g128867 = temp_output_280_0_g128867;
					half4 localSampleStochastic3D263_g128867 = SampleStochastic3D( Texture263_g128867 , Sampler263_g128867 , Coords263_g128867 , WorldPosition263_g128867 , WorldNormal263_g128867 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8861_g128811 = localSamplePlanar3D246_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8861_g128811 = localSampleStochastic2D234_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8861_g128811 = localSampleStochastic3D263_g128867;
					#else
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#endif
					float4 temp_output_7_0_g128915 = _TerrainShaderMin11;
					float4 temp_output_9_0_g128915 = ( staticSwitch8861_g128811 - temp_output_7_0_g128915 );
					float4 temp_output_8819_0_g128811 = saturate( ( ( temp_output_9_0_g128915 * _TerrainShaderRcp11 ) + 0.0001 ) );
					half4 Masks_0312_g128830 = temp_output_8819_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128868) = _TerrainShaderTex12;
					SamplerState Sampler238_g128868 = SS30_g128901;
					half4 Input_Terrain_Coords_128836_g128811 = _TerrainCoord12;
					float4 temp_output_37_0_g128868 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128868 = temp_output_37_0_g128868;
					float3 temp_output_279_0_g128868 = Input_Position9197_g128811;
					half3 WorldPosition238_g128868 = temp_output_279_0_g128868;
					half4 localSamplePlanar2D238_g128868 = SamplePlanar2D( Texture238_g128868 , Sampler238_g128868 , Coords238_g128868 , WorldPosition238_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128868) = _TerrainShaderTex12;
					SamplerState Sampler246_g128868 = SS30_g128901;
					half4 Coords246_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition246_g128868 = temp_output_279_0_g128868;
					float3 temp_output_280_0_g128868 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128868 = temp_output_280_0_g128868;
					half4 localSamplePlanar3D246_g128868 = SamplePlanar3D( Texture246_g128868 , Sampler246_g128868 , Coords246_g128868 , WorldPosition246_g128868 , WorldNormal246_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128868) = _TerrainShaderTex12;
					SamplerState Sampler234_g128868 = SS30_g128901;
					float4 Coords234_g128868 = temp_output_37_0_g128868;
					float3 WorldPosition234_g128868 = temp_output_279_0_g128868;
					float4 localSampleStochastic2D234_g128868 = SampleStochastic2D( Texture234_g128868 , Sampler234_g128868 , Coords234_g128868 , WorldPosition234_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128868) = _TerrainShaderTex12;
					SamplerState Sampler263_g128868 = SS30_g128901;
					half4 Coords263_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition263_g128868 = temp_output_279_0_g128868;
					half3 WorldNormal263_g128868 = temp_output_280_0_g128868;
					half4 localSampleStochastic3D263_g128868 = SampleStochastic3D( Texture263_g128868 , Sampler263_g128868 , Coords263_g128868 , WorldPosition263_g128868 , WorldNormal263_g128868 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8879_g128811 = localSamplePlanar3D246_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8879_g128811 = localSampleStochastic2D234_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8879_g128811 = localSampleStochastic3D263_g128868;
					#else
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#endif
					float4 temp_output_7_0_g128916 = _TerrainShaderMin12;
					float4 temp_output_9_0_g128916 = ( staticSwitch8879_g128811 - temp_output_7_0_g128916 );
					float4 temp_output_8820_0_g128811 = saturate( ( ( temp_output_9_0_g128916 * _TerrainShaderRcp12 ) + 0.0001 ) );
					half4 Masks_0414_g128830 = temp_output_8820_0_g128811;
					float4 appendResult29_g128830 = (float4((Masks_015_g128830).z , (Masks_0210_g128830).z , (Masks_0312_g128830).z , (Masks_0414_g128830).z));
					half4 Control31_g128830 = Terrain_Control_127712_g128811;
					half4 Terrain_Height_128870_g128811 = ( appendResult29_g128830 * Control31_g128830 );
					float4 heights_127362_g128811 = Terrain_Height_128870_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128864) = _TerrainShaderTex13;
					SamplerState Sampler238_g128864 = SS30_g128901;
					half4 Input_Terrain_Coords_138960_g128811 = _TerrainCoord13;
					float4 temp_output_37_0_g128864 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128864 = temp_output_37_0_g128864;
					float3 temp_output_279_0_g128864 = Input_Position9197_g128811;
					half3 WorldPosition238_g128864 = temp_output_279_0_g128864;
					half4 localSamplePlanar2D238_g128864 = SamplePlanar2D( Texture238_g128864 , Sampler238_g128864 , Coords238_g128864 , WorldPosition238_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128864) = _TerrainShaderTex13;
					SamplerState Sampler246_g128864 = SS30_g128901;
					half4 Coords246_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition246_g128864 = temp_output_279_0_g128864;
					float3 temp_output_280_0_g128864 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128864 = temp_output_280_0_g128864;
					half4 localSamplePlanar3D246_g128864 = SamplePlanar3D( Texture246_g128864 , Sampler246_g128864 , Coords246_g128864 , WorldPosition246_g128864 , WorldNormal246_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128864) = _TerrainShaderTex13;
					SamplerState Sampler234_g128864 = SS30_g128901;
					float4 Coords234_g128864 = temp_output_37_0_g128864;
					float3 WorldPosition234_g128864 = temp_output_279_0_g128864;
					float4 localSampleStochastic2D234_g128864 = SampleStochastic2D( Texture234_g128864 , Sampler234_g128864 , Coords234_g128864 , WorldPosition234_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128864) = _TerrainShaderTex13;
					SamplerState Sampler263_g128864 = SS30_g128901;
					half4 Coords263_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition263_g128864 = temp_output_279_0_g128864;
					half3 WorldNormal263_g128864 = temp_output_280_0_g128864;
					half4 localSampleStochastic3D263_g128864 = SampleStochastic3D( Texture263_g128864 , Sampler263_g128864 , Coords263_g128864 , WorldPosition263_g128864 , WorldNormal263_g128864 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch9000_g128811 = localSamplePlanar3D246_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch9000_g128811 = localSampleStochastic2D234_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch9000_g128811 = localSampleStochastic3D263_g128864;
					#else
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#endif
					float4 temp_output_7_0_g128917 = _TerrainShaderMin13;
					float4 temp_output_9_0_g128917 = ( staticSwitch9000_g128811 - temp_output_7_0_g128917 );
					float4 temp_output_8931_0_g128811 = saturate( ( ( temp_output_9_0_g128917 * _TerrainShaderRcp13 ) + 0.0001 ) );
					half4 Masks_015_g128836 = temp_output_8931_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128875) = _TerrainShaderTex14;
					SamplerState Sampler238_g128875 = SS30_g128901;
					half4 Input_Terrain_Coords_148961_g128811 = _TerrainCoord14;
					float4 temp_output_37_0_g128875 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128875 = temp_output_37_0_g128875;
					float3 temp_output_279_0_g128875 = Input_Position9197_g128811;
					half3 WorldPosition238_g128875 = temp_output_279_0_g128875;
					half4 localSamplePlanar2D238_g128875 = SamplePlanar2D( Texture238_g128875 , Sampler238_g128875 , Coords238_g128875 , WorldPosition238_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128875) = _TerrainShaderTex14;
					SamplerState Sampler246_g128875 = SS30_g128901;
					half4 Coords246_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition246_g128875 = temp_output_279_0_g128875;
					float3 temp_output_280_0_g128875 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128875 = temp_output_280_0_g128875;
					half4 localSamplePlanar3D246_g128875 = SamplePlanar3D( Texture246_g128875 , Sampler246_g128875 , Coords246_g128875 , WorldPosition246_g128875 , WorldNormal246_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128875) = _TerrainShaderTex14;
					SamplerState Sampler234_g128875 = SS30_g128901;
					float4 Coords234_g128875 = temp_output_37_0_g128875;
					float3 WorldPosition234_g128875 = temp_output_279_0_g128875;
					float4 localSampleStochastic2D234_g128875 = SampleStochastic2D( Texture234_g128875 , Sampler234_g128875 , Coords234_g128875 , WorldPosition234_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128875) = _TerrainShaderTex14;
					SamplerState Sampler263_g128875 = SS30_g128901;
					half4 Coords263_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition263_g128875 = temp_output_279_0_g128875;
					half3 WorldNormal263_g128875 = temp_output_280_0_g128875;
					half4 localSampleStochastic3D263_g128875 = SampleStochastic3D( Texture263_g128875 , Sampler263_g128875 , Coords263_g128875 , WorldPosition263_g128875 , WorldNormal263_g128875 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch9001_g128811 = localSamplePlanar3D246_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch9001_g128811 = localSampleStochastic2D234_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch9001_g128811 = localSampleStochastic3D263_g128875;
					#else
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#endif
					float4 temp_output_7_0_g128918 = _TerrainShaderMin14;
					float4 temp_output_9_0_g128918 = ( staticSwitch9001_g128811 - temp_output_7_0_g128918 );
					float4 temp_output_8934_0_g128811 = saturate( ( ( temp_output_9_0_g128918 * _TerrainShaderRcp14 ) + 0.0001 ) );
					half4 Masks_0210_g128836 = temp_output_8934_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128876) = _TerrainShaderTex15;
					SamplerState Sampler238_g128876 = SS30_g128901;
					half4 Input_Terrain_Coords_158962_g128811 = _TerrainCoord15;
					float4 temp_output_37_0_g128876 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128876 = temp_output_37_0_g128876;
					float3 temp_output_279_0_g128876 = Input_Position9197_g128811;
					half3 WorldPosition238_g128876 = temp_output_279_0_g128876;
					half4 localSamplePlanar2D238_g128876 = SamplePlanar2D( Texture238_g128876 , Sampler238_g128876 , Coords238_g128876 , WorldPosition238_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128876) = _TerrainShaderTex15;
					SamplerState Sampler246_g128876 = SS30_g128901;
					half4 Coords246_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition246_g128876 = temp_output_279_0_g128876;
					float3 temp_output_280_0_g128876 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128876 = temp_output_280_0_g128876;
					half4 localSamplePlanar3D246_g128876 = SamplePlanar3D( Texture246_g128876 , Sampler246_g128876 , Coords246_g128876 , WorldPosition246_g128876 , WorldNormal246_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128876) = _TerrainShaderTex15;
					SamplerState Sampler234_g128876 = SS30_g128901;
					float4 Coords234_g128876 = temp_output_37_0_g128876;
					float3 WorldPosition234_g128876 = temp_output_279_0_g128876;
					float4 localSampleStochastic2D234_g128876 = SampleStochastic2D( Texture234_g128876 , Sampler234_g128876 , Coords234_g128876 , WorldPosition234_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128876) = _TerrainShaderTex15;
					SamplerState Sampler263_g128876 = SS30_g128901;
					half4 Coords263_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition263_g128876 = temp_output_279_0_g128876;
					half3 WorldNormal263_g128876 = temp_output_280_0_g128876;
					half4 localSampleStochastic3D263_g128876 = SampleStochastic3D( Texture263_g128876 , Sampler263_g128876 , Coords263_g128876 , WorldPosition263_g128876 , WorldNormal263_g128876 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch9002_g128811 = localSamplePlanar3D246_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch9002_g128811 = localSampleStochastic2D234_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch9002_g128811 = localSampleStochastic3D263_g128876;
					#else
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#endif
					float4 temp_output_7_0_g128919 = _TerrainShaderMin15;
					float4 temp_output_9_0_g128919 = ( staticSwitch9002_g128811 - temp_output_7_0_g128919 );
					float4 temp_output_8935_0_g128811 = saturate( ( ( temp_output_9_0_g128919 * _TerrainShaderRcp15 ) + 0.0001 ) );
					half4 Masks_0312_g128836 = temp_output_8935_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128877) = _TerrainShaderTex16;
					SamplerState Sampler238_g128877 = SS30_g128901;
					half4 Input_Terrain_Coords_168959_g128811 = _TerrainCoord16;
					float4 temp_output_37_0_g128877 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128877 = temp_output_37_0_g128877;
					float3 temp_output_279_0_g128877 = Input_Position9197_g128811;
					half3 WorldPosition238_g128877 = temp_output_279_0_g128877;
					half4 localSamplePlanar2D238_g128877 = SamplePlanar2D( Texture238_g128877 , Sampler238_g128877 , Coords238_g128877 , WorldPosition238_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128877) = _TerrainShaderTex16;
					SamplerState Sampler246_g128877 = SS30_g128901;
					half4 Coords246_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition246_g128877 = temp_output_279_0_g128877;
					float3 temp_output_280_0_g128877 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128877 = temp_output_280_0_g128877;
					half4 localSamplePlanar3D246_g128877 = SamplePlanar3D( Texture246_g128877 , Sampler246_g128877 , Coords246_g128877 , WorldPosition246_g128877 , WorldNormal246_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128877) = _TerrainShaderTex16;
					SamplerState Sampler234_g128877 = SS30_g128901;
					float4 Coords234_g128877 = temp_output_37_0_g128877;
					float3 WorldPosition234_g128877 = temp_output_279_0_g128877;
					float4 localSampleStochastic2D234_g128877 = SampleStochastic2D( Texture234_g128877 , Sampler234_g128877 , Coords234_g128877 , WorldPosition234_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128877) = _TerrainShaderTex16;
					SamplerState Sampler263_g128877 = SS30_g128901;
					half4 Coords263_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition263_g128877 = temp_output_279_0_g128877;
					half3 WorldNormal263_g128877 = temp_output_280_0_g128877;
					half4 localSampleStochastic3D263_g128877 = SampleStochastic3D( Texture263_g128877 , Sampler263_g128877 , Coords263_g128877 , WorldPosition263_g128877 , WorldNormal263_g128877 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch9003_g128811 = localSamplePlanar3D246_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch9003_g128811 = localSampleStochastic2D234_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch9003_g128811 = localSampleStochastic3D263_g128877;
					#else
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#endif
					float4 temp_output_7_0_g128920 = _TerrainShaderMin16;
					float4 temp_output_9_0_g128920 = ( staticSwitch9003_g128811 - temp_output_7_0_g128920 );
					float4 temp_output_8936_0_g128811 = saturate( ( ( temp_output_9_0_g128920 * _TerrainShaderRcp16 ) + 0.0001 ) );
					half4 Masks_0414_g128836 = temp_output_8936_0_g128811;
					float4 appendResult29_g128836 = (float4((Masks_015_g128836).z , (Masks_0210_g128836).z , (Masks_0312_g128836).z , (Masks_0414_g128836).z));
					half4 Control31_g128836 = Terrain_Control_167711_g128811;
					half4 Terrain_Height_169015_g128811 = ( appendResult29_g128836 * Control31_g128836 );
					float4 heights_167362_g128811 = Terrain_Height_169015_g128811;
					float heightTransition7362_g128811 = ( 1.0 - _TerrainHeightBlendValue );
					float4 weights_047362_g128811 = float4( 0,0,0,0 );
					float4 weights_087362_g128811 = float4( 0,0,0,0 );
					float4 weights_127362_g128811 = float4( 0,0,0,0 );
					float4 weights_167362_g128811 = float4( 0,0,0,0 );
					{
					//Modified version of the HDRP terrain height based blending
					float maxHeight = 0;
					float4 weightedHeights_04 = float4( 0,0,0,0 );
					float4 weightedHeights_08 = float4( 0,0,0,0 );
					float4 weightedHeights_12 = float4( 0,0,0,0 );
					float4 weightedHeights_16 = float4( 0,0,0,0 );
					maxHeight = heights_047362_g128811.x;
					maxHeight = max(maxHeight, heights_047362_g128811.y);
					maxHeight = max(maxHeight, heights_047362_g128811.z);
					maxHeight = max(maxHeight, heights_047362_g128811.w);
					#ifdef TVE_TERRAIN_08
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_12
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_16
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					maxHeight = max(maxHeight, heights_167362_g128811.x);
					maxHeight = max(maxHeight, heights_167362_g128811.y);
					maxHeight = max(maxHeight, heights_167362_g128811.z);
					maxHeight = max(maxHeight, heights_167362_g128811.w);
					#endif
					float transition = max(heightTransition7362_g128811, 0.01);
					weightedHeights_04 = float4 ( heights_047362_g128811.x, heights_047362_g128811.y, heights_047362_g128811.z, heights_047362_g128811.w );
					weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
					weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g128811;
					#ifdef TVE_TERRAIN_08
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					#endif
					#ifdef TVE_TERRAIN_12
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					#endif
					#ifdef TVE_TERRAIN_16
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					weightedHeights_16 = float4 ( heights_167362_g128811.x, heights_167362_g128811.y, heights_167362_g128811.z, heights_167362_g128811.w );
					weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
					weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g128811;
					#endif
					float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
					float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
					float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
					float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
					float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
					weights_047362_g128811 = weightedHeights_04 / sumHeight.xxxx;
					#ifdef TVE_TERRAIN_08
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_12
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_16
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					weights_167362_g128811 = weightedHeights_16 / sumHeight.xxxx;
					#endif
					}
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8792_g128811 = weights_047362_g128811;
					#else
					float4 staticSwitch8792_g128811 = control_047362_g128811;
					#endif
					half4 Terrain_Weights_046781_g128811 = staticSwitch8792_g128811;
					half4 Weights52_g128815 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128841) = _TerrainAlbedoTex1;
					float localFilterTexture19_g128898 = ( 0.0 );
					SamplerState SS19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128898 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128898 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128898 = SamplerDefault19_g128898;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128898 = SamplerDefault19_g128898;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128898 = SamplerPoint19_g128898;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128898 = SamplerLow19_g128898;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128898 = SamplerMedium19_g128898;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128898 = SamplerHigh19_g128898;
					#endif
					}
					SamplerState Sampler238_g128841 = SS19_g128898;
					float4 temp_output_37_0_g128841 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128841 = temp_output_37_0_g128841;
					float3 temp_output_279_0_g128841 = Input_Position9197_g128811;
					half3 WorldPosition238_g128841 = temp_output_279_0_g128841;
					half4 localSamplePlanar2D238_g128841 = SamplePlanar2D( Texture238_g128841 , Sampler238_g128841 , Coords238_g128841 , WorldPosition238_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler246_g128841 = SS19_g128898;
					half4 Coords246_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition246_g128841 = temp_output_279_0_g128841;
					float3 temp_output_280_0_g128841 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128841 = temp_output_280_0_g128841;
					half4 localSamplePlanar3D246_g128841 = SamplePlanar3D( Texture246_g128841 , Sampler246_g128841 , Coords246_g128841 , WorldPosition246_g128841 , WorldNormal246_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler234_g128841 = SS19_g128898;
					float4 Coords234_g128841 = temp_output_37_0_g128841;
					float3 WorldPosition234_g128841 = temp_output_279_0_g128841;
					float4 localSampleStochastic2D234_g128841 = SampleStochastic2D( Texture234_g128841 , Sampler234_g128841 , Coords234_g128841 , WorldPosition234_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler263_g128841 = SS19_g128898;
					half4 Coords263_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition263_g128841 = temp_output_279_0_g128841;
					half3 WorldNormal263_g128841 = temp_output_280_0_g128841;
					half4 localSampleStochastic3D263_g128841 = SampleStochastic3D( Texture263_g128841 , Sampler263_g128841 , Coords263_g128841 , WorldPosition263_g128841 , WorldNormal263_g128841 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8614_g128811 = localSamplePlanar3D246_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8614_g128811 = localSampleStochastic2D234_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8614_g128811 = localSampleStochastic3D263_g128841;
					#else
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#endif
					half4 Layer133_g128815 = staticSwitch8614_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler238_g128842 = SS19_g128898;
					float4 temp_output_37_0_g128842 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128842 = temp_output_37_0_g128842;
					float3 temp_output_279_0_g128842 = Input_Position9197_g128811;
					half3 WorldPosition238_g128842 = temp_output_279_0_g128842;
					half4 localSamplePlanar2D238_g128842 = SamplePlanar2D( Texture238_g128842 , Sampler238_g128842 , Coords238_g128842 , WorldPosition238_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler246_g128842 = SS19_g128898;
					half4 Coords246_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition246_g128842 = temp_output_279_0_g128842;
					float3 temp_output_280_0_g128842 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128842 = temp_output_280_0_g128842;
					half4 localSamplePlanar3D246_g128842 = SamplePlanar3D( Texture246_g128842 , Sampler246_g128842 , Coords246_g128842 , WorldPosition246_g128842 , WorldNormal246_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler234_g128842 = SS19_g128898;
					float4 Coords234_g128842 = temp_output_37_0_g128842;
					float3 WorldPosition234_g128842 = temp_output_279_0_g128842;
					float4 localSampleStochastic2D234_g128842 = SampleStochastic2D( Texture234_g128842 , Sampler234_g128842 , Coords234_g128842 , WorldPosition234_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler263_g128842 = SS19_g128898;
					half4 Coords263_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition263_g128842 = temp_output_279_0_g128842;
					half3 WorldNormal263_g128842 = temp_output_280_0_g128842;
					half4 localSampleStochastic3D263_g128842 = SampleStochastic3D( Texture263_g128842 , Sampler263_g128842 , Coords263_g128842 , WorldPosition263_g128842 , WorldNormal263_g128842 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8629_g128811 = localSamplePlanar3D246_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8629_g128811 = localSampleStochastic2D234_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8629_g128811 = localSampleStochastic3D263_g128842;
					#else
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#endif
					half4 Layer237_g128815 = staticSwitch8629_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler238_g128845 = SS19_g128898;
					float4 temp_output_37_0_g128845 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128845 = temp_output_37_0_g128845;
					float3 temp_output_279_0_g128845 = Input_Position9197_g128811;
					half3 WorldPosition238_g128845 = temp_output_279_0_g128845;
					half4 localSamplePlanar2D238_g128845 = SamplePlanar2D( Texture238_g128845 , Sampler238_g128845 , Coords238_g128845 , WorldPosition238_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler246_g128845 = SS19_g128898;
					half4 Coords246_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition246_g128845 = temp_output_279_0_g128845;
					float3 temp_output_280_0_g128845 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128845 = temp_output_280_0_g128845;
					half4 localSamplePlanar3D246_g128845 = SamplePlanar3D( Texture246_g128845 , Sampler246_g128845 , Coords246_g128845 , WorldPosition246_g128845 , WorldNormal246_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler234_g128845 = SS19_g128898;
					float4 Coords234_g128845 = temp_output_37_0_g128845;
					float3 WorldPosition234_g128845 = temp_output_279_0_g128845;
					float4 localSampleStochastic2D234_g128845 = SampleStochastic2D( Texture234_g128845 , Sampler234_g128845 , Coords234_g128845 , WorldPosition234_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler263_g128845 = SS19_g128898;
					half4 Coords263_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition263_g128845 = temp_output_279_0_g128845;
					half3 WorldNormal263_g128845 = temp_output_280_0_g128845;
					half4 localSampleStochastic3D263_g128845 = SampleStochastic3D( Texture263_g128845 , Sampler263_g128845 , Coords263_g128845 , WorldPosition263_g128845 , WorldNormal263_g128845 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8630_g128811 = localSamplePlanar3D246_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8630_g128811 = localSampleStochastic2D234_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8630_g128811 = localSampleStochastic3D263_g128845;
					#else
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#endif
					half4 Layer338_g128815 = staticSwitch8630_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler238_g128847 = SS19_g128898;
					float4 temp_output_37_0_g128847 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128847 = temp_output_37_0_g128847;
					float3 temp_output_279_0_g128847 = Input_Position9197_g128811;
					half3 WorldPosition238_g128847 = temp_output_279_0_g128847;
					half4 localSamplePlanar2D238_g128847 = SamplePlanar2D( Texture238_g128847 , Sampler238_g128847 , Coords238_g128847 , WorldPosition238_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler246_g128847 = SS19_g128898;
					half4 Coords246_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition246_g128847 = temp_output_279_0_g128847;
					float3 temp_output_280_0_g128847 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128847 = temp_output_280_0_g128847;
					half4 localSamplePlanar3D246_g128847 = SamplePlanar3D( Texture246_g128847 , Sampler246_g128847 , Coords246_g128847 , WorldPosition246_g128847 , WorldNormal246_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler234_g128847 = SS19_g128898;
					float4 Coords234_g128847 = temp_output_37_0_g128847;
					float3 WorldPosition234_g128847 = temp_output_279_0_g128847;
					float4 localSampleStochastic2D234_g128847 = SampleStochastic2D( Texture234_g128847 , Sampler234_g128847 , Coords234_g128847 , WorldPosition234_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler263_g128847 = SS19_g128898;
					half4 Coords263_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition263_g128847 = temp_output_279_0_g128847;
					half3 WorldNormal263_g128847 = temp_output_280_0_g128847;
					half4 localSampleStochastic3D263_g128847 = SampleStochastic3D( Texture263_g128847 , Sampler263_g128847 , Coords263_g128847 , WorldPosition263_g128847 , WorldNormal263_g128847 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8631_g128811 = localSamplePlanar3D246_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8631_g128811 = localSampleStochastic2D234_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8631_g128811 = localSampleStochastic3D263_g128847;
					#else
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#endif
					half4 Layer439_g128815 = staticSwitch8631_g128811;
					float4 weightedBlendVar31_g128815 = Weights52_g128815;
					float4 weightedBlend31_g128815 = ( weightedBlendVar31_g128815.x*Layer133_g128815 + weightedBlendVar31_g128815.y*Layer237_g128815 + weightedBlendVar31_g128815.z*Layer338_g128815 + weightedBlendVar31_g128815.w*Layer439_g128815 );
					half4 Terrain_AAAA_047200_g128811 = weightedBlend31_g128815;
					half4 Layer_045_g128818 = Terrain_AAAA_047200_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8793_g128811 = weights_087362_g128811;
					#else
					float4 staticSwitch8793_g128811 = control_087362_g128811;
					#endif
					half4 Terrain_Weights_087340_g128811 = staticSwitch8793_g128811;
					half4 Weights52_g128822 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler238_g128851 = SS19_g128898;
					float4 temp_output_37_0_g128851 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128851 = temp_output_37_0_g128851;
					float3 temp_output_279_0_g128851 = Input_Position9197_g128811;
					half3 WorldPosition238_g128851 = temp_output_279_0_g128851;
					half4 localSamplePlanar2D238_g128851 = SamplePlanar2D( Texture238_g128851 , Sampler238_g128851 , Coords238_g128851 , WorldPosition238_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler246_g128851 = SS19_g128898;
					half4 Coords246_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition246_g128851 = temp_output_279_0_g128851;
					float3 temp_output_280_0_g128851 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128851 = temp_output_280_0_g128851;
					half4 localSamplePlanar3D246_g128851 = SamplePlanar3D( Texture246_g128851 , Sampler246_g128851 , Coords246_g128851 , WorldPosition246_g128851 , WorldNormal246_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler234_g128851 = SS19_g128898;
					float4 Coords234_g128851 = temp_output_37_0_g128851;
					float3 WorldPosition234_g128851 = temp_output_279_0_g128851;
					float4 localSampleStochastic2D234_g128851 = SampleStochastic2D( Texture234_g128851 , Sampler234_g128851 , Coords234_g128851 , WorldPosition234_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler263_g128851 = SS19_g128898;
					half4 Coords263_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition263_g128851 = temp_output_279_0_g128851;
					half3 WorldNormal263_g128851 = temp_output_280_0_g128851;
					half4 localSampleStochastic3D263_g128851 = SampleStochastic3D( Texture263_g128851 , Sampler263_g128851 , Coords263_g128851 , WorldPosition263_g128851 , WorldNormal263_g128851 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8690_g128811 = localSamplePlanar3D246_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8690_g128811 = localSampleStochastic2D234_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8690_g128811 = localSampleStochastic3D263_g128851;
					#else
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#endif
					half4 Layer133_g128822 = staticSwitch8690_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler238_g128878 = SS19_g128898;
					float4 temp_output_37_0_g128878 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128878 = temp_output_37_0_g128878;
					float3 temp_output_279_0_g128878 = Input_Position9197_g128811;
					half3 WorldPosition238_g128878 = temp_output_279_0_g128878;
					half4 localSamplePlanar2D238_g128878 = SamplePlanar2D( Texture238_g128878 , Sampler238_g128878 , Coords238_g128878 , WorldPosition238_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler246_g128878 = SS19_g128898;
					half4 Coords246_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition246_g128878 = temp_output_279_0_g128878;
					float3 temp_output_280_0_g128878 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128878 = temp_output_280_0_g128878;
					half4 localSamplePlanar3D246_g128878 = SamplePlanar3D( Texture246_g128878 , Sampler246_g128878 , Coords246_g128878 , WorldPosition246_g128878 , WorldNormal246_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler234_g128878 = SS19_g128898;
					float4 Coords234_g128878 = temp_output_37_0_g128878;
					float3 WorldPosition234_g128878 = temp_output_279_0_g128878;
					float4 localSampleStochastic2D234_g128878 = SampleStochastic2D( Texture234_g128878 , Sampler234_g128878 , Coords234_g128878 , WorldPosition234_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler263_g128878 = SS19_g128898;
					half4 Coords263_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition263_g128878 = temp_output_279_0_g128878;
					half3 WorldNormal263_g128878 = temp_output_280_0_g128878;
					half4 localSampleStochastic3D263_g128878 = SampleStochastic3D( Texture263_g128878 , Sampler263_g128878 , Coords263_g128878 , WorldPosition263_g128878 , WorldNormal263_g128878 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8691_g128811 = localSamplePlanar3D246_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8691_g128811 = localSampleStochastic2D234_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8691_g128811 = localSampleStochastic3D263_g128878;
					#else
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#endif
					half4 Layer237_g128822 = staticSwitch8691_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler238_g128879 = SS19_g128898;
					float4 temp_output_37_0_g128879 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128879 = temp_output_37_0_g128879;
					float3 temp_output_279_0_g128879 = Input_Position9197_g128811;
					half3 WorldPosition238_g128879 = temp_output_279_0_g128879;
					half4 localSamplePlanar2D238_g128879 = SamplePlanar2D( Texture238_g128879 , Sampler238_g128879 , Coords238_g128879 , WorldPosition238_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler246_g128879 = SS19_g128898;
					half4 Coords246_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition246_g128879 = temp_output_279_0_g128879;
					float3 temp_output_280_0_g128879 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128879 = temp_output_280_0_g128879;
					half4 localSamplePlanar3D246_g128879 = SamplePlanar3D( Texture246_g128879 , Sampler246_g128879 , Coords246_g128879 , WorldPosition246_g128879 , WorldNormal246_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler234_g128879 = SS19_g128898;
					float4 Coords234_g128879 = temp_output_37_0_g128879;
					float3 WorldPosition234_g128879 = temp_output_279_0_g128879;
					float4 localSampleStochastic2D234_g128879 = SampleStochastic2D( Texture234_g128879 , Sampler234_g128879 , Coords234_g128879 , WorldPosition234_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler263_g128879 = SS19_g128898;
					half4 Coords263_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition263_g128879 = temp_output_279_0_g128879;
					half3 WorldNormal263_g128879 = temp_output_280_0_g128879;
					half4 localSampleStochastic3D263_g128879 = SampleStochastic3D( Texture263_g128879 , Sampler263_g128879 , Coords263_g128879 , WorldPosition263_g128879 , WorldNormal263_g128879 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8692_g128811 = localSamplePlanar3D246_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8692_g128811 = localSampleStochastic2D234_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8692_g128811 = localSampleStochastic3D263_g128879;
					#else
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#endif
					half4 Layer338_g128822 = staticSwitch8692_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler238_g128880 = SS19_g128898;
					float4 temp_output_37_0_g128880 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128880 = temp_output_37_0_g128880;
					float3 temp_output_279_0_g128880 = Input_Position9197_g128811;
					half3 WorldPosition238_g128880 = temp_output_279_0_g128880;
					half4 localSamplePlanar2D238_g128880 = SamplePlanar2D( Texture238_g128880 , Sampler238_g128880 , Coords238_g128880 , WorldPosition238_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler246_g128880 = SS19_g128898;
					half4 Coords246_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition246_g128880 = temp_output_279_0_g128880;
					float3 temp_output_280_0_g128880 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128880 = temp_output_280_0_g128880;
					half4 localSamplePlanar3D246_g128880 = SamplePlanar3D( Texture246_g128880 , Sampler246_g128880 , Coords246_g128880 , WorldPosition246_g128880 , WorldNormal246_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler234_g128880 = SS19_g128898;
					float4 Coords234_g128880 = temp_output_37_0_g128880;
					float3 WorldPosition234_g128880 = temp_output_279_0_g128880;
					float4 localSampleStochastic2D234_g128880 = SampleStochastic2D( Texture234_g128880 , Sampler234_g128880 , Coords234_g128880 , WorldPosition234_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler263_g128880 = SS19_g128898;
					half4 Coords263_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition263_g128880 = temp_output_279_0_g128880;
					half3 WorldNormal263_g128880 = temp_output_280_0_g128880;
					half4 localSampleStochastic3D263_g128880 = SampleStochastic3D( Texture263_g128880 , Sampler263_g128880 , Coords263_g128880 , WorldPosition263_g128880 , WorldNormal263_g128880 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8693_g128811 = localSamplePlanar3D246_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8693_g128811 = localSampleStochastic2D234_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8693_g128811 = localSampleStochastic3D263_g128880;
					#else
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#endif
					half4 Layer439_g128822 = staticSwitch8693_g128811;
					float4 weightedBlendVar31_g128822 = Weights52_g128822;
					float4 weightedBlend31_g128822 = ( weightedBlendVar31_g128822.x*Layer133_g128822 + weightedBlendVar31_g128822.y*Layer237_g128822 + weightedBlendVar31_g128822.z*Layer338_g128822 + weightedBlendVar31_g128822.w*Layer439_g128822 );
					half4 Terrain_AAAA_088665_g128811 = weightedBlend31_g128822;
					half4 Layer_0810_g128818 = Terrain_AAAA_088665_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8794_g128811 = weights_127362_g128811;
					#else
					float4 staticSwitch8794_g128811 = control_127362_g128811;
					#endif
					half4 Terrain_Weights_127710_g128811 = staticSwitch8794_g128811;
					half4 Weights52_g128828 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler238_g128854 = SS19_g128898;
					float4 temp_output_37_0_g128854 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128854 = temp_output_37_0_g128854;
					float3 temp_output_279_0_g128854 = Input_Position9197_g128811;
					half3 WorldPosition238_g128854 = temp_output_279_0_g128854;
					half4 localSamplePlanar2D238_g128854 = SamplePlanar2D( Texture238_g128854 , Sampler238_g128854 , Coords238_g128854 , WorldPosition238_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler246_g128854 = SS19_g128898;
					half4 Coords246_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition246_g128854 = temp_output_279_0_g128854;
					float3 temp_output_280_0_g128854 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128854 = temp_output_280_0_g128854;
					half4 localSamplePlanar3D246_g128854 = SamplePlanar3D( Texture246_g128854 , Sampler246_g128854 , Coords246_g128854 , WorldPosition246_g128854 , WorldNormal246_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler234_g128854 = SS19_g128898;
					float4 Coords234_g128854 = temp_output_37_0_g128854;
					float3 WorldPosition234_g128854 = temp_output_279_0_g128854;
					float4 localSampleStochastic2D234_g128854 = SampleStochastic2D( Texture234_g128854 , Sampler234_g128854 , Coords234_g128854 , WorldPosition234_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler263_g128854 = SS19_g128898;
					half4 Coords263_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition263_g128854 = temp_output_279_0_g128854;
					half3 WorldNormal263_g128854 = temp_output_280_0_g128854;
					half4 localSampleStochastic3D263_g128854 = SampleStochastic3D( Texture263_g128854 , Sampler263_g128854 , Coords263_g128854 , WorldPosition263_g128854 , WorldNormal263_g128854 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8872_g128811 = localSamplePlanar3D246_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8872_g128811 = localSampleStochastic2D234_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8872_g128811 = localSampleStochastic3D263_g128854;
					#else
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#endif
					half4 Layer133_g128828 = staticSwitch8872_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler238_g128857 = SS19_g128898;
					float4 temp_output_37_0_g128857 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128857 = temp_output_37_0_g128857;
					float3 temp_output_279_0_g128857 = Input_Position9197_g128811;
					half3 WorldPosition238_g128857 = temp_output_279_0_g128857;
					half4 localSamplePlanar2D238_g128857 = SamplePlanar2D( Texture238_g128857 , Sampler238_g128857 , Coords238_g128857 , WorldPosition238_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler246_g128857 = SS19_g128898;
					half4 Coords246_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition246_g128857 = temp_output_279_0_g128857;
					float3 temp_output_280_0_g128857 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128857 = temp_output_280_0_g128857;
					half4 localSamplePlanar3D246_g128857 = SamplePlanar3D( Texture246_g128857 , Sampler246_g128857 , Coords246_g128857 , WorldPosition246_g128857 , WorldNormal246_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler234_g128857 = SS19_g128898;
					float4 Coords234_g128857 = temp_output_37_0_g128857;
					float3 WorldPosition234_g128857 = temp_output_279_0_g128857;
					float4 localSampleStochastic2D234_g128857 = SampleStochastic2D( Texture234_g128857 , Sampler234_g128857 , Coords234_g128857 , WorldPosition234_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler263_g128857 = SS19_g128898;
					half4 Coords263_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition263_g128857 = temp_output_279_0_g128857;
					half3 WorldNormal263_g128857 = temp_output_280_0_g128857;
					half4 localSampleStochastic3D263_g128857 = SampleStochastic3D( Texture263_g128857 , Sampler263_g128857 , Coords263_g128857 , WorldPosition263_g128857 , WorldNormal263_g128857 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8873_g128811 = localSamplePlanar3D246_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8873_g128811 = localSampleStochastic2D234_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8873_g128811 = localSampleStochastic3D263_g128857;
					#else
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#endif
					half4 Layer237_g128828 = staticSwitch8873_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler238_g128858 = SS19_g128898;
					float4 temp_output_37_0_g128858 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128858 = temp_output_37_0_g128858;
					float3 temp_output_279_0_g128858 = Input_Position9197_g128811;
					half3 WorldPosition238_g128858 = temp_output_279_0_g128858;
					half4 localSamplePlanar2D238_g128858 = SamplePlanar2D( Texture238_g128858 , Sampler238_g128858 , Coords238_g128858 , WorldPosition238_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler246_g128858 = SS19_g128898;
					half4 Coords246_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition246_g128858 = temp_output_279_0_g128858;
					float3 temp_output_280_0_g128858 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128858 = temp_output_280_0_g128858;
					half4 localSamplePlanar3D246_g128858 = SamplePlanar3D( Texture246_g128858 , Sampler246_g128858 , Coords246_g128858 , WorldPosition246_g128858 , WorldNormal246_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler234_g128858 = SS19_g128898;
					float4 Coords234_g128858 = temp_output_37_0_g128858;
					float3 WorldPosition234_g128858 = temp_output_279_0_g128858;
					float4 localSampleStochastic2D234_g128858 = SampleStochastic2D( Texture234_g128858 , Sampler234_g128858 , Coords234_g128858 , WorldPosition234_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler263_g128858 = SS19_g128898;
					half4 Coords263_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition263_g128858 = temp_output_279_0_g128858;
					half3 WorldNormal263_g128858 = temp_output_280_0_g128858;
					half4 localSampleStochastic3D263_g128858 = SampleStochastic3D( Texture263_g128858 , Sampler263_g128858 , Coords263_g128858 , WorldPosition263_g128858 , WorldNormal263_g128858 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8874_g128811 = localSamplePlanar3D246_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8874_g128811 = localSampleStochastic2D234_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8874_g128811 = localSampleStochastic3D263_g128858;
					#else
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#endif
					half4 Layer338_g128828 = staticSwitch8874_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler238_g128859 = SS19_g128898;
					float4 temp_output_37_0_g128859 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128859 = temp_output_37_0_g128859;
					float3 temp_output_279_0_g128859 = Input_Position9197_g128811;
					half3 WorldPosition238_g128859 = temp_output_279_0_g128859;
					half4 localSamplePlanar2D238_g128859 = SamplePlanar2D( Texture238_g128859 , Sampler238_g128859 , Coords238_g128859 , WorldPosition238_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler246_g128859 = SS19_g128898;
					half4 Coords246_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition246_g128859 = temp_output_279_0_g128859;
					float3 temp_output_280_0_g128859 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128859 = temp_output_280_0_g128859;
					half4 localSamplePlanar3D246_g128859 = SamplePlanar3D( Texture246_g128859 , Sampler246_g128859 , Coords246_g128859 , WorldPosition246_g128859 , WorldNormal246_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler234_g128859 = SS19_g128898;
					float4 Coords234_g128859 = temp_output_37_0_g128859;
					float3 WorldPosition234_g128859 = temp_output_279_0_g128859;
					float4 localSampleStochastic2D234_g128859 = SampleStochastic2D( Texture234_g128859 , Sampler234_g128859 , Coords234_g128859 , WorldPosition234_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler263_g128859 = SS19_g128898;
					half4 Coords263_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition263_g128859 = temp_output_279_0_g128859;
					half3 WorldNormal263_g128859 = temp_output_280_0_g128859;
					half4 localSampleStochastic3D263_g128859 = SampleStochastic3D( Texture263_g128859 , Sampler263_g128859 , Coords263_g128859 , WorldPosition263_g128859 , WorldNormal263_g128859 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8875_g128811 = localSamplePlanar3D246_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8875_g128811 = localSampleStochastic2D234_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8875_g128811 = localSampleStochastic3D263_g128859;
					#else
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#endif
					half4 Layer439_g128828 = staticSwitch8875_g128811;
					float4 weightedBlendVar31_g128828 = Weights52_g128828;
					float4 weightedBlend31_g128828 = ( weightedBlendVar31_g128828.x*Layer133_g128828 + weightedBlendVar31_g128828.y*Layer237_g128828 + weightedBlendVar31_g128828.z*Layer338_g128828 + weightedBlendVar31_g128828.w*Layer439_g128828 );
					half4 Terrain_AAAA_128851_g128811 = weightedBlend31_g128828;
					half4 Layer_1243_g128818 = Terrain_AAAA_128851_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8795_g128811 = weights_167362_g128811;
					#else
					float4 staticSwitch8795_g128811 = control_167362_g128811;
					#endif
					half4 Terrain_Weights_167709_g128811 = staticSwitch8795_g128811;
					half4 Weights52_g128834 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler238_g128863 = SS19_g128898;
					float4 temp_output_37_0_g128863 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128863 = temp_output_37_0_g128863;
					float3 temp_output_279_0_g128863 = Input_Position9197_g128811;
					half3 WorldPosition238_g128863 = temp_output_279_0_g128863;
					half4 localSamplePlanar2D238_g128863 = SamplePlanar2D( Texture238_g128863 , Sampler238_g128863 , Coords238_g128863 , WorldPosition238_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler246_g128863 = SS19_g128898;
					half4 Coords246_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition246_g128863 = temp_output_279_0_g128863;
					float3 temp_output_280_0_g128863 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128863 = temp_output_280_0_g128863;
					half4 localSamplePlanar3D246_g128863 = SamplePlanar3D( Texture246_g128863 , Sampler246_g128863 , Coords246_g128863 , WorldPosition246_g128863 , WorldNormal246_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler234_g128863 = SS19_g128898;
					float4 Coords234_g128863 = temp_output_37_0_g128863;
					float3 WorldPosition234_g128863 = temp_output_279_0_g128863;
					float4 localSampleStochastic2D234_g128863 = SampleStochastic2D( Texture234_g128863 , Sampler234_g128863 , Coords234_g128863 , WorldPosition234_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler263_g128863 = SS19_g128898;
					half4 Coords263_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition263_g128863 = temp_output_279_0_g128863;
					half3 WorldNormal263_g128863 = temp_output_280_0_g128863;
					half4 localSampleStochastic3D263_g128863 = SampleStochastic3D( Texture263_g128863 , Sampler263_g128863 , Coords263_g128863 , WorldPosition263_g128863 , WorldNormal263_g128863 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8972_g128811 = localSamplePlanar3D246_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8972_g128811 = localSampleStochastic2D234_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8972_g128811 = localSampleStochastic3D263_g128863;
					#else
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#endif
					half4 Layer133_g128834 = staticSwitch8972_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler238_g128869 = SS19_g128898;
					float4 temp_output_37_0_g128869 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128869 = temp_output_37_0_g128869;
					float3 temp_output_279_0_g128869 = Input_Position9197_g128811;
					half3 WorldPosition238_g128869 = temp_output_279_0_g128869;
					half4 localSamplePlanar2D238_g128869 = SamplePlanar2D( Texture238_g128869 , Sampler238_g128869 , Coords238_g128869 , WorldPosition238_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler246_g128869 = SS19_g128898;
					half4 Coords246_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition246_g128869 = temp_output_279_0_g128869;
					float3 temp_output_280_0_g128869 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128869 = temp_output_280_0_g128869;
					half4 localSamplePlanar3D246_g128869 = SamplePlanar3D( Texture246_g128869 , Sampler246_g128869 , Coords246_g128869 , WorldPosition246_g128869 , WorldNormal246_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler234_g128869 = SS19_g128898;
					float4 Coords234_g128869 = temp_output_37_0_g128869;
					float3 WorldPosition234_g128869 = temp_output_279_0_g128869;
					float4 localSampleStochastic2D234_g128869 = SampleStochastic2D( Texture234_g128869 , Sampler234_g128869 , Coords234_g128869 , WorldPosition234_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler263_g128869 = SS19_g128898;
					half4 Coords263_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition263_g128869 = temp_output_279_0_g128869;
					half3 WorldNormal263_g128869 = temp_output_280_0_g128869;
					half4 localSampleStochastic3D263_g128869 = SampleStochastic3D( Texture263_g128869 , Sampler263_g128869 , Coords263_g128869 , WorldPosition263_g128869 , WorldNormal263_g128869 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8973_g128811 = localSamplePlanar3D246_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8973_g128811 = localSampleStochastic2D234_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8973_g128811 = localSampleStochastic3D263_g128869;
					#else
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#endif
					half4 Layer237_g128834 = staticSwitch8973_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler238_g128870 = SS19_g128898;
					float4 temp_output_37_0_g128870 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128870 = temp_output_37_0_g128870;
					float3 temp_output_279_0_g128870 = Input_Position9197_g128811;
					half3 WorldPosition238_g128870 = temp_output_279_0_g128870;
					half4 localSamplePlanar2D238_g128870 = SamplePlanar2D( Texture238_g128870 , Sampler238_g128870 , Coords238_g128870 , WorldPosition238_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler246_g128870 = SS19_g128898;
					half4 Coords246_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition246_g128870 = temp_output_279_0_g128870;
					float3 temp_output_280_0_g128870 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128870 = temp_output_280_0_g128870;
					half4 localSamplePlanar3D246_g128870 = SamplePlanar3D( Texture246_g128870 , Sampler246_g128870 , Coords246_g128870 , WorldPosition246_g128870 , WorldNormal246_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler234_g128870 = SS19_g128898;
					float4 Coords234_g128870 = temp_output_37_0_g128870;
					float3 WorldPosition234_g128870 = temp_output_279_0_g128870;
					float4 localSampleStochastic2D234_g128870 = SampleStochastic2D( Texture234_g128870 , Sampler234_g128870 , Coords234_g128870 , WorldPosition234_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler263_g128870 = SS19_g128898;
					half4 Coords263_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition263_g128870 = temp_output_279_0_g128870;
					half3 WorldNormal263_g128870 = temp_output_280_0_g128870;
					half4 localSampleStochastic3D263_g128870 = SampleStochastic3D( Texture263_g128870 , Sampler263_g128870 , Coords263_g128870 , WorldPosition263_g128870 , WorldNormal263_g128870 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8974_g128811 = localSamplePlanar3D246_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8974_g128811 = localSampleStochastic2D234_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8974_g128811 = localSampleStochastic3D263_g128870;
					#else
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#endif
					half4 Layer338_g128834 = staticSwitch8974_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler238_g128871 = SS19_g128898;
					float4 temp_output_37_0_g128871 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128871 = temp_output_37_0_g128871;
					float3 temp_output_279_0_g128871 = Input_Position9197_g128811;
					half3 WorldPosition238_g128871 = temp_output_279_0_g128871;
					half4 localSamplePlanar2D238_g128871 = SamplePlanar2D( Texture238_g128871 , Sampler238_g128871 , Coords238_g128871 , WorldPosition238_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler246_g128871 = SS19_g128898;
					half4 Coords246_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition246_g128871 = temp_output_279_0_g128871;
					float3 temp_output_280_0_g128871 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128871 = temp_output_280_0_g128871;
					half4 localSamplePlanar3D246_g128871 = SamplePlanar3D( Texture246_g128871 , Sampler246_g128871 , Coords246_g128871 , WorldPosition246_g128871 , WorldNormal246_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler234_g128871 = SS19_g128898;
					float4 Coords234_g128871 = temp_output_37_0_g128871;
					float3 WorldPosition234_g128871 = temp_output_279_0_g128871;
					float4 localSampleStochastic2D234_g128871 = SampleStochastic2D( Texture234_g128871 , Sampler234_g128871 , Coords234_g128871 , WorldPosition234_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler263_g128871 = SS19_g128898;
					half4 Coords263_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition263_g128871 = temp_output_279_0_g128871;
					half3 WorldNormal263_g128871 = temp_output_280_0_g128871;
					half4 localSampleStochastic3D263_g128871 = SampleStochastic3D( Texture263_g128871 , Sampler263_g128871 , Coords263_g128871 , WorldPosition263_g128871 , WorldNormal263_g128871 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8975_g128811 = localSamplePlanar3D246_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8975_g128811 = localSampleStochastic2D234_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8975_g128811 = localSampleStochastic3D263_g128871;
					#else
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#endif
					half4 Layer439_g128834 = staticSwitch8975_g128811;
					float4 weightedBlendVar31_g128834 = Weights52_g128834;
					float4 weightedBlend31_g128834 = ( weightedBlendVar31_g128834.x*Layer133_g128834 + weightedBlendVar31_g128834.y*Layer237_g128834 + weightedBlendVar31_g128834.z*Layer338_g128834 + weightedBlendVar31_g128834.w*Layer439_g128834 );
					half4 Terrain_AAAA_168986_g128811 = weightedBlend31_g128834;
					half4 Layer_1644_g128818 = Terrain_AAAA_168986_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 + Layer_1644_g128818 );
					#else
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#endif
					half4 Blend_Albedo7468_g128811 = staticSwitch40_g128818;
					half4 Weights52_g128889 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128889 = _TerrainColor1;
					half4 Layer237_g128889 = _TerrainColor2;
					half4 Layer338_g128889 = _TerrainColor3;
					half4 Layer439_g128889 = _TerrainColor4;
					float4 weightedBlendVar31_g128889 = Weights52_g128889;
					float4 weightedBlend31_g128889 = ( weightedBlendVar31_g128889.x*Layer133_g128889 + weightedBlendVar31_g128889.y*Layer237_g128889 + weightedBlendVar31_g128889.z*Layer338_g128889 + weightedBlendVar31_g128889.w*Layer439_g128889 );
					half4 Terrain_Color_049349_g128811 = weightedBlend31_g128889;
					half4 Layer_045_g128894 = Terrain_Color_049349_g128811;
					half4 Weights52_g128890 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128890 = _TerrainColor5;
					half4 Layer237_g128890 = _TerrainColor6;
					half4 Layer338_g128890 = _TerrainColor7;
					half4 Layer439_g128890 = _TerrainColor8;
					float4 weightedBlendVar31_g128890 = Weights52_g128890;
					float4 weightedBlend31_g128890 = ( weightedBlendVar31_g128890.x*Layer133_g128890 + weightedBlendVar31_g128890.y*Layer237_g128890 + weightedBlendVar31_g128890.z*Layer338_g128890 + weightedBlendVar31_g128890.w*Layer439_g128890 );
					half4 Terrain_Color_089361_g128811 = weightedBlend31_g128890;
					half4 Layer_0810_g128894 = Terrain_Color_089361_g128811;
					half4 Weights52_g128891 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128891 = _TerrainColor9;
					half4 Layer237_g128891 = _TerrainColor10;
					half4 Layer338_g128891 = _TerrainColor11;
					half4 Layer439_g128891 = _TerrainColor12;
					float4 weightedBlendVar31_g128891 = Weights52_g128891;
					float4 weightedBlend31_g128891 = ( weightedBlendVar31_g128891.x*Layer133_g128891 + weightedBlendVar31_g128891.y*Layer237_g128891 + weightedBlendVar31_g128891.z*Layer338_g128891 + weightedBlendVar31_g128891.w*Layer439_g128891 );
					half4 Terrain_Color_129373_g128811 = weightedBlend31_g128891;
					half4 Layer_1243_g128894 = Terrain_Color_129373_g128811;
					half4 Weights52_g128892 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128892 = _TerrainColor13;
					half4 Layer237_g128892 = _TerrainColor14;
					half4 Layer338_g128892 = _TerrainColor15;
					half4 Layer439_g128892 = _TerrainColor16;
					float4 weightedBlendVar31_g128892 = Weights52_g128892;
					float4 weightedBlend31_g128892 = ( weightedBlendVar31_g128892.x*Layer133_g128892 + weightedBlendVar31_g128892.y*Layer237_g128892 + weightedBlendVar31_g128892.z*Layer338_g128892 + weightedBlendVar31_g128892.w*Layer439_g128892 );
					half4 Terrain_Color_169381_g128811 = weightedBlend31_g128892;
					half4 Layer_1644_g128894 = Terrain_Color_169381_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 + Layer_1644_g128894 );
					#else
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#endif
					half4 Blend_TerrainColor9387_g128811 = staticSwitch40_g128894;
					half3 Final_Albedo9144_g128811 = ( (Blend_Albedo7468_g128811).xyz * (Blend_TerrainColor9387_g128811).rgb * (_TerrainColor).rgb );
					half3 Local_Albedo9199_g128810 = Final_Albedo9144_g128811;
					float3 In_Albedo3_g128923 = Local_Albedo9199_g128810;
					float3 In_AlbedoRaw3_g128923 = Local_Albedo9199_g128810;
					float3x3 ase_worldToTangent = float3x3( WorldTangent, WorldBiTangent, WorldNormal );
					half4 Weights52_g128812 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128887) = _TerrainNormalTex1;
					float localFilterTexture29_g128902 = ( 0.0 );
					SamplerState SS29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128902 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128902 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128902 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128902 = SamplerDefault29_g128902;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128902 = SamplerDefault29_g128902;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128902 = SamplerPoint29_g128902;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128902 = SamplerLow29_g128902;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128902 = SamplerMedium29_g128902;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128902 = SamplerHigh29_g128902;
					#endif
					}
					SamplerState Sampler238_g128887 = SS29_g128902;
					float4 temp_output_37_0_g128887 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128887 = temp_output_37_0_g128887;
					float3 temp_output_279_0_g128887 = Input_Position9197_g128811;
					half3 WorldPosition238_g128887 = temp_output_279_0_g128887;
					half4 localSamplePlanar2D238_g128887 = SamplePlanar2D( Texture238_g128887 , Sampler238_g128887 , Coords238_g128887 , WorldPosition238_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128887) = _TerrainNormalTex1;
					SamplerState Sampler246_g128887 = SS29_g128902;
					half4 Coords246_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition246_g128887 = temp_output_279_0_g128887;
					float3 temp_output_280_0_g128887 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128887 = temp_output_280_0_g128887;
					half4 localSamplePlanar3D246_g128887 = SamplePlanar3D( Texture246_g128887 , Sampler246_g128887 , Coords246_g128887 , WorldPosition246_g128887 , WorldNormal246_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128887) = _TerrainNormalTex1;
					SamplerState Sampler234_g128887 = SS29_g128902;
					float4 Coords234_g128887 = temp_output_37_0_g128887;
					float3 WorldPosition234_g128887 = temp_output_279_0_g128887;
					float4 localSampleStochastic2D234_g128887 = SampleStochastic2D( Texture234_g128887 , Sampler234_g128887 , Coords234_g128887 , WorldPosition234_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128887) = _TerrainNormalTex1;
					SamplerState Sampler263_g128887 = SS29_g128902;
					half4 Coords263_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition263_g128887 = temp_output_279_0_g128887;
					half3 WorldNormal263_g128887 = temp_output_280_0_g128887;
					half4 localSampleStochastic3D263_g128887 = SampleStochastic3D( Texture263_g128887 , Sampler263_g128887 , Coords263_g128887 , WorldPosition263_g128887 , WorldNormal263_g128887 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8635_g128811 = localSamplePlanar3D246_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8635_g128811 = localSampleStochastic2D234_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8635_g128811 = localSampleStochastic3D263_g128887;
					#else
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#endif
					half4 Layer133_g128812 = staticSwitch8635_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128843) = _TerrainNormalTex2;
					SamplerState Sampler238_g128843 = SS29_g128902;
					float4 temp_output_37_0_g128843 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128843 = temp_output_37_0_g128843;
					float3 temp_output_279_0_g128843 = Input_Position9197_g128811;
					half3 WorldPosition238_g128843 = temp_output_279_0_g128843;
					half4 localSamplePlanar2D238_g128843 = SamplePlanar2D( Texture238_g128843 , Sampler238_g128843 , Coords238_g128843 , WorldPosition238_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128843) = _TerrainNormalTex2;
					SamplerState Sampler246_g128843 = SS29_g128902;
					half4 Coords246_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition246_g128843 = temp_output_279_0_g128843;
					float3 temp_output_280_0_g128843 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128843 = temp_output_280_0_g128843;
					half4 localSamplePlanar3D246_g128843 = SamplePlanar3D( Texture246_g128843 , Sampler246_g128843 , Coords246_g128843 , WorldPosition246_g128843 , WorldNormal246_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128843) = _TerrainNormalTex2;
					SamplerState Sampler234_g128843 = SS29_g128902;
					float4 Coords234_g128843 = temp_output_37_0_g128843;
					float3 WorldPosition234_g128843 = temp_output_279_0_g128843;
					float4 localSampleStochastic2D234_g128843 = SampleStochastic2D( Texture234_g128843 , Sampler234_g128843 , Coords234_g128843 , WorldPosition234_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128843) = _TerrainNormalTex2;
					SamplerState Sampler263_g128843 = SS29_g128902;
					half4 Coords263_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition263_g128843 = temp_output_279_0_g128843;
					half3 WorldNormal263_g128843 = temp_output_280_0_g128843;
					half4 localSampleStochastic3D263_g128843 = SampleStochastic3D( Texture263_g128843 , Sampler263_g128843 , Coords263_g128843 , WorldPosition263_g128843 , WorldNormal263_g128843 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8636_g128811 = localSamplePlanar3D246_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8636_g128811 = localSampleStochastic2D234_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8636_g128811 = localSampleStochastic3D263_g128843;
					#else
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#endif
					half4 Layer237_g128812 = staticSwitch8636_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128846) = _TerrainNormalTex3;
					SamplerState Sampler238_g128846 = SS29_g128902;
					float4 temp_output_37_0_g128846 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128846 = temp_output_37_0_g128846;
					float3 temp_output_279_0_g128846 = Input_Position9197_g128811;
					half3 WorldPosition238_g128846 = temp_output_279_0_g128846;
					half4 localSamplePlanar2D238_g128846 = SamplePlanar2D( Texture238_g128846 , Sampler238_g128846 , Coords238_g128846 , WorldPosition238_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128846) = _TerrainNormalTex3;
					SamplerState Sampler246_g128846 = SS29_g128902;
					half4 Coords246_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition246_g128846 = temp_output_279_0_g128846;
					float3 temp_output_280_0_g128846 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128846 = temp_output_280_0_g128846;
					half4 localSamplePlanar3D246_g128846 = SamplePlanar3D( Texture246_g128846 , Sampler246_g128846 , Coords246_g128846 , WorldPosition246_g128846 , WorldNormal246_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128846) = _TerrainNormalTex3;
					SamplerState Sampler234_g128846 = SS29_g128902;
					float4 Coords234_g128846 = temp_output_37_0_g128846;
					float3 WorldPosition234_g128846 = temp_output_279_0_g128846;
					float4 localSampleStochastic2D234_g128846 = SampleStochastic2D( Texture234_g128846 , Sampler234_g128846 , Coords234_g128846 , WorldPosition234_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128846) = _TerrainNormalTex3;
					SamplerState Sampler263_g128846 = SS29_g128902;
					half4 Coords263_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition263_g128846 = temp_output_279_0_g128846;
					half3 WorldNormal263_g128846 = temp_output_280_0_g128846;
					half4 localSampleStochastic3D263_g128846 = SampleStochastic3D( Texture263_g128846 , Sampler263_g128846 , Coords263_g128846 , WorldPosition263_g128846 , WorldNormal263_g128846 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8637_g128811 = localSamplePlanar3D246_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8637_g128811 = localSampleStochastic2D234_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8637_g128811 = localSampleStochastic3D263_g128846;
					#else
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#endif
					half4 Layer338_g128812 = staticSwitch8637_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128848) = _TerrainNormalTex4;
					SamplerState Sampler238_g128848 = SS29_g128902;
					float4 temp_output_37_0_g128848 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128848 = temp_output_37_0_g128848;
					float3 temp_output_279_0_g128848 = Input_Position9197_g128811;
					half3 WorldPosition238_g128848 = temp_output_279_0_g128848;
					half4 localSamplePlanar2D238_g128848 = SamplePlanar2D( Texture238_g128848 , Sampler238_g128848 , Coords238_g128848 , WorldPosition238_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128848) = _TerrainNormalTex4;
					SamplerState Sampler246_g128848 = SS29_g128902;
					half4 Coords246_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition246_g128848 = temp_output_279_0_g128848;
					float3 temp_output_280_0_g128848 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128848 = temp_output_280_0_g128848;
					half4 localSamplePlanar3D246_g128848 = SamplePlanar3D( Texture246_g128848 , Sampler246_g128848 , Coords246_g128848 , WorldPosition246_g128848 , WorldNormal246_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128848) = _TerrainNormalTex4;
					SamplerState Sampler234_g128848 = SS29_g128902;
					float4 Coords234_g128848 = temp_output_37_0_g128848;
					float3 WorldPosition234_g128848 = temp_output_279_0_g128848;
					float4 localSampleStochastic2D234_g128848 = SampleStochastic2D( Texture234_g128848 , Sampler234_g128848 , Coords234_g128848 , WorldPosition234_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128848) = _TerrainNormalTex4;
					SamplerState Sampler263_g128848 = SS29_g128902;
					half4 Coords263_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition263_g128848 = temp_output_279_0_g128848;
					half3 WorldNormal263_g128848 = temp_output_280_0_g128848;
					half4 localSampleStochastic3D263_g128848 = SampleStochastic3D( Texture263_g128848 , Sampler263_g128848 , Coords263_g128848 , WorldPosition263_g128848 , WorldNormal263_g128848 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8638_g128811 = localSamplePlanar3D246_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8638_g128811 = localSampleStochastic2D234_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8638_g128811 = localSampleStochastic3D263_g128848;
					#else
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#endif
					half4 Layer439_g128812 = staticSwitch8638_g128811;
					float4 weightedBlendVar31_g128812 = Weights52_g128812;
					float4 weightedBlend31_g128812 = ( weightedBlendVar31_g128812.x*Layer133_g128812 + weightedBlendVar31_g128812.y*Layer237_g128812 + weightedBlendVar31_g128812.z*Layer338_g128812 + weightedBlendVar31_g128812.w*Layer439_g128812 );
					half4 Terrain_B_047202_g128811 = weightedBlend31_g128812;
					half4 Layer_045_g128817 = Terrain_B_047202_g128811;
					half4 Weights52_g128823 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128852) = _TerrainNormalTex5;
					SamplerState Sampler238_g128852 = SS29_g128902;
					float4 temp_output_37_0_g128852 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128852 = temp_output_37_0_g128852;
					float3 temp_output_279_0_g128852 = Input_Position9197_g128811;
					half3 WorldPosition238_g128852 = temp_output_279_0_g128852;
					half4 localSamplePlanar2D238_g128852 = SamplePlanar2D( Texture238_g128852 , Sampler238_g128852 , Coords238_g128852 , WorldPosition238_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128852) = _TerrainNormalTex5;
					SamplerState Sampler246_g128852 = SS29_g128902;
					half4 Coords246_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition246_g128852 = temp_output_279_0_g128852;
					float3 temp_output_280_0_g128852 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128852 = temp_output_280_0_g128852;
					half4 localSamplePlanar3D246_g128852 = SamplePlanar3D( Texture246_g128852 , Sampler246_g128852 , Coords246_g128852 , WorldPosition246_g128852 , WorldNormal246_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128852) = _TerrainNormalTex5;
					SamplerState Sampler234_g128852 = SS29_g128902;
					float4 Coords234_g128852 = temp_output_37_0_g128852;
					float3 WorldPosition234_g128852 = temp_output_279_0_g128852;
					float4 localSampleStochastic2D234_g128852 = SampleStochastic2D( Texture234_g128852 , Sampler234_g128852 , Coords234_g128852 , WorldPosition234_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128852) = _TerrainNormalTex5;
					SamplerState Sampler263_g128852 = SS29_g128902;
					half4 Coords263_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition263_g128852 = temp_output_279_0_g128852;
					half3 WorldNormal263_g128852 = temp_output_280_0_g128852;
					half4 localSampleStochastic3D263_g128852 = SampleStochastic3D( Texture263_g128852 , Sampler263_g128852 , Coords263_g128852 , WorldPosition263_g128852 , WorldNormal263_g128852 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8686_g128811 = localSamplePlanar3D246_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8686_g128811 = localSampleStochastic2D234_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8686_g128811 = localSampleStochastic3D263_g128852;
					#else
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#endif
					half4 Layer133_g128823 = staticSwitch8686_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128881) = _TerrainNormalTex6;
					SamplerState Sampler238_g128881 = SS29_g128902;
					float4 temp_output_37_0_g128881 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128881 = temp_output_37_0_g128881;
					float3 temp_output_279_0_g128881 = Input_Position9197_g128811;
					half3 WorldPosition238_g128881 = temp_output_279_0_g128881;
					half4 localSamplePlanar2D238_g128881 = SamplePlanar2D( Texture238_g128881 , Sampler238_g128881 , Coords238_g128881 , WorldPosition238_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128881) = _TerrainNormalTex6;
					SamplerState Sampler246_g128881 = SS29_g128902;
					half4 Coords246_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition246_g128881 = temp_output_279_0_g128881;
					float3 temp_output_280_0_g128881 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128881 = temp_output_280_0_g128881;
					half4 localSamplePlanar3D246_g128881 = SamplePlanar3D( Texture246_g128881 , Sampler246_g128881 , Coords246_g128881 , WorldPosition246_g128881 , WorldNormal246_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128881) = _TerrainNormalTex6;
					SamplerState Sampler234_g128881 = SS29_g128902;
					float4 Coords234_g128881 = temp_output_37_0_g128881;
					float3 WorldPosition234_g128881 = temp_output_279_0_g128881;
					float4 localSampleStochastic2D234_g128881 = SampleStochastic2D( Texture234_g128881 , Sampler234_g128881 , Coords234_g128881 , WorldPosition234_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128881) = _TerrainNormalTex6;
					SamplerState Sampler263_g128881 = SS29_g128902;
					half4 Coords263_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition263_g128881 = temp_output_279_0_g128881;
					half3 WorldNormal263_g128881 = temp_output_280_0_g128881;
					half4 localSampleStochastic3D263_g128881 = SampleStochastic3D( Texture263_g128881 , Sampler263_g128881 , Coords263_g128881 , WorldPosition263_g128881 , WorldNormal263_g128881 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8687_g128811 = localSamplePlanar3D246_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8687_g128811 = localSampleStochastic2D234_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8687_g128811 = localSampleStochastic3D263_g128881;
					#else
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#endif
					half4 Layer237_g128823 = staticSwitch8687_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128882) = _TerrainNormalTex7;
					SamplerState Sampler238_g128882 = SS29_g128902;
					float4 temp_output_37_0_g128882 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128882 = temp_output_37_0_g128882;
					float3 temp_output_279_0_g128882 = Input_Position9197_g128811;
					half3 WorldPosition238_g128882 = temp_output_279_0_g128882;
					half4 localSamplePlanar2D238_g128882 = SamplePlanar2D( Texture238_g128882 , Sampler238_g128882 , Coords238_g128882 , WorldPosition238_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128882) = _TerrainNormalTex7;
					SamplerState Sampler246_g128882 = SS29_g128902;
					half4 Coords246_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition246_g128882 = temp_output_279_0_g128882;
					float3 temp_output_280_0_g128882 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128882 = temp_output_280_0_g128882;
					half4 localSamplePlanar3D246_g128882 = SamplePlanar3D( Texture246_g128882 , Sampler246_g128882 , Coords246_g128882 , WorldPosition246_g128882 , WorldNormal246_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128882) = _TerrainNormalTex7;
					SamplerState Sampler234_g128882 = SS29_g128902;
					float4 Coords234_g128882 = temp_output_37_0_g128882;
					float3 WorldPosition234_g128882 = temp_output_279_0_g128882;
					float4 localSampleStochastic2D234_g128882 = SampleStochastic2D( Texture234_g128882 , Sampler234_g128882 , Coords234_g128882 , WorldPosition234_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128882) = _TerrainNormalTex7;
					SamplerState Sampler263_g128882 = SS29_g128902;
					half4 Coords263_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition263_g128882 = temp_output_279_0_g128882;
					half3 WorldNormal263_g128882 = temp_output_280_0_g128882;
					half4 localSampleStochastic3D263_g128882 = SampleStochastic3D( Texture263_g128882 , Sampler263_g128882 , Coords263_g128882 , WorldPosition263_g128882 , WorldNormal263_g128882 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8688_g128811 = localSamplePlanar3D246_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8688_g128811 = localSampleStochastic2D234_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8688_g128811 = localSampleStochastic3D263_g128882;
					#else
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#endif
					half4 Layer338_g128823 = staticSwitch8688_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128883) = _TerrainNormalTex8;
					SamplerState Sampler238_g128883 = SS29_g128902;
					float4 temp_output_37_0_g128883 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128883 = temp_output_37_0_g128883;
					float3 temp_output_279_0_g128883 = Input_Position9197_g128811;
					half3 WorldPosition238_g128883 = temp_output_279_0_g128883;
					half4 localSamplePlanar2D238_g128883 = SamplePlanar2D( Texture238_g128883 , Sampler238_g128883 , Coords238_g128883 , WorldPosition238_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128883) = _TerrainNormalTex8;
					SamplerState Sampler246_g128883 = SS29_g128902;
					half4 Coords246_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition246_g128883 = temp_output_279_0_g128883;
					float3 temp_output_280_0_g128883 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128883 = temp_output_280_0_g128883;
					half4 localSamplePlanar3D246_g128883 = SamplePlanar3D( Texture246_g128883 , Sampler246_g128883 , Coords246_g128883 , WorldPosition246_g128883 , WorldNormal246_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128883) = _TerrainNormalTex8;
					SamplerState Sampler234_g128883 = SS29_g128902;
					float4 Coords234_g128883 = temp_output_37_0_g128883;
					float3 WorldPosition234_g128883 = temp_output_279_0_g128883;
					float4 localSampleStochastic2D234_g128883 = SampleStochastic2D( Texture234_g128883 , Sampler234_g128883 , Coords234_g128883 , WorldPosition234_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128883) = _TerrainNormalTex8;
					SamplerState Sampler263_g128883 = SS29_g128902;
					half4 Coords263_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition263_g128883 = temp_output_279_0_g128883;
					half3 WorldNormal263_g128883 = temp_output_280_0_g128883;
					half4 localSampleStochastic3D263_g128883 = SampleStochastic3D( Texture263_g128883 , Sampler263_g128883 , Coords263_g128883 , WorldPosition263_g128883 , WorldNormal263_g128883 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8689_g128811 = localSamplePlanar3D246_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8689_g128811 = localSampleStochastic2D234_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8689_g128811 = localSampleStochastic3D263_g128883;
					#else
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#endif
					half4 Layer439_g128823 = staticSwitch8689_g128811;
					float4 weightedBlendVar31_g128823 = Weights52_g128823;
					float4 weightedBlend31_g128823 = ( weightedBlendVar31_g128823.x*Layer133_g128823 + weightedBlendVar31_g128823.y*Layer237_g128823 + weightedBlendVar31_g128823.z*Layer338_g128823 + weightedBlendVar31_g128823.w*Layer439_g128823 );
					half4 Terrain_B_088684_g128811 = weightedBlend31_g128823;
					half4 Layer_0810_g128817 = Terrain_B_088684_g128811;
					half4 Weights52_g128829 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128855) = _TerrainNormalTex9;
					SamplerState Sampler238_g128855 = SS29_g128902;
					float4 temp_output_37_0_g128855 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128855 = temp_output_37_0_g128855;
					float3 temp_output_279_0_g128855 = Input_Position9197_g128811;
					half3 WorldPosition238_g128855 = temp_output_279_0_g128855;
					half4 localSamplePlanar2D238_g128855 = SamplePlanar2D( Texture238_g128855 , Sampler238_g128855 , Coords238_g128855 , WorldPosition238_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128855) = _TerrainNormalTex9;
					SamplerState Sampler246_g128855 = SS29_g128902;
					half4 Coords246_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition246_g128855 = temp_output_279_0_g128855;
					float3 temp_output_280_0_g128855 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128855 = temp_output_280_0_g128855;
					half4 localSamplePlanar3D246_g128855 = SamplePlanar3D( Texture246_g128855 , Sampler246_g128855 , Coords246_g128855 , WorldPosition246_g128855 , WorldNormal246_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128855) = _TerrainNormalTex9;
					SamplerState Sampler234_g128855 = SS29_g128902;
					float4 Coords234_g128855 = temp_output_37_0_g128855;
					float3 WorldPosition234_g128855 = temp_output_279_0_g128855;
					float4 localSampleStochastic2D234_g128855 = SampleStochastic2D( Texture234_g128855 , Sampler234_g128855 , Coords234_g128855 , WorldPosition234_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128855) = _TerrainNormalTex9;
					SamplerState Sampler263_g128855 = SS29_g128902;
					half4 Coords263_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition263_g128855 = temp_output_279_0_g128855;
					half3 WorldNormal263_g128855 = temp_output_280_0_g128855;
					half4 localSampleStochastic3D263_g128855 = SampleStochastic3D( Texture263_g128855 , Sampler263_g128855 , Coords263_g128855 , WorldPosition263_g128855 , WorldNormal263_g128855 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8849_g128811 = localSamplePlanar3D246_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8849_g128811 = localSampleStochastic2D234_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8849_g128811 = localSampleStochastic3D263_g128855;
					#else
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#endif
					half4 Layer133_g128829 = staticSwitch8849_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128860) = _TerrainNormalTex10;
					SamplerState Sampler238_g128860 = SS29_g128902;
					float4 temp_output_37_0_g128860 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128860 = temp_output_37_0_g128860;
					float3 temp_output_279_0_g128860 = Input_Position9197_g128811;
					half3 WorldPosition238_g128860 = temp_output_279_0_g128860;
					half4 localSamplePlanar2D238_g128860 = SamplePlanar2D( Texture238_g128860 , Sampler238_g128860 , Coords238_g128860 , WorldPosition238_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128860) = _TerrainNormalTex10;
					SamplerState Sampler246_g128860 = SS29_g128902;
					half4 Coords246_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition246_g128860 = temp_output_279_0_g128860;
					float3 temp_output_280_0_g128860 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128860 = temp_output_280_0_g128860;
					half4 localSamplePlanar3D246_g128860 = SamplePlanar3D( Texture246_g128860 , Sampler246_g128860 , Coords246_g128860 , WorldPosition246_g128860 , WorldNormal246_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128860) = _TerrainNormalTex10;
					SamplerState Sampler234_g128860 = SS29_g128902;
					float4 Coords234_g128860 = temp_output_37_0_g128860;
					float3 WorldPosition234_g128860 = temp_output_279_0_g128860;
					float4 localSampleStochastic2D234_g128860 = SampleStochastic2D( Texture234_g128860 , Sampler234_g128860 , Coords234_g128860 , WorldPosition234_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128860) = _TerrainNormalTex10;
					SamplerState Sampler263_g128860 = SS29_g128902;
					half4 Coords263_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition263_g128860 = temp_output_279_0_g128860;
					half3 WorldNormal263_g128860 = temp_output_280_0_g128860;
					half4 localSampleStochastic3D263_g128860 = SampleStochastic3D( Texture263_g128860 , Sampler263_g128860 , Coords263_g128860 , WorldPosition263_g128860 , WorldNormal263_g128860 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8876_g128811 = localSamplePlanar3D246_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8876_g128811 = localSampleStochastic2D234_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8876_g128811 = localSampleStochastic3D263_g128860;
					#else
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#endif
					half4 Layer237_g128829 = staticSwitch8876_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128861) = _TerrainNormalTex11;
					SamplerState Sampler238_g128861 = SS29_g128902;
					float4 temp_output_37_0_g128861 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128861 = temp_output_37_0_g128861;
					float3 temp_output_279_0_g128861 = Input_Position9197_g128811;
					half3 WorldPosition238_g128861 = temp_output_279_0_g128861;
					half4 localSamplePlanar2D238_g128861 = SamplePlanar2D( Texture238_g128861 , Sampler238_g128861 , Coords238_g128861 , WorldPosition238_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128861) = _TerrainNormalTex11;
					SamplerState Sampler246_g128861 = SS29_g128902;
					half4 Coords246_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition246_g128861 = temp_output_279_0_g128861;
					float3 temp_output_280_0_g128861 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128861 = temp_output_280_0_g128861;
					half4 localSamplePlanar3D246_g128861 = SamplePlanar3D( Texture246_g128861 , Sampler246_g128861 , Coords246_g128861 , WorldPosition246_g128861 , WorldNormal246_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128861) = _TerrainNormalTex11;
					SamplerState Sampler234_g128861 = SS29_g128902;
					float4 Coords234_g128861 = temp_output_37_0_g128861;
					float3 WorldPosition234_g128861 = temp_output_279_0_g128861;
					float4 localSampleStochastic2D234_g128861 = SampleStochastic2D( Texture234_g128861 , Sampler234_g128861 , Coords234_g128861 , WorldPosition234_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128861) = _TerrainNormalTex11;
					SamplerState Sampler263_g128861 = SS29_g128902;
					half4 Coords263_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition263_g128861 = temp_output_279_0_g128861;
					half3 WorldNormal263_g128861 = temp_output_280_0_g128861;
					half4 localSampleStochastic3D263_g128861 = SampleStochastic3D( Texture263_g128861 , Sampler263_g128861 , Coords263_g128861 , WorldPosition263_g128861 , WorldNormal263_g128861 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8850_g128811 = localSamplePlanar3D246_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8850_g128811 = localSampleStochastic2D234_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8850_g128811 = localSampleStochastic3D263_g128861;
					#else
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#endif
					half4 Layer338_g128829 = staticSwitch8850_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128862) = _TerrainNormalTex12;
					SamplerState Sampler238_g128862 = SS29_g128902;
					float4 temp_output_37_0_g128862 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128862 = temp_output_37_0_g128862;
					float3 temp_output_279_0_g128862 = Input_Position9197_g128811;
					half3 WorldPosition238_g128862 = temp_output_279_0_g128862;
					half4 localSamplePlanar2D238_g128862 = SamplePlanar2D( Texture238_g128862 , Sampler238_g128862 , Coords238_g128862 , WorldPosition238_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128862) = _TerrainNormalTex12;
					SamplerState Sampler246_g128862 = SS29_g128902;
					half4 Coords246_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition246_g128862 = temp_output_279_0_g128862;
					float3 temp_output_280_0_g128862 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128862 = temp_output_280_0_g128862;
					half4 localSamplePlanar3D246_g128862 = SamplePlanar3D( Texture246_g128862 , Sampler246_g128862 , Coords246_g128862 , WorldPosition246_g128862 , WorldNormal246_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128862) = _TerrainNormalTex12;
					SamplerState Sampler234_g128862 = SS29_g128902;
					float4 Coords234_g128862 = temp_output_37_0_g128862;
					float3 WorldPosition234_g128862 = temp_output_279_0_g128862;
					float4 localSampleStochastic2D234_g128862 = SampleStochastic2D( Texture234_g128862 , Sampler234_g128862 , Coords234_g128862 , WorldPosition234_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128862) = _TerrainNormalTex12;
					SamplerState Sampler263_g128862 = SS29_g128902;
					half4 Coords263_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition263_g128862 = temp_output_279_0_g128862;
					half3 WorldNormal263_g128862 = temp_output_280_0_g128862;
					half4 localSampleStochastic3D263_g128862 = SampleStochastic3D( Texture263_g128862 , Sampler263_g128862 , Coords263_g128862 , WorldPosition263_g128862 , WorldNormal263_g128862 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8877_g128811 = localSamplePlanar3D246_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8877_g128811 = localSampleStochastic2D234_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8877_g128811 = localSampleStochastic3D263_g128862;
					#else
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#endif
					half4 Layer439_g128829 = staticSwitch8877_g128811;
					float4 weightedBlendVar31_g128829 = Weights52_g128829;
					float4 weightedBlend31_g128829 = ( weightedBlendVar31_g128829.x*Layer133_g128829 + weightedBlendVar31_g128829.y*Layer237_g128829 + weightedBlendVar31_g128829.z*Layer338_g128829 + weightedBlendVar31_g128829.w*Layer439_g128829 );
					half4 Terrain_B_128865_g128811 = weightedBlend31_g128829;
					half4 Layer_1243_g128817 = Terrain_B_128865_g128811;
					half4 Weights52_g128835 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128865) = _TerrainNormalTex13;
					SamplerState Sampler238_g128865 = SS29_g128902;
					float4 temp_output_37_0_g128865 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128865 = temp_output_37_0_g128865;
					float3 temp_output_279_0_g128865 = Input_Position9197_g128811;
					half3 WorldPosition238_g128865 = temp_output_279_0_g128865;
					half4 localSamplePlanar2D238_g128865 = SamplePlanar2D( Texture238_g128865 , Sampler238_g128865 , Coords238_g128865 , WorldPosition238_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128865) = _TerrainNormalTex13;
					SamplerState Sampler246_g128865 = SS29_g128902;
					half4 Coords246_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition246_g128865 = temp_output_279_0_g128865;
					float3 temp_output_280_0_g128865 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128865 = temp_output_280_0_g128865;
					half4 localSamplePlanar3D246_g128865 = SamplePlanar3D( Texture246_g128865 , Sampler246_g128865 , Coords246_g128865 , WorldPosition246_g128865 , WorldNormal246_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128865) = _TerrainNormalTex13;
					SamplerState Sampler234_g128865 = SS29_g128902;
					float4 Coords234_g128865 = temp_output_37_0_g128865;
					float3 WorldPosition234_g128865 = temp_output_279_0_g128865;
					float4 localSampleStochastic2D234_g128865 = SampleStochastic2D( Texture234_g128865 , Sampler234_g128865 , Coords234_g128865 , WorldPosition234_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128865) = _TerrainNormalTex13;
					SamplerState Sampler263_g128865 = SS29_g128902;
					half4 Coords263_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition263_g128865 = temp_output_279_0_g128865;
					half3 WorldNormal263_g128865 = temp_output_280_0_g128865;
					half4 localSampleStochastic3D263_g128865 = SampleStochastic3D( Texture263_g128865 , Sampler263_g128865 , Coords263_g128865 , WorldPosition263_g128865 , WorldNormal263_g128865 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8991_g128811 = localSamplePlanar3D246_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8991_g128811 = localSampleStochastic2D234_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8991_g128811 = localSampleStochastic3D263_g128865;
					#else
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#endif
					half4 Layer133_g128835 = staticSwitch8991_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128872) = _TerrainNormalTex14;
					SamplerState Sampler238_g128872 = SS29_g128902;
					float4 temp_output_37_0_g128872 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128872 = temp_output_37_0_g128872;
					float3 temp_output_279_0_g128872 = Input_Position9197_g128811;
					half3 WorldPosition238_g128872 = temp_output_279_0_g128872;
					half4 localSamplePlanar2D238_g128872 = SamplePlanar2D( Texture238_g128872 , Sampler238_g128872 , Coords238_g128872 , WorldPosition238_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128872) = _TerrainNormalTex14;
					SamplerState Sampler246_g128872 = SS29_g128902;
					half4 Coords246_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition246_g128872 = temp_output_279_0_g128872;
					float3 temp_output_280_0_g128872 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128872 = temp_output_280_0_g128872;
					half4 localSamplePlanar3D246_g128872 = SamplePlanar3D( Texture246_g128872 , Sampler246_g128872 , Coords246_g128872 , WorldPosition246_g128872 , WorldNormal246_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128872) = _TerrainNormalTex14;
					SamplerState Sampler234_g128872 = SS29_g128902;
					float4 Coords234_g128872 = temp_output_37_0_g128872;
					float3 WorldPosition234_g128872 = temp_output_279_0_g128872;
					float4 localSampleStochastic2D234_g128872 = SampleStochastic2D( Texture234_g128872 , Sampler234_g128872 , Coords234_g128872 , WorldPosition234_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128872) = _TerrainNormalTex14;
					SamplerState Sampler263_g128872 = SS29_g128902;
					half4 Coords263_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition263_g128872 = temp_output_279_0_g128872;
					half3 WorldNormal263_g128872 = temp_output_280_0_g128872;
					half4 localSampleStochastic3D263_g128872 = SampleStochastic3D( Texture263_g128872 , Sampler263_g128872 , Coords263_g128872 , WorldPosition263_g128872 , WorldNormal263_g128872 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8990_g128811 = localSamplePlanar3D246_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8990_g128811 = localSampleStochastic2D234_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8990_g128811 = localSampleStochastic3D263_g128872;
					#else
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#endif
					half4 Layer237_g128835 = staticSwitch8990_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128873) = _TerrainNormalTex15;
					SamplerState Sampler238_g128873 = SS29_g128902;
					float4 temp_output_37_0_g128873 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128873 = temp_output_37_0_g128873;
					float3 temp_output_279_0_g128873 = Input_Position9197_g128811;
					half3 WorldPosition238_g128873 = temp_output_279_0_g128873;
					half4 localSamplePlanar2D238_g128873 = SamplePlanar2D( Texture238_g128873 , Sampler238_g128873 , Coords238_g128873 , WorldPosition238_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128873) = _TerrainNormalTex15;
					SamplerState Sampler246_g128873 = SS29_g128902;
					half4 Coords246_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition246_g128873 = temp_output_279_0_g128873;
					float3 temp_output_280_0_g128873 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128873 = temp_output_280_0_g128873;
					half4 localSamplePlanar3D246_g128873 = SamplePlanar3D( Texture246_g128873 , Sampler246_g128873 , Coords246_g128873 , WorldPosition246_g128873 , WorldNormal246_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128873) = _TerrainNormalTex15;
					SamplerState Sampler234_g128873 = SS29_g128902;
					float4 Coords234_g128873 = temp_output_37_0_g128873;
					float3 WorldPosition234_g128873 = temp_output_279_0_g128873;
					float4 localSampleStochastic2D234_g128873 = SampleStochastic2D( Texture234_g128873 , Sampler234_g128873 , Coords234_g128873 , WorldPosition234_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128873) = _TerrainNormalTex15;
					SamplerState Sampler263_g128873 = SS29_g128902;
					half4 Coords263_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition263_g128873 = temp_output_279_0_g128873;
					half3 WorldNormal263_g128873 = temp_output_280_0_g128873;
					half4 localSampleStochastic3D263_g128873 = SampleStochastic3D( Texture263_g128873 , Sampler263_g128873 , Coords263_g128873 , WorldPosition263_g128873 , WorldNormal263_g128873 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8989_g128811 = localSamplePlanar3D246_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8989_g128811 = localSampleStochastic2D234_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8989_g128811 = localSampleStochastic3D263_g128873;
					#else
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#endif
					half4 Layer338_g128835 = staticSwitch8989_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128874) = _TerrainNormalTex16;
					SamplerState Sampler238_g128874 = SS29_g128902;
					float4 temp_output_37_0_g128874 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128874 = temp_output_37_0_g128874;
					float3 temp_output_279_0_g128874 = Input_Position9197_g128811;
					half3 WorldPosition238_g128874 = temp_output_279_0_g128874;
					half4 localSamplePlanar2D238_g128874 = SamplePlanar2D( Texture238_g128874 , Sampler238_g128874 , Coords238_g128874 , WorldPosition238_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128874) = _TerrainNormalTex16;
					SamplerState Sampler246_g128874 = SS29_g128902;
					half4 Coords246_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition246_g128874 = temp_output_279_0_g128874;
					float3 temp_output_280_0_g128874 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128874 = temp_output_280_0_g128874;
					half4 localSamplePlanar3D246_g128874 = SamplePlanar3D( Texture246_g128874 , Sampler246_g128874 , Coords246_g128874 , WorldPosition246_g128874 , WorldNormal246_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128874) = _TerrainNormalTex16;
					SamplerState Sampler234_g128874 = SS29_g128902;
					float4 Coords234_g128874 = temp_output_37_0_g128874;
					float3 WorldPosition234_g128874 = temp_output_279_0_g128874;
					float4 localSampleStochastic2D234_g128874 = SampleStochastic2D( Texture234_g128874 , Sampler234_g128874 , Coords234_g128874 , WorldPosition234_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128874) = _TerrainNormalTex16;
					SamplerState Sampler263_g128874 = SS29_g128902;
					half4 Coords263_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition263_g128874 = temp_output_279_0_g128874;
					half3 WorldNormal263_g128874 = temp_output_280_0_g128874;
					half4 localSampleStochastic3D263_g128874 = SampleStochastic3D( Texture263_g128874 , Sampler263_g128874 , Coords263_g128874 , WorldPosition263_g128874 , WorldNormal263_g128874 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8988_g128811 = localSamplePlanar3D246_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8988_g128811 = localSampleStochastic2D234_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8988_g128811 = localSampleStochastic3D263_g128874;
					#else
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#endif
					half4 Layer439_g128835 = staticSwitch8988_g128811;
					float4 weightedBlendVar31_g128835 = Weights52_g128835;
					float4 weightedBlend31_g128835 = ( weightedBlendVar31_g128835.x*Layer133_g128835 + weightedBlendVar31_g128835.y*Layer237_g128835 + weightedBlendVar31_g128835.z*Layer338_g128835 + weightedBlendVar31_g128835.w*Layer439_g128835 );
					half4 Terrain_B_168987_g128811 = weightedBlend31_g128835;
					half4 Layer_1644_g128817 = Terrain_B_168987_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 + Layer_1644_g128817 );
					#else
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#endif
					half4 Blend_Normal7512_g128811 = staticSwitch40_g128817;
					half4 Normal_Packed45_g128896 = Blend_Normal7512_g128811;
					float2 appendResult58_g128896 = (float2(( (Normal_Packed45_g128896).x * (Normal_Packed45_g128896).w ) , (Normal_Packed45_g128896).y));
					half2 Normal_Default50_g128896 = appendResult58_g128896;
					half2 Normal_ASTC41_g128896 = (Normal_Packed45_g128896).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128896 = Normal_ASTC41_g128896;
					#else
					float2 staticSwitch38_g128896 = Normal_Default50_g128896;
					#endif
					half2 Normal_NO_DTX544_g128896 = (Normal_Packed45_g128896).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128896 = Normal_NO_DTX544_g128896;
					#else
					float2 staticSwitch37_g128896 = staticSwitch38_g128896;
					#endif
					half4 Weights52_g128813 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128813 = temp_output_6970_0_g128811;
					half4 Layer237_g128813 = temp_output_6977_0_g128811;
					half4 Layer338_g128813 = temp_output_6978_0_g128811;
					half4 Layer439_g128813 = temp_output_6983_0_g128811;
					float4 weightedBlendVar31_g128813 = Weights52_g128813;
					float4 weightedBlend31_g128813 = ( weightedBlendVar31_g128813.x*Layer133_g128813 + weightedBlendVar31_g128813.y*Layer237_g128813 + weightedBlendVar31_g128813.z*Layer338_g128813 + weightedBlendVar31_g128813.w*Layer439_g128813 );
					half4 Terrain_Shaders_047203_g128811 = weightedBlend31_g128813;
					half4 Layer_045_g128819 = Terrain_Shaders_047203_g128811;
					half4 Weights52_g128825 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128825 = temp_output_8714_0_g128811;
					half4 Layer237_g128825 = temp_output_8721_0_g128811;
					half4 Layer338_g128825 = temp_output_8724_0_g128811;
					half4 Layer439_g128825 = temp_output_8727_0_g128811;
					float4 weightedBlendVar31_g128825 = Weights52_g128825;
					float4 weightedBlend31_g128825 = ( weightedBlendVar31_g128825.x*Layer133_g128825 + weightedBlendVar31_g128825.y*Layer237_g128825 + weightedBlendVar31_g128825.z*Layer338_g128825 + weightedBlendVar31_g128825.w*Layer439_g128825 );
					half4 Terrain_Shaders_088730_g128811 = weightedBlend31_g128825;
					half4 Layer_0810_g128819 = Terrain_Shaders_088730_g128811;
					half4 Weights52_g128831 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128831 = temp_output_8815_0_g128811;
					half4 Layer237_g128831 = temp_output_8818_0_g128811;
					half4 Layer338_g128831 = temp_output_8819_0_g128811;
					half4 Layer439_g128831 = temp_output_8820_0_g128811;
					float4 weightedBlendVar31_g128831 = Weights52_g128831;
					float4 weightedBlend31_g128831 = ( weightedBlendVar31_g128831.x*Layer133_g128831 + weightedBlendVar31_g128831.y*Layer237_g128831 + weightedBlendVar31_g128831.z*Layer338_g128831 + weightedBlendVar31_g128831.w*Layer439_g128831 );
					half4 Terrain_Shaders_128871_g128811 = weightedBlend31_g128831;
					half4 Layer_1243_g128819 = Terrain_Shaders_128871_g128811;
					half4 Weights52_g128837 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128837 = temp_output_8931_0_g128811;
					half4 Layer237_g128837 = temp_output_8934_0_g128811;
					half4 Layer338_g128837 = temp_output_8935_0_g128811;
					half4 Layer439_g128837 = temp_output_8936_0_g128811;
					float4 weightedBlendVar31_g128837 = Weights52_g128837;
					float4 weightedBlend31_g128837 = ( weightedBlendVar31_g128837.x*Layer133_g128837 + weightedBlendVar31_g128837.y*Layer237_g128837 + weightedBlendVar31_g128837.z*Layer338_g128837 + weightedBlendVar31_g128837.w*Layer439_g128837 );
					half4 Terrain_Shaders_169014_g128811 = weightedBlend31_g128837;
					half4 Layer_1644_g128819 = Terrain_Shaders_169014_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 + Layer_1644_g128819 );
					#else
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#endif
					half4 Blend_Shaders7420_g128811 = staticSwitch40_g128819;
					half4 Normal_Packed45_g128895 = Blend_Shaders7420_g128811;
					half2 Normal_NO_DTX544_g128895 = (Normal_Packed45_g128895).wy;
					#ifdef TVE_TERRAIN_PACKED
					float2 staticSwitch9080_g128811 = (Normal_NO_DTX544_g128895*2.0 + -1.0);
					#else
					float2 staticSwitch9080_g128811 = (staticSwitch37_g128896*2.0 + -1.0);
					#endif
					half4 Weights52_g128814 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128814 = _TerrainParams1;
					half4 Layer237_g128814 = _TerrainParams2;
					half4 Layer338_g128814 = _TerrainParams3;
					half4 Layer439_g128814 = _TerrainParams4;
					float4 weightedBlendVar31_g128814 = Weights52_g128814;
					float4 weightedBlend31_g128814 = ( weightedBlendVar31_g128814.x*Layer133_g128814 + weightedBlendVar31_g128814.y*Layer237_g128814 + weightedBlendVar31_g128814.z*Layer338_g128814 + weightedBlendVar31_g128814.w*Layer439_g128814 );
					half4 Terrain_Params_047533_g128811 = weightedBlend31_g128814;
					half4 Layer_045_g128820 = Terrain_Params_047533_g128811;
					half4 Weights52_g128826 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128826 = _TerrainParams5;
					half4 Layer237_g128826 = _TerrainParams6;
					half4 Layer338_g128826 = _TerrainParams7;
					half4 Layer439_g128826 = _TerrainParams8;
					float4 weightedBlendVar31_g128826 = Weights52_g128826;
					float4 weightedBlend31_g128826 = ( weightedBlendVar31_g128826.x*Layer133_g128826 + weightedBlendVar31_g128826.y*Layer237_g128826 + weightedBlendVar31_g128826.z*Layer338_g128826 + weightedBlendVar31_g128826.w*Layer439_g128826 );
					half4 Terrain_Params_088739_g128811 = weightedBlend31_g128826;
					half4 Layer_0810_g128820 = Terrain_Params_088739_g128811;
					half4 Weights52_g128832 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128832 = _TerrainParams9;
					half4 Layer237_g128832 = _TerrainParams10;
					half4 Layer338_g128832 = _TerrainParams11;
					half4 Layer439_g128832 = _TerrainParams12;
					float4 weightedBlendVar31_g128832 = Weights52_g128832;
					float4 weightedBlend31_g128832 = ( weightedBlendVar31_g128832.x*Layer133_g128832 + weightedBlendVar31_g128832.y*Layer237_g128832 + weightedBlendVar31_g128832.z*Layer338_g128832 + weightedBlendVar31_g128832.w*Layer439_g128832 );
					half4 Terrain_Params_128867_g128811 = weightedBlend31_g128832;
					half4 Layer_1243_g128820 = Terrain_Params_128867_g128811;
					half4 Weights52_g128838 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128838 = _TerrainParams13;
					half4 Layer237_g128838 = _TerrainParams14;
					half4 Layer338_g128838 = _TerrainParams15;
					half4 Layer439_g128838 = _TerrainParams16;
					float4 weightedBlendVar31_g128838 = Weights52_g128838;
					float4 weightedBlend31_g128838 = ( weightedBlendVar31_g128838.x*Layer133_g128838 + weightedBlendVar31_g128838.y*Layer237_g128838 + weightedBlendVar31_g128838.z*Layer338_g128838 + weightedBlendVar31_g128838.w*Layer439_g128838 );
					half4 Terrain_Params_169017_g128811 = weightedBlend31_g128838;
					half4 Layer_1644_g128820 = Terrain_Params_169017_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 + Layer_1644_g128820 );
					#else
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#endif
					half4 Blend_Params7547_g128811 = staticSwitch40_g128820;
					half2 Normal_Planar45_g128897 = ( ( staticSwitch9080_g128811 * (Blend_Params7547_g128811).z ) * _TerrainNormalValue );
					float2 break71_g128897 = Normal_Planar45_g128897;
					float3 appendResult72_g128897 = (float3(break71_g128897.x , 0.0 , break71_g128897.y));
					half2 Final_NormalTS9145_g128811 = (mul( ase_worldToTangent, appendResult72_g128897 )).xy;
					half2 Local_Normal9200_g128810 = Final_NormalTS9145_g128811;
					float2 In_NormalTS3_g128923 = Local_Normal9200_g128810;
					float3 appendResult68_g128921 = (float3(Local_Normal9200_g128810 , 1.0));
					float3 tanToWorld0 = float3( WorldTangent.x, WorldBiTangent.x, WorldNormal.x );
					float3 tanToWorld1 = float3( WorldTangent.y, WorldBiTangent.y, WorldNormal.y );
					float3 tanToWorld2 = float3( WorldTangent.z, WorldBiTangent.z, WorldNormal.z );
					float3 tanNormal74_g128921 = appendResult68_g128921;
					float3 worldNormal74_g128921 = normalize( float3( dot( tanToWorld0, tanNormal74_g128921 ), dot( tanToWorld1, tanNormal74_g128921 ), dot( tanToWorld2, tanNormal74_g128921 ) ) );
					float3 In_NormalWS3_g128923 = worldNormal74_g128921;
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9139_g128811 = 0.0;
					#else
					float staticSwitch9139_g128811 = ( (Blend_Shaders7420_g128811).x * (Blend_Params7547_g128811).x * _TerrainMetallicValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9097_g128811 = 1.0;
					#else
					float staticSwitch9097_g128811 = ( (Blend_Shaders7420_g128811).y * _TerrainOcclusionValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).x;
					#else
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).w;
					#endif
					float4 appendResult9147_g128811 = (float4(staticSwitch9139_g128811 , staticSwitch9097_g128811 , (Blend_Shaders7420_g128811).z , ( staticSwitch9105_g128811 * (Blend_Params7547_g128811).w * _TerrainSmoothnessValue )));
					half4 Final_Shaders9146_g128811 = appendResult9147_g128811;
					half4 Local_Shader9201_g128810 = Final_Shaders9146_g128811;
					float4 In_Shader3_g128923 = Local_Shader9201_g128810;
					half4 Weights52_g128888 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128888 = _TerrainSpecular1;
					half4 Layer237_g128888 = _TerrainSpecular2;
					half4 Layer338_g128888 = _TerrainSpecular3;
					half4 Layer439_g128888 = _TerrainSpecular4;
					float4 weightedBlendVar31_g128888 = Weights52_g128888;
					float4 weightedBlend31_g128888 = ( weightedBlendVar31_g128888.x*Layer133_g128888 + weightedBlendVar31_g128888.y*Layer237_g128888 + weightedBlendVar31_g128888.z*Layer338_g128888 + weightedBlendVar31_g128888.w*Layer439_g128888 );
					half4 Terrain_Specular_047390_g128811 = weightedBlend31_g128888;
					half4 Layer_045_g128893 = Terrain_Specular_047390_g128811;
					half4 Weights52_g128827 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128827 = _TerrainSpecular5;
					half4 Layer237_g128827 = _TerrainSpecular6;
					half4 Layer338_g128827 = _TerrainSpecular7;
					half4 Layer439_g128827 = _TerrainSpecular8;
					float4 weightedBlendVar31_g128827 = Weights52_g128827;
					float4 weightedBlend31_g128827 = ( weightedBlendVar31_g128827.x*Layer133_g128827 + weightedBlendVar31_g128827.y*Layer237_g128827 + weightedBlendVar31_g128827.z*Layer338_g128827 + weightedBlendVar31_g128827.w*Layer439_g128827 );
					half4 Terrain_Specular_088745_g128811 = weightedBlend31_g128827;
					half4 Layer_0810_g128893 = Terrain_Specular_088745_g128811;
					half4 Weights52_g128833 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128833 = _TerrainSpecular9;
					half4 Layer237_g128833 = _TerrainSpecular10;
					half4 Layer338_g128833 = _TerrainSpecular11;
					half4 Layer439_g128833 = _TerrainSpecular12;
					float4 weightedBlendVar31_g128833 = Weights52_g128833;
					float4 weightedBlend31_g128833 = ( weightedBlendVar31_g128833.x*Layer133_g128833 + weightedBlendVar31_g128833.y*Layer237_g128833 + weightedBlendVar31_g128833.z*Layer338_g128833 + weightedBlendVar31_g128833.w*Layer439_g128833 );
					half4 Terrain_Specular_128869_g128811 = weightedBlend31_g128833;
					half4 Layer_1243_g128893 = Terrain_Specular_128869_g128811;
					half4 Weights52_g128839 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128839 = _TerrainSpecular13;
					half4 Layer237_g128839 = _TerrainSpecular14;
					half4 Layer338_g128839 = _TerrainSpecular15;
					half4 Layer439_g128839 = _TerrainSpecular16;
					float4 weightedBlendVar31_g128839 = Weights52_g128839;
					float4 weightedBlend31_g128839 = ( weightedBlendVar31_g128839.x*Layer133_g128839 + weightedBlendVar31_g128839.y*Layer237_g128839 + weightedBlendVar31_g128839.z*Layer338_g128839 + weightedBlendVar31_g128839.w*Layer439_g128839 );
					half4 Terrain_Specular_169019_g128811 = weightedBlend31_g128839;
					half4 Layer_1644_g128893 = Terrain_Specular_169019_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 + Layer_1644_g128893 );
					#else
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#endif
					half4 Blend_TerrainSpecular7446_g128811 = staticSwitch40_g128893;
					float3 temp_output_9088_0_g128811 = (Blend_TerrainSpecular7446_g128811).rgb;
					float4 appendResult9189_g128811 = (float4(temp_output_9088_0_g128811 , 1.0));
					half4 Final_Emissive9151_g128811 = appendResult9189_g128811;
					half4 Local_EmissiveLDR9202_g128810 = Final_Emissive9151_g128811;
					float4 In_Emissive3_g128923 = Local_EmissiveLDR9202_g128810;
					float3 temp_output_3_0_g128922 = Local_Albedo9199_g128810;
					float dotResult20_g128922 = dot( temp_output_3_0_g128922 , float3( 0.2126, 0.7152, 0.0722 ) );
					float temp_output_9165_0_g128810 = dotResult20_g128922;
					float In_Grayscale3_g128923 = temp_output_9165_0_g128810;
					float clampResult9168_g128810 = clamp( saturate( ( temp_output_9165_0_g128810 * 5.0 ) ) , 0.2 , 1.0 );
					float In_Luminosity3_g128923 = clampResult9168_g128810;
					half Final_MultiShader9150_g128811 = ( (Blend_TerrainSpecular7446_g128811).a * (Blend_Albedo7468_g128811).w );
					half Local_MultiMask9203_g128810 = Final_MultiShader9150_g128811;
					float In_MultiMask3_g128923 = Local_MultiMask9203_g128810;
					float4 temp_output_35_0_g128904 = appendResult9125_g128811;
					float2 InputScale48_g128904 = (temp_output_35_0_g128904).zw;
					half2 FinalScale53_g128904 = ( 1.0 / InputScale48_g128904 );
					float2 InputPosition52_g128904 = (temp_output_35_0_g128904).xy;
					half2 FinalPosition58_g128904 = -( FinalScale53_g128904 * InputPosition52_g128904 );
					float2 temp_output_65_0_g128904 = ( ( (worldPos).xz * FinalScale53_g128904 ) + FinalPosition58_g128904 );
					float2 Terrain_Holes_UV9406_g128811 = temp_output_65_0_g128904;
					#ifdef TVE_ALPHA_CLIP
					float staticSwitch9188_g128811 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g128811 ).r;
					#else
					float staticSwitch9188_g128811 = 1.0;
					#endif
					half Terrain_Holes7437_g128811 = staticSwitch9188_g128811;
					half Local_HoleMask9204_g128810 = Terrain_Holes7437_g128811;
					float In_AlphaClip3_g128923 = Local_HoleMask9204_g128810;
					float In_AlphaFade3_g128923 = 1.0;
					float3 temp_cast_9 = (1.0).xxx;
					float3 In_Translucency3_g128923 = temp_cast_9;
					float In_Transmission3_g128923 = 1.0;
					float In_Thickness3_g128923 = 0.0;
					float In_Diffusion3_g128923 = 0.0;
					float In_Depth3_g128923 = 0.0;
					{
					Data3_g128923.Dummy = In_Dummy3_g128923;
					Data3_g128923.Albedo = In_Albedo3_g128923;
					Data3_g128923.AlbedoRaw = In_AlbedoRaw3_g128923;
					Data3_g128923.NormalTS = In_NormalTS3_g128923;
					Data3_g128923.NormalWS = In_NormalWS3_g128923;
					Data3_g128923.Shader = In_Shader3_g128923;
					Data3_g128923.Emissive= In_Emissive3_g128923;
					Data3_g128923.MultiMask = In_MultiMask3_g128923;
					Data3_g128923.Grayscale = In_Grayscale3_g128923;
					Data3_g128923.Luminosity = In_Luminosity3_g128923;
					Data3_g128923.AlphaClip = In_AlphaClip3_g128923;
					Data3_g128923.AlphaFade = In_AlphaFade3_g128923;
					Data3_g128923.Translucency = In_Translucency3_g128923;
					Data3_g128923.Transmission = In_Transmission3_g128923;
					Data3_g128923.Thickness = In_Thickness3_g128923;
					Data3_g128923.Diffusion = In_Diffusion3_g128923;
					Data3_g128923.Depth = In_Depth3_g128923;
					}
					TVEVisualData Data4_g128928 = Data3_g128923;
					float Out_Dummy4_g128928 = 0;
					float3 Out_Albedo4_g128928 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128928 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128928 = float2( 0,0 );
					float3 Out_NormalWS4_g128928 = float3( 0,0,0 );
					float4 Out_Shader4_g128928 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128928 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128928 = 0;
					float Out_Grayscale4_g128928 = 0;
					float Out_Luminosity4_g128928 = 0;
					float Out_AlphaClip4_g128928 = 0;
					float Out_AlphaFade4_g128928 = 0;
					float3 Out_Translucency4_g128928 = float3( 0,0,0 );
					float Out_Transmission4_g128928 = 0;
					float Out_Thickness4_g128928 = 0;
					float Out_Diffusion4_g128928 = 0;
					float Out_Depth4_g128928 = 0;
					{
					Out_Dummy4_g128928 = Data4_g128928.Dummy;
					Out_Albedo4_g128928 = Data4_g128928.Albedo;
					Out_AlbedoRaw4_g128928 = Data4_g128928.AlbedoRaw;
					Out_NormalTS4_g128928 = Data4_g128928.NormalTS;
					Out_NormalWS4_g128928 = Data4_g128928.NormalWS;
					Out_Shader4_g128928 = Data4_g128928.Shader;
					Out_Emissive4_g128928= Data4_g128928.Emissive;
					Out_MultiMask4_g128928 = Data4_g128928.MultiMask;
					Out_Grayscale4_g128928 = Data4_g128928.Grayscale;
					Out_Luminosity4_g128928= Data4_g128928.Luminosity;
					Out_AlphaClip4_g128928 = Data4_g128928.AlphaClip;
					Out_AlphaFade4_g128928 = Data4_g128928.AlphaFade;
					Out_Translucency4_g128928 = Data4_g128928.Translucency;
					Out_Transmission4_g128928 = Data4_g128928.Transmission;
					Out_Thickness4_g128928 = Data4_g128928.Thickness;
					Out_Diffusion4_g128928 = Data4_g128928.Diffusion;
					Out_Depth4_g128928= Data4_g128928.Depth;
					}
					half3 Visual_Albedo139_g128924 = Out_Albedo4_g128928;
					float temp_output_200_12_g128924 = Out_Grayscale4_g128928;
					half Visual_Grayscale150_g128924 = temp_output_200_12_g128924;
					float3 temp_cast_10 = (Visual_Grayscale150_g128924).xxx;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 vertexToFrag73_g114306 = IN.ase_texcoord7.xyz;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 normalizedWorldNormal = normalize( WorldNormal );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = IN.ase_color;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g128925 = Data204_g128736;
					float Out_Dummy15_g128925 = 0;
					float4 Out_CoatDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128925 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128925 = Data15_g128925.Dummy;
					Out_CoatDataRT15_g128925 = Data15_g128925.CoatDataRT;
					Out_PaintDataRT15_g128925 = Data15_g128925.PaintDataRT;
					Out_GlowDataRT15_g128925= Data15_g128925.GlowDataRT;
					Out_AtmoDataRT15_g128925= Data15_g128925.AtmoDataRT;
					Out_FadeDataRT15_g128925= Data15_g128925.FadeDataRT;
					Out_FormDataRT15_g128925 = Data15_g128925.FormDataRT;
					Out_FlowDataRT15_g128925 = Data15_g128925.FlowDataRT;
					}
					half4 Global_PaintParams209_g128924 = Out_PaintDataRT15_g128925;
					float4 temp_output_6_0_g128942 = Global_PaintParams209_g128924;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128942 = ( temp_output_6_0_g128942 + _TintingElementMode );
					#else
					float4 staticSwitch14_g128942 = temp_output_6_0_g128942;
					#endif
					#ifdef TVE_TINTING_ELEMENT
					float4 staticSwitch283_g128924 = staticSwitch14_g128942;
					#else
					float4 staticSwitch283_g128924 = TVE_PaintParams;
					#endif
					float4 lerpResult412_g128924 = lerp( float4( 1,1,1,1 ) , staticSwitch283_g128924 , ( _TintingGlobalValue * TVE_IsEnabled ));
					half Tinting_GlobalValue285_g128924 = saturate( (lerpResult412_g128924).w );
					float3 lerpResult368_g128924 = lerp( Visual_Albedo139_g128924 , temp_cast_10 , ( Tinting_GlobalValue285_g128924 * _TintingGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128948 = 2.0;
					#else
					float staticSwitch1_g128948 = 4.594794;
					#endif
					half3 Tinting_GlobalColor290_g128924 = (lerpResult412_g128924).xyz;
					float temp_output_200_11_g128924 = Out_MultiMask4_g128928;
					half Visual_MultiMask181_g128924 = temp_output_200_11_g128924;
					float lerpResult147_g128924 = lerp( 1.0 , Visual_MultiMask181_g128924 , _TintingMultiValue);
					half Tinting_MutiMask121_g128924 = lerpResult147_g128924;
					half Tinting_TexMask385_g128924 = 1.0;
					float temp_output_200_15_g128924 = Out_Luminosity4_g128928;
					half Visual_Luminosity257_g128924 = temp_output_200_15_g128924;
					float clampResult17_g128935 = clamp( Visual_Luminosity257_g128924 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128939 = _TintingLumaRemap.x;
					float temp_output_9_0_g128939 = ( clampResult17_g128935 - temp_output_7_0_g128939 );
					float lerpResult228_g128924 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128939 * _TintingLumaRemap.z ) + 0.0001 ) ) , _TintingLumaValue);
					half Tinting_LumaMask153_g128924 = lerpResult228_g128924;
					half Tinting_VertMask309_g128924 = 1.0;
					half Tinting_NoiseMask213_g128924 = 1.0;
					half Custom_Mask345_g128924 = 1.0;
					half Tinting_CoreMasks433_g128924 = ( Tinting_MutiMask121_g128924 * Tinting_TexMask385_g128924 * Tinting_LumaMask153_g128924 * Tinting_VertMask309_g128924 * Tinting_NoiseMask213_g128924 * Custom_Mask345_g128924 );
					float temp_output_7_0_g128946 = _TintingBlendRemap.x;
					float temp_output_9_0_g128946 = ( ( _TintingIntensityValue * Tinting_CoreMasks433_g128924 * Tinting_GlobalValue285_g128924 ) - temp_output_7_0_g128946 );
					half Tinting_Mask242_g128924 = ( saturate( ( ( temp_output_9_0_g128946 * _TintingBlendRemap.z ) + 0.0001 ) ) * TVE_IsEnabled );
					float3 lerpResult90_g128924 = lerp( Visual_Albedo139_g128924 , ( lerpResult368_g128924 * staticSwitch1_g128948 * Tinting_GlobalColor290_g128924 * (_TintingColor).rgb ) , Tinting_Mask242_g128924);
					#ifdef TVE_TINTING
					float3 staticSwitch286_g128924 = lerpResult90_g128924;
					#else
					float3 staticSwitch286_g128924 = Visual_Albedo139_g128924;
					#endif
					half3 Final_Albedo97_g128924 = staticSwitch286_g128924;
					float3 In_Albedo3_g128944 = Final_Albedo97_g128924;
					float3 In_AlbedoRaw3_g128944 = Out_AlbedoRaw4_g128928;
					float2 In_NormalTS3_g128944 = Out_NormalTS4_g128928;
					float3 In_NormalWS3_g128944 = Out_NormalWS4_g128928;
					float4 In_Shader3_g128944 = Out_Shader4_g128928;
					float4 In_Emissive3_g128944 = Out_Emissive4_g128928;
					float In_Grayscale3_g128944 = temp_output_200_12_g128924;
					float In_Luminosity3_g128944 = temp_output_200_15_g128924;
					float In_MultiMask3_g128944 = temp_output_200_11_g128924;
					float In_AlphaClip3_g128944 = Out_AlphaClip4_g128928;
					float In_AlphaFade3_g128944 = Out_AlphaFade4_g128928;
					float3 In_Translucency3_g128944 = Out_Translucency4_g128928;
					float In_Transmission3_g128944 = Out_Transmission4_g128928;
					float In_Thickness3_g128944 = Out_Thickness4_g128928;
					float In_Diffusion3_g128944 = Out_Diffusion4_g128928;
					float In_Depth3_g128944 = Out_Depth4_g128928;
					{
					Data3_g128944.Dummy = In_Dummy3_g128944;
					Data3_g128944.Albedo = In_Albedo3_g128944;
					Data3_g128944.AlbedoRaw = In_AlbedoRaw3_g128944;
					Data3_g128944.NormalTS = In_NormalTS3_g128944;
					Data3_g128944.NormalWS = In_NormalWS3_g128944;
					Data3_g128944.Shader = In_Shader3_g128944;
					Data3_g128944.Emissive= In_Emissive3_g128944;
					Data3_g128944.MultiMask = In_MultiMask3_g128944;
					Data3_g128944.Grayscale = In_Grayscale3_g128944;
					Data3_g128944.Luminosity = In_Luminosity3_g128944;
					Data3_g128944.AlphaClip = In_AlphaClip3_g128944;
					Data3_g128944.AlphaFade = In_AlphaFade3_g128944;
					Data3_g128944.Translucency = In_Translucency3_g128944;
					Data3_g128944.Transmission = In_Transmission3_g128944;
					Data3_g128944.Thickness = In_Thickness3_g128944;
					Data3_g128944.Diffusion = In_Diffusion3_g128944;
					Data3_g128944.Depth = In_Depth3_g128944;
					}
					TVEVisualData Data4_g128951 = Data3_g128944;
					float Out_Dummy4_g128951 = 0;
					float3 Out_Albedo4_g128951 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128951 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128951 = float2( 0,0 );
					float3 Out_NormalWS4_g128951 = float3( 0,0,0 );
					float4 Out_Shader4_g128951 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128951 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128951 = 0;
					float Out_Grayscale4_g128951 = 0;
					float Out_Luminosity4_g128951 = 0;
					float Out_AlphaClip4_g128951 = 0;
					float Out_AlphaFade4_g128951 = 0;
					float3 Out_Translucency4_g128951 = float3( 0,0,0 );
					float Out_Transmission4_g128951 = 0;
					float Out_Thickness4_g128951 = 0;
					float Out_Diffusion4_g128951 = 0;
					float Out_Depth4_g128951 = 0;
					{
					Out_Dummy4_g128951 = Data4_g128951.Dummy;
					Out_Albedo4_g128951 = Data4_g128951.Albedo;
					Out_AlbedoRaw4_g128951 = Data4_g128951.AlbedoRaw;
					Out_NormalTS4_g128951 = Data4_g128951.NormalTS;
					Out_NormalWS4_g128951 = Data4_g128951.NormalWS;
					Out_Shader4_g128951 = Data4_g128951.Shader;
					Out_Emissive4_g128951= Data4_g128951.Emissive;
					Out_MultiMask4_g128951 = Data4_g128951.MultiMask;
					Out_Grayscale4_g128951 = Data4_g128951.Grayscale;
					Out_Luminosity4_g128951= Data4_g128951.Luminosity;
					Out_AlphaClip4_g128951 = Data4_g128951.AlphaClip;
					Out_AlphaFade4_g128951 = Data4_g128951.AlphaFade;
					Out_Translucency4_g128951 = Data4_g128951.Translucency;
					Out_Transmission4_g128951 = Data4_g128951.Transmission;
					Out_Thickness4_g128951 = Data4_g128951.Thickness;
					Out_Diffusion4_g128951 = Data4_g128951.Diffusion;
					Out_Depth4_g128951= Data4_g128951.Depth;
					}
					half3 Visual_Albedo292_g128949 = Out_Albedo4_g128951;
					float temp_output_280_12_g128949 = Out_Grayscale4_g128951;
					half Visual_Grayscale308_g128949 = temp_output_280_12_g128949;
					float3 temp_cast_32 = (Visual_Grayscale308_g128949).xxx;
					TVEGlobalData Data15_g128950 = Data204_g128736;
					float Out_Dummy15_g128950 = 0;
					float4 Out_CoatDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128950 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128950 = Data15_g128950.Dummy;
					Out_CoatDataRT15_g128950 = Data15_g128950.CoatDataRT;
					Out_PaintDataRT15_g128950 = Data15_g128950.PaintDataRT;
					Out_GlowDataRT15_g128950= Data15_g128950.GlowDataRT;
					Out_AtmoDataRT15_g128950= Data15_g128950.AtmoDataRT;
					Out_FadeDataRT15_g128950= Data15_g128950.FadeDataRT;
					Out_FormDataRT15_g128950 = Data15_g128950.FormDataRT;
					Out_FlowDataRT15_g128950 = Data15_g128950.FlowDataRT;
					}
					half4 Global_AtmoParams314_g128949 = Out_AtmoDataRT15_g128950;
					float temp_output_6_0_g128968 = (Global_AtmoParams314_g128949).x;
					#ifdef TVE_DUMMY
					float staticSwitch14_g128968 = ( temp_output_6_0_g128968 + _DrynessElementMode );
					#else
					float staticSwitch14_g128968 = temp_output_6_0_g128968;
					#endif
					#ifdef TVE_DRYNESS_ELEMENT
					float staticSwitch351_g128949 = staticSwitch14_g128968;
					#else
					float staticSwitch351_g128949 = TVE_AtmoParams.x;
					#endif
					float lerpResult505_g128949 = lerp( 1.0 , ( staticSwitch351_g128949 * TVE_IsEnabled ) , _DrynessGlobalValue);
					half Dryness_GlobalValue352_g128949 = lerpResult505_g128949;
					float3 lerpResult485_g128949 = lerp( Visual_Albedo292_g128949 , temp_cast_32 , ( Dryness_GlobalValue352_g128949 * _DrynessGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128972 = 2.0;
					#else
					float staticSwitch1_g128972 = 4.594794;
					#endif
					half Dryness_TexMask478_g128949 = 1.0;
					float temp_output_280_11_g128949 = Out_MultiMask4_g128951;
					half Visual_MultiMask310_g128949 = temp_output_280_11_g128949;
					float lerpResult283_g128949 = lerp( 1.0 , Visual_MultiMask310_g128949 , _DrynessMultiValue);
					half Dryness_MultiMask302_g128949 = lerpResult283_g128949;
					float temp_output_280_15_g128949 = Out_Luminosity4_g128951;
					half Visual_Luminosity309_g128949 = temp_output_280_15_g128949;
					float clampResult17_g128961 = clamp( Visual_Luminosity309_g128949 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128965 = _DrynessLumaRemap.x;
					float temp_output_9_0_g128965 = ( clampResult17_g128961 - temp_output_7_0_g128965 );
					float lerpResult295_g128949 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128965 * _DrynessLumaRemap.z ) + 0.0001 ) ) , _DrynessLumaValue);
					half Dryness_LumaMask301_g128949 = lerpResult295_g128949;
					half Dryness_VertMask378_g128949 = 1.0;
					half Dryness_MaskNoise291_g128949 = 1.0;
					half Custom_Mask411_g128949 = 1.0;
					float temp_output_7_0_g128970 = _DrynessBlendRemap.x;
					float temp_output_9_0_g128970 = ( ( _DrynessIntensityValue * Dryness_TexMask478_g128949 * Dryness_MultiMask302_g128949 * Dryness_LumaMask301_g128949 * Dryness_VertMask378_g128949 * Dryness_MaskNoise291_g128949 * Dryness_GlobalValue352_g128949 * Custom_Mask411_g128949 ) - temp_output_7_0_g128970 );
					half Dryness_Mask329_g128949 = saturate( ( ( temp_output_9_0_g128970 * _DrynessBlendRemap.z ) + 0.0001 ) );
					float3 lerpResult336_g128949 = lerp( Visual_Albedo292_g128949 , ( lerpResult485_g128949 * staticSwitch1_g128972 * (_DrynessColor).rgb ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float3 staticSwitch356_g128949 = lerpResult336_g128949;
					#else
					float3 staticSwitch356_g128949 = Visual_Albedo292_g128949;
					#endif
					half3 Final_Albedo331_g128949 = staticSwitch356_g128949;
					float3 In_Albedo3_g128952 = Final_Albedo331_g128949;
					float3 In_AlbedoRaw3_g128952 = Out_AlbedoRaw4_g128951;
					float2 In_NormalTS3_g128952 = Out_NormalTS4_g128951;
					float3 In_NormalWS3_g128952 = Out_NormalWS4_g128951;
					half4 Visual_Shader415_g128949 = Out_Shader4_g128951;
					float4 break438_g128949 = Visual_Shader415_g128949;
					float4 appendResult439_g128949 = (float4(break438_g128949.x , break438_g128949.y , break438_g128949.z , ( break438_g128949.w * _DrynessSmoothnessValue )));
					float4 lerpResult427_g128949 = lerp( Visual_Shader415_g128949 , appendResult439_g128949 , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float4 staticSwitch426_g128949 = lerpResult427_g128949;
					#else
					float4 staticSwitch426_g128949 = Visual_Shader415_g128949;
					#endif
					half4 Final_Shader433_g128949 = staticSwitch426_g128949;
					float4 In_Shader3_g128952 = Final_Shader433_g128949;
					float4 In_Emissive3_g128952 = Out_Emissive4_g128951;
					float In_Grayscale3_g128952 = temp_output_280_12_g128949;
					float In_Luminosity3_g128952 = temp_output_280_15_g128949;
					float In_MultiMask3_g128952 = temp_output_280_11_g128949;
					float In_AlphaClip3_g128952 = Out_AlphaClip4_g128951;
					float In_AlphaFade3_g128952 = Out_AlphaFade4_g128951;
					float3 In_Translucency3_g128952 = Out_Translucency4_g128951;
					half Visual_Transmission416_g128949 = Out_Transmission4_g128951;
					float lerpResult421_g128949 = lerp( Visual_Transmission416_g128949 , ( Visual_Transmission416_g128949 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float staticSwitch418_g128949 = lerpResult421_g128949;
					#else
					float staticSwitch418_g128949 = Visual_Transmission416_g128949;
					#endif
					half Final_Transmission425_g128949 = staticSwitch418_g128949;
					float In_Transmission3_g128952 = Final_Transmission425_g128949;
					float In_Thickness3_g128952 = Out_Thickness4_g128951;
					float In_Diffusion3_g128952 = Out_Diffusion4_g128951;
					float In_Depth3_g128952 = Out_Depth4_g128951;
					{
					Data3_g128952.Dummy = In_Dummy3_g128952;
					Data3_g128952.Albedo = In_Albedo3_g128952;
					Data3_g128952.AlbedoRaw = In_AlbedoRaw3_g128952;
					Data3_g128952.NormalTS = In_NormalTS3_g128952;
					Data3_g128952.NormalWS = In_NormalWS3_g128952;
					Data3_g128952.Shader = In_Shader3_g128952;
					Data3_g128952.Emissive= In_Emissive3_g128952;
					Data3_g128952.MultiMask = In_MultiMask3_g128952;
					Data3_g128952.Grayscale = In_Grayscale3_g128952;
					Data3_g128952.Luminosity = In_Luminosity3_g128952;
					Data3_g128952.AlphaClip = In_AlphaClip3_g128952;
					Data3_g128952.AlphaFade = In_AlphaFade3_g128952;
					Data3_g128952.Translucency = In_Translucency3_g128952;
					Data3_g128952.Transmission = In_Transmission3_g128952;
					Data3_g128952.Thickness = In_Thickness3_g128952;
					Data3_g128952.Diffusion = In_Diffusion3_g128952;
					Data3_g128952.Depth = In_Depth3_g128952;
					}
					TVEVisualData Data4_g128974 = Data3_g128952;
					float Out_Dummy4_g128974 = 0;
					float3 Out_Albedo4_g128974 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128974 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128974 = float2( 0,0 );
					float3 Out_NormalWS4_g128974 = float3( 0,0,0 );
					float4 Out_Shader4_g128974 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128974 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128974 = 0;
					float Out_Grayscale4_g128974 = 0;
					float Out_Luminosity4_g128974 = 0;
					float Out_AlphaClip4_g128974 = 0;
					float Out_AlphaFade4_g128974 = 0;
					float3 Out_Translucency4_g128974 = float3( 0,0,0 );
					float Out_Transmission4_g128974 = 0;
					float Out_Thickness4_g128974 = 0;
					float Out_Diffusion4_g128974 = 0;
					float Out_Depth4_g128974 = 0;
					{
					Out_Dummy4_g128974 = Data4_g128974.Dummy;
					Out_Albedo4_g128974 = Data4_g128974.Albedo;
					Out_AlbedoRaw4_g128974 = Data4_g128974.AlbedoRaw;
					Out_NormalTS4_g128974 = Data4_g128974.NormalTS;
					Out_NormalWS4_g128974 = Data4_g128974.NormalWS;
					Out_Shader4_g128974 = Data4_g128974.Shader;
					Out_Emissive4_g128974= Data4_g128974.Emissive;
					Out_MultiMask4_g128974 = Data4_g128974.MultiMask;
					Out_Grayscale4_g128974 = Data4_g128974.Grayscale;
					Out_Luminosity4_g128974= Data4_g128974.Luminosity;
					Out_AlphaClip4_g128974 = Data4_g128974.AlphaClip;
					Out_AlphaFade4_g128974 = Data4_g128974.AlphaFade;
					Out_Translucency4_g128974 = Data4_g128974.Translucency;
					Out_Transmission4_g128974 = Data4_g128974.Transmission;
					Out_Thickness4_g128974 = Data4_g128974.Thickness;
					Out_Diffusion4_g128974 = Data4_g128974.Diffusion;
					Out_Depth4_g128974= Data4_g128974.Depth;
					}
					half3 Visual_Albedo127_g128973 = Out_Albedo4_g128974;
					float3 temp_output_622_0_g128973 = (_OverlayColor).rgb;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128977) = _OverlayAlbedoTex;
					float localFilterTexture19_g128988 = ( 0.0 );
					SamplerState SS19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128988 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128988 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128988 = SamplerDefault19_g128988;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128988 = SamplerDefault19_g128988;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128988 = SamplerPoint19_g128988;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128988 = SamplerLow19_g128988;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128988 = SamplerMedium19_g128988;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128988 = SamplerHigh19_g128988;
					#endif
					}
					SamplerState Sampler238_g128977 = SS19_g128988;
					float4 temp_output_6_0_g128978 = _overlay_coord_value;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128978 = ( temp_output_6_0_g128978 + ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) );
					#else
					float4 staticSwitch14_g128978 = temp_output_6_0_g128978;
					#endif
					half4 Overlay_Coords639_g128973 = staticSwitch14_g128978;
					float4 temp_output_37_0_g128977 = Overlay_Coords639_g128973;
					half4 Coords238_g128977 = temp_output_37_0_g128977;
					TVEModelData Data15_g128990 = Data16_g114311;
					float Out_Dummy15_g128990 = 0;
					float3 Out_PositionWS15_g128990 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128990 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128990 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128990 = float3( 0,0,0 );
					float4 Out_VertexData15_g128990 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128990 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128990 = Data15_g128990.Dummy;
					Out_PositionWS15_g128990 = Data15_g128990.PositionWS;
					Out_PositionWO15_g128990 = Data15_g128990.PositionWO;
					Out_PivotWS15_g128990 = Data15_g128990.PivotWS;
					Out_PivotWO15_g128990 = Data15_g128990.PivotWO;
					Out_NormalWS15_g128990 = Data15_g128990.NormalWS;
					Out_ViewDirWS15_g128990 = Data15_g128990.ViewDirWS;
					Out_VertexData15_g128990 = Data15_g128990.VertexData;
					Out_BoundsData15_g128990 = Data15_g128990.BoundsData;
					}
					half3 Model_PositionWO602_g128973 = Out_PositionWO15_g128990;
					float3 temp_output_279_0_g128977 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128977 = temp_output_279_0_g128977;
					half4 localSamplePlanar2D238_g128977 = SamplePlanar2D( Texture238_g128977 , Sampler238_g128977 , Coords238_g128977 , WorldPosition238_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler246_g128977 = SS19_g128988;
					half4 Coords246_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition246_g128977 = temp_output_279_0_g128977;
					half3 Model_NormalWS712_g128973 = Out_NormalWS15_g128990;
					float3 temp_output_280_0_g128977 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128977 = temp_output_280_0_g128977;
					half4 localSamplePlanar3D246_g128977 = SamplePlanar3D( Texture246_g128977 , Sampler246_g128977 , Coords246_g128977 , WorldPosition246_g128977 , WorldNormal246_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler234_g128977 = SS19_g128988;
					float4 Coords234_g128977 = temp_output_37_0_g128977;
					float3 WorldPosition234_g128977 = temp_output_279_0_g128977;
					float4 localSampleStochastic2D234_g128977 = SampleStochastic2D( Texture234_g128977 , Sampler234_g128977 , Coords234_g128977 , WorldPosition234_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler263_g128977 = SS19_g128988;
					half4 Coords263_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition263_g128977 = temp_output_279_0_g128977;
					half3 WorldNormal263_g128977 = temp_output_280_0_g128977;
					half4 localSampleStochastic3D263_g128977 = SampleStochastic3D( Texture263_g128977 , Sampler263_g128977 , Coords263_g128977 , WorldPosition263_g128977 , WorldNormal263_g128977 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch676_g128973 = localSamplePlanar3D246_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch676_g128973 = localSampleStochastic2D234_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch676_g128973 = localSampleStochastic3D263_g128977;
					#else
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#endif
					half3 Overlay_Albedo526_g128973 = (staticSwitch676_g128973).xyz;
					#ifdef TVE_OVERLAY_TEX
					float3 staticSwitch578_g128973 = ( temp_output_622_0_g128973 * Overlay_Albedo526_g128973 );
					#else
					float3 staticSwitch578_g128973 = temp_output_622_0_g128973;
					#endif
					float3 temp_output_6_0_g128991 = staticSwitch578_g128973;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g128991 = ( temp_output_6_0_g128991 + _OverlayTextureMode );
					#else
					float3 staticSwitch14_g128991 = temp_output_6_0_g128991;
					#endif
					float3 temp_cast_33 = (0.0).xxx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128981) = _OverlayGlitterTexRT;
					SamplerState Sampler246_g128981 = sampler_Linear_Repeat;
					float4 appendResult863_g128973 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g128981 = appendResult863_g128973;
					half4 Coords246_g128981 = temp_output_37_0_g128981;
					float3 temp_output_279_0_g128981 = Model_PositionWO602_g128973;
					half3 WorldPosition246_g128981 = temp_output_279_0_g128981;
					float3 temp_output_280_0_g128981 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128981 = temp_output_280_0_g128981;
					half4 localSamplePlanar3D246_g128981 = SamplePlanar3D( Texture246_g128981 , Sampler246_g128981 , Coords246_g128981 , WorldPosition246_g128981 , WorldNormal246_g128981 );
					half Overlay_GlitterTex854_g128973 = (localSamplePlanar3D246_g128981).x;
					half3 Model_PositionWS879_g128973 = Out_PositionWS15_g128990;
					#ifdef TVE_OVERLAY_GLITTER
					float3 staticSwitch868_g128973 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g128973 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g128973 ) / _OverlayGlitterDistValue ) ) ) );
					#else
					float3 staticSwitch868_g128973 = temp_cast_33;
					#endif
					half3 Overlay_GlitterColor865_g128973 = staticSwitch868_g128973;
					half Overlay_TexMask908_g128973 = 1.0;
					float3 temp_output_739_21_g128973 = Out_NormalWS4_g128974;
					half3 Visual_NormalWS749_g128973 = temp_output_739_21_g128973;
					float clampResult17_g128997 = clamp( saturate( (Visual_NormalWS749_g128973).y ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129001 = _OverlayProjRemap.x;
					float temp_output_9_0_g129001 = ( clampResult17_g128997 - temp_output_7_0_g129001 );
					float lerpResult842_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129001 * _OverlayProjRemap.z ) + 0.0001 ) ) , _OverlayProjValue);
					half Overlay_MaskProj457_g128973 = lerpResult842_g128973;
					float temp_output_739_15_g128973 = Out_Luminosity4_g128974;
					half Visual_Luminosity654_g128973 = temp_output_739_15_g128973;
					float clampResult17_g129005 = clamp( Visual_Luminosity654_g128973 , 0.0001 , 0.9999 );
					float temp_output_7_0_g129006 = _OverlayLumaRemap.x;
					float temp_output_9_0_g129006 = ( clampResult17_g129005 - temp_output_7_0_g129006 );
					float lerpResult587_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129006 * _OverlayLumaRemap.z ) + 0.0001 ) ) , _OverlayLumaValue);
					half Overlay_MaskLuma438_g128973 = lerpResult587_g128973;
					half Overlay_VertMask801_g128973 = 1.0;
					half Overlay_MaskNoise427_g128973 = 1.0;
					TVEGlobalData Data15_g128975 = Data204_g128736;
					float Out_Dummy15_g128975 = 0;
					float4 Out_CoatDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128975 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128975 = Data15_g128975.Dummy;
					Out_CoatDataRT15_g128975 = Data15_g128975.CoatDataRT;
					Out_PaintDataRT15_g128975 = Data15_g128975.PaintDataRT;
					Out_GlowDataRT15_g128975= Data15_g128975.GlowDataRT;
					Out_AtmoDataRT15_g128975= Data15_g128975.AtmoDataRT;
					Out_FadeDataRT15_g128975= Data15_g128975.FadeDataRT;
					Out_FormDataRT15_g128975 = Data15_g128975.FormDataRT;
					Out_FlowDataRT15_g128975 = Data15_g128975.FlowDataRT;
					}
					half4 Global_AtmoParams516_g128973 = Out_AtmoDataRT15_g128975;
					float temp_output_6_0_g129007 = (Global_AtmoParams516_g128973).z;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129007 = ( temp_output_6_0_g129007 + _OverlayElementMode );
					#else
					float staticSwitch14_g129007 = temp_output_6_0_g129007;
					#endif
					#ifdef TVE_OVERLAY_ELEMENT
					float staticSwitch705_g128973 = staticSwitch14_g129007;
					#else
					float staticSwitch705_g128973 = TVE_AtmoParams.z;
					#endif
					float lerpResult937_g128973 = lerp( 1.0 , ( staticSwitch705_g128973 * TVE_IsEnabled ) , _OverlayGlobalValue);
					half Overlay_MaskGlobal429_g128973 = lerpResult937_g128973;
					half Custom_Mask646_g128973 = 1.0;
					float temp_output_7_0_g129004 = _OverlayBlendRemap.x;
					float temp_output_9_0_g129004 = ( ( _OverlayIntensityValue * Overlay_TexMask908_g128973 * Overlay_MaskProj457_g128973 * Overlay_MaskLuma438_g128973 * Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 * Custom_Mask646_g128973 ) - temp_output_7_0_g129004 );
					half Overlay_Mask494_g128973 = saturate( ( ( temp_output_9_0_g129004 / ( _OverlayBlendRemap.y - temp_output_7_0_g129004 ) ) + 0.0001 ) );
					float3 lerpResult467_g128973 = lerp( Visual_Albedo127_g128973 , ( staticSwitch14_g128991 + Overlay_GlitterColor865_g128973 ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float3 staticSwitch577_g128973 = lerpResult467_g128973;
					#else
					float3 staticSwitch577_g128973 = Visual_Albedo127_g128973;
					#endif
					half3 Final_Albedo493_g128973 = staticSwitch577_g128973;
					float3 In_Albedo3_g128976 = Final_Albedo493_g128973;
					float3 In_AlbedoRaw3_g128976 = Out_AlbedoRaw4_g128974;
					half2 Visual_NormalTS535_g128973 = Out_NormalTS4_g128974;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128979) = _OverlayNormalTex;
					float localFilterTexture29_g128989 = ( 0.0 );
					SamplerState SS29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128989 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128989 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128989 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128989 = SamplerDefault29_g128989;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128989 = SamplerDefault29_g128989;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128989 = SamplerPoint29_g128989;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128989 = SamplerLow29_g128989;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128989 = SamplerMedium29_g128989;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128989 = SamplerHigh29_g128989;
					#endif
					}
					SamplerState Sampler238_g128979 = SS29_g128989;
					float4 temp_output_37_0_g128979 = Overlay_Coords639_g128973;
					half4 Coords238_g128979 = temp_output_37_0_g128979;
					float3 temp_output_279_0_g128979 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128979 = temp_output_279_0_g128979;
					half4 localSamplePlanar2D238_g128979 = SamplePlanar2D( Texture238_g128979 , Sampler238_g128979 , Coords238_g128979 , WorldPosition238_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128979) = _OverlayNormalTex;
					SamplerState Sampler246_g128979 = SS29_g128989;
					half4 Coords246_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition246_g128979 = temp_output_279_0_g128979;
					float3 temp_output_280_0_g128979 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128979 = temp_output_280_0_g128979;
					half4 localSamplePlanar3D246_g128979 = SamplePlanar3D( Texture246_g128979 , Sampler246_g128979 , Coords246_g128979 , WorldPosition246_g128979 , WorldNormal246_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128979) = _OverlayNormalTex;
					SamplerState Sampler234_g128979 = SS29_g128989;
					float4 Coords234_g128979 = temp_output_37_0_g128979;
					float3 WorldPosition234_g128979 = temp_output_279_0_g128979;
					float4 localSampleStochastic2D234_g128979 = SampleStochastic2D( Texture234_g128979 , Sampler234_g128979 , Coords234_g128979 , WorldPosition234_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128979) = _OverlayNormalTex;
					SamplerState Sampler263_g128979 = SS29_g128989;
					half4 Coords263_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition263_g128979 = temp_output_279_0_g128979;
					half3 WorldNormal263_g128979 = temp_output_280_0_g128979;
					half4 localSampleStochastic3D263_g128979 = SampleStochastic3D( Texture263_g128979 , Sampler263_g128979 , Coords263_g128979 , WorldPosition263_g128979 , WorldNormal263_g128979 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch686_g128973 = localSamplePlanar3D246_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch686_g128973 = localSampleStochastic2D234_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch686_g128973 = localSampleStochastic3D263_g128979;
					#else
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#endif
					half4 Normal_Packed45_g128982 = staticSwitch686_g128973;
					float2 appendResult58_g128982 = (float2(( (Normal_Packed45_g128982).x * (Normal_Packed45_g128982).w ) , (Normal_Packed45_g128982).y));
					half2 Normal_Default50_g128982 = appendResult58_g128982;
					half2 Normal_ASTC41_g128982 = (Normal_Packed45_g128982).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128982 = Normal_ASTC41_g128982;
					#else
					float2 staticSwitch38_g128982 = Normal_Default50_g128982;
					#endif
					half2 Normal_NO_DTX544_g128982 = (Normal_Packed45_g128982).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128982 = Normal_NO_DTX544_g128982;
					#else
					float2 staticSwitch37_g128982 = staticSwitch38_g128982;
					#endif
					float2 temp_output_623_0_g128973 = (staticSwitch37_g128982*2.0 + -1.0);
					half2 Overlay_Normal528_g128973 = temp_output_623_0_g128973;
					#ifdef TVE_OVERLAY_TEX
					float2 staticSwitch579_g128973 = Overlay_Normal528_g128973;
					#else
					float2 staticSwitch579_g128973 = Visual_NormalTS535_g128973;
					#endif
					float2 lerpResult551_g128973 = lerp( Visual_NormalTS535_g128973 , ( staticSwitch579_g128973 * _OverlayNormalValue ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float2 staticSwitch583_g128973 = lerpResult551_g128973;
					#else
					float2 staticSwitch583_g128973 = Visual_NormalTS535_g128973;
					#endif
					half2 Final_NormalTS499_g128973 = staticSwitch583_g128973;
					float2 In_NormalTS3_g128976 = Final_NormalTS499_g128973;
					float3 In_NormalWS3_g128976 = temp_output_739_21_g128973;
					half4 Visual_Masks536_g128973 = Out_Shader4_g128974;
					float4 appendResult585_g128973 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
					float4 lerpResult584_g128973 = lerp( Visual_Masks536_g128973 , appendResult585_g128973 , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float4 staticSwitch586_g128973 = lerpResult584_g128973;
					#else
					float4 staticSwitch586_g128973 = Visual_Masks536_g128973;
					#endif
					half4 Final_Masks482_g128973 = staticSwitch586_g128973;
					float4 In_Shader3_g128976 = Final_Masks482_g128973;
					float4 In_Emissive3_g128976 = Out_Emissive4_g128974;
					float temp_output_739_12_g128973 = Out_Grayscale4_g128974;
					float In_Grayscale3_g128976 = temp_output_739_12_g128973;
					float In_Luminosity3_g128976 = temp_output_739_15_g128973;
					float In_MultiMask3_g128976 = Out_MultiMask4_g128974;
					float In_AlphaClip3_g128976 = Out_AlphaClip4_g128974;
					float In_AlphaFade3_g128976 = Out_AlphaFade4_g128974;
					float3 In_Translucency3_g128976 = Out_Translucency4_g128974;
					half Visual_Transmission699_g128973 = Out_Transmission4_g128974;
					float lerpResult746_g128973 = lerp( Visual_Transmission699_g128973 , ( Visual_Transmission699_g128973 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 ));
					#ifdef TVE_OVERLAY
					float staticSwitch703_g128973 = lerpResult746_g128973;
					#else
					float staticSwitch703_g128973 = Visual_Transmission699_g128973;
					#endif
					half Final_Transmission702_g128973 = staticSwitch703_g128973;
					float In_Transmission3_g128976 = Final_Transmission702_g128973;
					float In_Thickness3_g128976 = Out_Thickness4_g128974;
					float In_Diffusion3_g128976 = Out_Diffusion4_g128974;
					float In_Depth3_g128976 = Out_Depth4_g128974;
					{
					Data3_g128976.Dummy = In_Dummy3_g128976;
					Data3_g128976.Albedo = In_Albedo3_g128976;
					Data3_g128976.AlbedoRaw = In_AlbedoRaw3_g128976;
					Data3_g128976.NormalTS = In_NormalTS3_g128976;
					Data3_g128976.NormalWS = In_NormalWS3_g128976;
					Data3_g128976.Shader = In_Shader3_g128976;
					Data3_g128976.Emissive= In_Emissive3_g128976;
					Data3_g128976.MultiMask = In_MultiMask3_g128976;
					Data3_g128976.Grayscale = In_Grayscale3_g128976;
					Data3_g128976.Luminosity = In_Luminosity3_g128976;
					Data3_g128976.AlphaClip = In_AlphaClip3_g128976;
					Data3_g128976.AlphaFade = In_AlphaFade3_g128976;
					Data3_g128976.Translucency = In_Translucency3_g128976;
					Data3_g128976.Transmission = In_Transmission3_g128976;
					Data3_g128976.Thickness = In_Thickness3_g128976;
					Data3_g128976.Diffusion = In_Diffusion3_g128976;
					Data3_g128976.Depth = In_Depth3_g128976;
					}
					TVEVisualData Data4_g129011 = Data3_g128976;
					float Out_Dummy4_g129011 = 0;
					float3 Out_Albedo4_g129011 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129011 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129011 = float2( 0,0 );
					float3 Out_NormalWS4_g129011 = float3( 0,0,0 );
					float4 Out_Shader4_g129011 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129011 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129011 = 0;
					float Out_Grayscale4_g129011 = 0;
					float Out_Luminosity4_g129011 = 0;
					float Out_AlphaClip4_g129011 = 0;
					float Out_AlphaFade4_g129011 = 0;
					float3 Out_Translucency4_g129011 = float3( 0,0,0 );
					float Out_Transmission4_g129011 = 0;
					float Out_Thickness4_g129011 = 0;
					float Out_Diffusion4_g129011 = 0;
					float Out_Depth4_g129011 = 0;
					{
					Out_Dummy4_g129011 = Data4_g129011.Dummy;
					Out_Albedo4_g129011 = Data4_g129011.Albedo;
					Out_AlbedoRaw4_g129011 = Data4_g129011.AlbedoRaw;
					Out_NormalTS4_g129011 = Data4_g129011.NormalTS;
					Out_NormalWS4_g129011 = Data4_g129011.NormalWS;
					Out_Shader4_g129011 = Data4_g129011.Shader;
					Out_Emissive4_g129011= Data4_g129011.Emissive;
					Out_MultiMask4_g129011 = Data4_g129011.MultiMask;
					Out_Grayscale4_g129011 = Data4_g129011.Grayscale;
					Out_Luminosity4_g129011= Data4_g129011.Luminosity;
					Out_AlphaClip4_g129011 = Data4_g129011.AlphaClip;
					Out_AlphaFade4_g129011 = Data4_g129011.AlphaFade;
					Out_Translucency4_g129011 = Data4_g129011.Translucency;
					Out_Transmission4_g129011 = Data4_g129011.Transmission;
					Out_Thickness4_g129011 = Data4_g129011.Thickness;
					Out_Diffusion4_g129011 = Data4_g129011.Diffusion;
					Out_Depth4_g129011= Data4_g129011.Depth;
					}
					half3 Visual_Albedo127_g129010 = Out_Albedo4_g129011;
					TVEGlobalData Data15_g129016 = Data204_g128736;
					float Out_Dummy15_g129016 = 0;
					float4 Out_CoatDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129016 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129016 = Data15_g129016.Dummy;
					Out_CoatDataRT15_g129016 = Data15_g129016.CoatDataRT;
					Out_PaintDataRT15_g129016 = Data15_g129016.PaintDataRT;
					Out_GlowDataRT15_g129016= Data15_g129016.GlowDataRT;
					Out_AtmoDataRT15_g129016= Data15_g129016.AtmoDataRT;
					Out_FadeDataRT15_g129016= Data15_g129016.FadeDataRT;
					Out_FormDataRT15_g129016 = Data15_g129016.FormDataRT;
					Out_FlowDataRT15_g129016 = Data15_g129016.FlowDataRT;
					}
					half4 Global_AtmoParams516_g129010 = Out_AtmoDataRT15_g129016;
					float4 temp_output_6_0_g129037 = Global_AtmoParams516_g129010;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129037 = ( temp_output_6_0_g129037 + _WetnessElementMode );
					#else
					float4 staticSwitch14_g129037 = temp_output_6_0_g129037;
					#endif
					#ifdef TVE_WETNESS_ELEMENT
					float4 staticSwitch663_g129010 = staticSwitch14_g129037;
					#else
					float4 staticSwitch663_g129010 = TVE_AtmoParams;
					#endif
					float2 lerpResult1121_g129010 = lerp( float2( 1,1 ) , (( staticSwitch663_g129010 * TVE_IsEnabled )).yw , _WetnessGlobalValue);
					float2 break1123_g129010 = lerpResult1121_g129010;
					half Global_Wetness429_g129010 = break1123_g129010.x;
					half Wetness_Value1042_g129010 = ( _WetnessIntensityValue * Global_Wetness429_g129010 );
					half Wetness_VertMask1024_g129010 = 1.0;
					float temp_output_1043_0_g129010 = ( Wetness_Value1042_g129010 * Wetness_VertMask1024_g129010 );
					half Wetness_Mask866_g129010 = temp_output_1043_0_g129010;
					half Water_VertMask1094_g129010 = 1.0;
					half4 Visual_Masks536_g129010 = Out_Shader4_g129011;
					float lerpResult1013_g129010 = lerp( 1.0 , (Visual_Masks536_g129010).z , _WetnessWaterBaseValue);
					half Water_HeightMask782_g129010 = lerpResult1013_g129010;
					float clampResult17_g129023 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g129010 * Water_VertMask1094_g129010 ) - Water_HeightMask782_g129010 ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129036 = _WetnessWaterBlendRemap.x;
					float temp_output_9_0_g129036 = ( clampResult17_g129023 - temp_output_7_0_g129036 );
					TVEModelData Data15_g129022 = Data16_g114311;
					float Out_Dummy15_g129022 = 0;
					float3 Out_PositionWS15_g129022 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129022 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129022 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g129022 = float3( 0,0,0 );
					float4 Out_VertexData15_g129022 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129022 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129022 = Data15_g129022.Dummy;
					Out_PositionWS15_g129022 = Data15_g129022.PositionWS;
					Out_PositionWO15_g129022 = Data15_g129022.PositionWO;
					Out_PivotWS15_g129022 = Data15_g129022.PivotWS;
					Out_PivotWO15_g129022 = Data15_g129022.PivotWO;
					Out_NormalWS15_g129022 = Data15_g129022.NormalWS;
					Out_ViewDirWS15_g129022 = Data15_g129022.ViewDirWS;
					Out_VertexData15_g129022 = Data15_g129022.VertexData;
					Out_BoundsData15_g129022 = Data15_g129022.BoundsData;
					}
					half3 Model_NormalWS798_g129010 = Out_NormalWS15_g129022;
					float temp_output_786_0_g129010 = saturate( (Model_NormalWS798_g129010).y );
					half Wetness_ProjMask790_g129010 = temp_output_786_0_g129010;
					half Water_Mask760_g129010 = ( saturate( ( ( temp_output_9_0_g129036 * _WetnessWaterBlendRemap.z ) + 0.0001 ) ) * Wetness_ProjMask790_g129010 );
					float3 lerpResult918_g129010 = lerp( Visual_Albedo127_g129010 , ( Visual_Albedo127_g129010 * (_WetnessWaterColor).rgb ) , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float3 staticSwitch946_g129010 = lerpResult918_g129010;
					#else
					float3 staticSwitch946_g129010 = Visual_Albedo127_g129010;
					#endif
					float3 lerpResult768_g129010 = lerp( staticSwitch946_g129010 , ( staticSwitch946_g129010 * staticSwitch946_g129010 ) , _WetnessContrastValue);
					float3 lerpResult651_g129010 = lerp( Visual_Albedo127_g129010 , lerpResult768_g129010 , Wetness_Mask866_g129010);
					#ifdef TVE_WETNESS
					float3 staticSwitch577_g129010 = lerpResult651_g129010;
					#else
					float3 staticSwitch577_g129010 = Visual_Albedo127_g129010;
					#endif
					half3 Final_Albedo493_g129010 = staticSwitch577_g129010;
					float3 In_Albedo3_g129012 = Final_Albedo493_g129010;
					float3 In_AlbedoRaw3_g129012 = Out_AlbedoRaw4_g129011;
					half2 Visual_Normal535_g129010 = Out_NormalTS4_g129011;
					float lerpResult877_g129010 = lerp( 1.0 , 0.0 , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch957_g129010 = ( Visual_Normal535_g129010 * lerpResult877_g129010 );
					#else
					float2 staticSwitch957_g129010 = Visual_Normal535_g129010;
					#endif
					float2 temp_cast_34 = (0.0).xx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g129020) = _WetnessDropsTexRT;
					SamplerState Sampler238_g129020 = sampler_Linear_Repeat_Aniso8;
					float4 appendResult924_g129010 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g129020 = appendResult924_g129010;
					half4 Coords238_g129020 = temp_output_37_0_g129020;
					half3 Model_PositionWO602_g129010 = Out_PositionWO15_g129022;
					float3 temp_output_279_0_g129020 = Model_PositionWO602_g129010;
					half3 WorldPosition238_g129020 = temp_output_279_0_g129020;
					half4 localSamplePlanar2D238_g129020 = SamplePlanar2D( Texture238_g129020 , Sampler238_g129020 , Coords238_g129020 , WorldPosition238_g129020 );
					float4 temp_output_1010_0_g129010 = localSamplePlanar2D238_g129020;
					half2 Rain_DropsNormal919_g129010 = (temp_output_1010_0_g129010).zw;
					float2 temp_output_903_0_g129010 = (Rain_DropsNormal919_g129010*2.0 + -1.0);
					half2 Rain_RingsNormal713_g129010 = (temp_output_1010_0_g129010).xy;
					float2 lerpResult904_g129010 = lerp( temp_output_903_0_g129010 , (Rain_RingsNormal713_g129010*2.0 + -1.0) , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch960_g129010 = lerpResult904_g129010;
					#else
					float2 staticSwitch960_g129010 = temp_output_903_0_g129010;
					#endif
					half2 Rain_Drops1002_g129010 = ( staticSwitch960_g129010 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
					half3 Model_PositionWS823_g129010 = Out_PositionWS15_g129022;
					half Global_Rain955_g129010 = break1123_g129010.y;
					half Rain_Value1067_g129010 = Global_Rain955_g129010;
					half Rain_VertMask1108_g129010 = 1.0;
					half Rain_Mask999_g129010 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g129010 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g129010 * Rain_VertMask1108_g129010 );
					half2 Normal_Planar45_g129019 = ( Rain_Drops1002_g129010 * Rain_Mask999_g129010 * Wetness_ProjMask790_g129010 );
					float2 break71_g129019 = Normal_Planar45_g129019;
					float3 appendResult72_g129019 = (float3(break71_g129019.x , 0.0 , break71_g129019.y));
					half2 Wetness_Normal526_g129010 = (mul( ase_worldToTangent, appendResult72_g129019 )).xy;
					#ifdef TVE_WETNESS_DROPS
					float2 staticSwitch583_g129010 = Wetness_Normal526_g129010;
					#else
					float2 staticSwitch583_g129010 = temp_cast_34;
					#endif
					#ifdef TVE_WETNESS
					float2 staticSwitch774_g129010 = ( staticSwitch957_g129010 + staticSwitch583_g129010 );
					#else
					float2 staticSwitch774_g129010 = Visual_Normal535_g129010;
					#endif
					half2 Final_Normal499_g129010 = staticSwitch774_g129010;
					float2 In_NormalTS3_g129012 = Final_Normal499_g129010;
					float3 In_NormalWS3_g129012 = Out_NormalWS4_g129011;
					float4 break658_g129010 = Visual_Masks536_g129010;
					float temp_output_935_0_g129010 = ( Wetness_Mask866_g129010 * _WetnessSmoothnessValue );
					float lerpResult941_g129010 = lerp( temp_output_935_0_g129010 , 2.0 , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float staticSwitch959_g129010 = lerpResult941_g129010;
					#else
					float staticSwitch959_g129010 = temp_output_935_0_g129010;
					#endif
					float4 appendResult661_g129010 = (float4(break658_g129010.x , break658_g129010.y , break658_g129010.z , saturate( ( break658_g129010.w + staticSwitch959_g129010 ) )));
					#ifdef TVE_WETNESS
					float4 staticSwitch586_g129010 = appendResult661_g129010;
					#else
					float4 staticSwitch586_g129010 = Visual_Masks536_g129010;
					#endif
					half4 Final_Masks482_g129010 = staticSwitch586_g129010;
					float4 In_Shader3_g129012 = Final_Masks482_g129010;
					float4 In_Emissive3_g129012 = Out_Emissive4_g129011;
					float In_Grayscale3_g129012 = Out_Grayscale4_g129011;
					float In_Luminosity3_g129012 = Out_Luminosity4_g129011;
					float In_MultiMask3_g129012 = Out_MultiMask4_g129011;
					float In_AlphaClip3_g129012 = Out_AlphaClip4_g129011;
					float In_AlphaFade3_g129012 = Out_AlphaFade4_g129011;
					float3 In_Translucency3_g129012 = Out_Translucency4_g129011;
					float In_Transmission3_g129012 = Out_Transmission4_g129011;
					float In_Thickness3_g129012 = Out_Thickness4_g129011;
					float In_Diffusion3_g129012 = Out_Diffusion4_g129011;
					float In_Depth3_g129012 = Out_Depth4_g129011;
					{
					Data3_g129012.Dummy = In_Dummy3_g129012;
					Data3_g129012.Albedo = In_Albedo3_g129012;
					Data3_g129012.AlbedoRaw = In_AlbedoRaw3_g129012;
					Data3_g129012.NormalTS = In_NormalTS3_g129012;
					Data3_g129012.NormalWS = In_NormalWS3_g129012;
					Data3_g129012.Shader = In_Shader3_g129012;
					Data3_g129012.Emissive= In_Emissive3_g129012;
					Data3_g129012.MultiMask = In_MultiMask3_g129012;
					Data3_g129012.Grayscale = In_Grayscale3_g129012;
					Data3_g129012.Luminosity = In_Luminosity3_g129012;
					Data3_g129012.AlphaClip = In_AlphaClip3_g129012;
					Data3_g129012.AlphaFade = In_AlphaFade3_g129012;
					Data3_g129012.Translucency = In_Translucency3_g129012;
					Data3_g129012.Transmission = In_Transmission3_g129012;
					Data3_g129012.Thickness = In_Thickness3_g129012;
					Data3_g129012.Diffusion = In_Diffusion3_g129012;
					Data3_g129012.Depth = In_Depth3_g129012;
					}
					TVEVisualData Data4_g129043 = Data3_g129012;
					float Out_Dummy4_g129043 = 0;
					float3 Out_Albedo4_g129043 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129043 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129043 = float2( 0,0 );
					float3 Out_NormalWS4_g129043 = float3( 0,0,0 );
					float4 Out_Shader4_g129043 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129043 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129043 = 0;
					float Out_Grayscale4_g129043 = 0;
					float Out_Luminosity4_g129043 = 0;
					float Out_AlphaClip4_g129043 = 0;
					float Out_AlphaFade4_g129043 = 0;
					float3 Out_Translucency4_g129043 = float3( 0,0,0 );
					float Out_Transmission4_g129043 = 0;
					float Out_Thickness4_g129043 = 0;
					float Out_Diffusion4_g129043 = 0;
					float Out_Depth4_g129043 = 0;
					{
					Out_Dummy4_g129043 = Data4_g129043.Dummy;
					Out_Albedo4_g129043 = Data4_g129043.Albedo;
					Out_AlbedoRaw4_g129043 = Data4_g129043.AlbedoRaw;
					Out_NormalTS4_g129043 = Data4_g129043.NormalTS;
					Out_NormalWS4_g129043 = Data4_g129043.NormalWS;
					Out_Shader4_g129043 = Data4_g129043.Shader;
					Out_Emissive4_g129043= Data4_g129043.Emissive;
					Out_MultiMask4_g129043 = Data4_g129043.MultiMask;
					Out_Grayscale4_g129043 = Data4_g129043.Grayscale;
					Out_Luminosity4_g129043= Data4_g129043.Luminosity;
					Out_AlphaClip4_g129043 = Data4_g129043.AlphaClip;
					Out_AlphaFade4_g129043 = Data4_g129043.AlphaFade;
					Out_Translucency4_g129043 = Data4_g129043.Translucency;
					Out_Transmission4_g129043 = Data4_g129043.Transmission;
					Out_Thickness4_g129043 = Data4_g129043.Thickness;
					Out_Diffusion4_g129043 = Data4_g129043.Diffusion;
					Out_Depth4_g129043= Data4_g129043.Depth;
					}
					float3 temp_output_297_0_g129039 = Out_Albedo4_g129043;
					float3 In_Albedo3_g129054 = temp_output_297_0_g129039;
					float3 temp_output_297_23_g129039 = Out_AlbedoRaw4_g129043;
					float3 In_AlbedoRaw3_g129054 = temp_output_297_23_g129039;
					float2 In_NormalTS3_g129054 = Out_NormalTS4_g129043;
					float3 In_NormalWS3_g129054 = Out_NormalWS4_g129043;
					float4 In_Shader3_g129054 = Out_Shader4_g129043;
					float4 temp_cast_35 = (0.0).xxxx;
					half4 Visual_Emissive255_g129039 = Out_Emissive4_g129043;
					half Emissive_MeshMask221_g129039 = 1.0;
					half Emissive_Mask103_g129039 = 1.0;
					float temp_output_279_0_g129039 = ( Emissive_MeshMask221_g129039 * Emissive_Mask103_g129039 );
					float3 appendResult293_g129039 = (float3(temp_output_279_0_g129039 , temp_output_279_0_g129039 , temp_output_279_0_g129039));
					half3 Local_EmissiveColor278_g129039 = appendResult293_g129039;
					float3 temp_output_316_0_g129039 = (TVE_GlowParams).xyz;
					TVEGlobalData Data15_g129040 = Data204_g128736;
					float Out_Dummy15_g129040 = 0;
					float4 Out_CoatDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129040 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129040 = Data15_g129040.Dummy;
					Out_CoatDataRT15_g129040 = Data15_g129040.CoatDataRT;
					Out_PaintDataRT15_g129040 = Data15_g129040.PaintDataRT;
					Out_GlowDataRT15_g129040= Data15_g129040.GlowDataRT;
					Out_AtmoDataRT15_g129040= Data15_g129040.AtmoDataRT;
					Out_FadeDataRT15_g129040= Data15_g129040.FadeDataRT;
					Out_FormDataRT15_g129040 = Data15_g129040.FormDataRT;
					Out_FlowDataRT15_g129040 = Data15_g129040.FlowDataRT;
					}
					half4 Global_GlowParams179_g129039 = Out_GlowDataRT15_g129040;
					float3 temp_output_6_0_g129046 = (Global_GlowParams179_g129039).xyz;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g129046 = ( temp_output_6_0_g129046 + _EmissiveElementMode );
					#else
					float3 staticSwitch14_g129046 = temp_output_6_0_g129046;
					#endif
					#ifdef TVE_EMISSIVE_ELEMENT
					float3 staticSwitch228_g129039 = staticSwitch14_g129046;
					#else
					float3 staticSwitch228_g129039 = temp_output_316_0_g129039;
					#endif
					float3 lerpResult299_g129039 = lerp( float3( 1,1,1 ) , staticSwitch228_g129039 , ( _EmissiveGlobalValue * TVE_IsEnabled ));
					half3 Emissive_GlobalMask248_g129039 = lerpResult299_g129039;
					half3 Visual_AlbedoRaw306_g129039 = temp_output_297_23_g129039;
					float3 lerpResult307_g129039 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g129039 , _EmissiveColorMode);
					half3 Local_EmissiveValue88_g129039 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g129039 * lerpResult307_g129039 );
					half3 Emissive_Blend260_g129039 = ( ( (Visual_Emissive255_g129039).xyz * Local_EmissiveColor278_g129039 ) * Local_EmissiveValue88_g129039 );
					float3 temp_output_3_0_g129045 = Emissive_Blend260_g129039;
					float temp_output_15_0_g129045 = _emissive_power_value;
					float3 temp_output_23_0_g129045 = ( temp_output_3_0_g129045 * temp_output_15_0_g129045 );
					half Local_EmissiveMask294_g129039 = temp_output_279_0_g129039;
					float4 appendResult295_g129039 = (float4(temp_output_23_0_g129045 , Local_EmissiveMask294_g129039));
					#ifdef TVE_EMISSIVE
					float4 staticSwitch129_g129039 = appendResult295_g129039;
					#else
					float4 staticSwitch129_g129039 = temp_cast_35;
					#endif
					half4 Final_Emissive184_g129039 = staticSwitch129_g129039;
					float4 In_Emissive3_g129054 = Final_Emissive184_g129039;
					float In_Grayscale3_g129054 = Out_Grayscale4_g129043;
					float In_Luminosity3_g129054 = Out_Luminosity4_g129043;
					float temp_output_297_11_g129039 = Out_MultiMask4_g129043;
					float In_MultiMask3_g129054 = temp_output_297_11_g129039;
					float In_AlphaClip3_g129054 = Out_AlphaClip4_g129043;
					float In_AlphaFade3_g129054 = Out_AlphaFade4_g129043;
					float3 In_Translucency3_g129054 = Out_Translucency4_g129043;
					float In_Transmission3_g129054 = Out_Transmission4_g129043;
					float In_Thickness3_g129054 = Out_Thickness4_g129043;
					float In_Diffusion3_g129054 = Out_Diffusion4_g129043;
					float In_Depth3_g129054 = Out_Depth4_g129043;
					{
					Data3_g129054.Dummy = In_Dummy3_g129054;
					Data3_g129054.Albedo = In_Albedo3_g129054;
					Data3_g129054.AlbedoRaw = In_AlbedoRaw3_g129054;
					Data3_g129054.NormalTS = In_NormalTS3_g129054;
					Data3_g129054.NormalWS = In_NormalWS3_g129054;
					Data3_g129054.Shader = In_Shader3_g129054;
					Data3_g129054.Emissive= In_Emissive3_g129054;
					Data3_g129054.MultiMask = In_MultiMask3_g129054;
					Data3_g129054.Grayscale = In_Grayscale3_g129054;
					Data3_g129054.Luminosity = In_Luminosity3_g129054;
					Data3_g129054.AlphaClip = In_AlphaClip3_g129054;
					Data3_g129054.AlphaFade = In_AlphaFade3_g129054;
					Data3_g129054.Translucency = In_Translucency3_g129054;
					Data3_g129054.Transmission = In_Transmission3_g129054;
					Data3_g129054.Thickness = In_Thickness3_g129054;
					Data3_g129054.Diffusion = In_Diffusion3_g129054;
					Data3_g129054.Depth = In_Depth3_g129054;
					}
					TVEVisualData Data4_g129058 = Data3_g129054;
					float Out_Dummy4_g129058 = 0;
					float3 Out_Albedo4_g129058 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129058 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129058 = float2( 0,0 );
					float3 Out_NormalWS4_g129058 = float3( 0,0,0 );
					float4 Out_Shader4_g129058 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129058 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129058 = 0;
					float Out_Grayscale4_g129058 = 0;
					float Out_Luminosity4_g129058 = 0;
					float Out_AlphaClip4_g129058 = 0;
					float Out_AlphaFade4_g129058 = 0;
					float3 Out_Translucency4_g129058 = float3( 0,0,0 );
					float Out_Transmission4_g129058 = 0;
					float Out_Thickness4_g129058 = 0;
					float Out_Diffusion4_g129058 = 0;
					float Out_Depth4_g129058 = 0;
					{
					Out_Dummy4_g129058 = Data4_g129058.Dummy;
					Out_Albedo4_g129058 = Data4_g129058.Albedo;
					Out_AlbedoRaw4_g129058 = Data4_g129058.AlbedoRaw;
					Out_NormalTS4_g129058 = Data4_g129058.NormalTS;
					Out_NormalWS4_g129058 = Data4_g129058.NormalWS;
					Out_Shader4_g129058 = Data4_g129058.Shader;
					Out_Emissive4_g129058= Data4_g129058.Emissive;
					Out_MultiMask4_g129058 = Data4_g129058.MultiMask;
					Out_Grayscale4_g129058 = Data4_g129058.Grayscale;
					Out_Luminosity4_g129058= Data4_g129058.Luminosity;
					Out_AlphaClip4_g129058 = Data4_g129058.AlphaClip;
					Out_AlphaFade4_g129058 = Data4_g129058.AlphaFade;
					Out_Translucency4_g129058 = Data4_g129058.Translucency;
					Out_Transmission4_g129058 = Data4_g129058.Transmission;
					Out_Thickness4_g129058 = Data4_g129058.Thickness;
					Out_Diffusion4_g129058 = Data4_g129058.Diffusion;
					Out_Depth4_g129058= Data4_g129058.Depth;
					}
					float3 In_Albedo3_g129056 = Out_Albedo4_g129058;
					float3 In_AlbedoRaw3_g129056 = Out_AlbedoRaw4_g129058;
					float2 In_NormalTS3_g129056 = Out_NormalTS4_g129058;
					float3 In_NormalWS3_g129056 = Out_NormalWS4_g129058;
					float4 In_Shader3_g129056 = Out_Shader4_g129058;
					float4 In_Emissive3_g129056 = Out_Emissive4_g129058;
					float In_Grayscale3_g129056 = Out_Grayscale4_g129058;
					float In_Luminosity3_g129056 = Out_Luminosity4_g129058;
					float temp_output_836_11_g129055 = Out_MultiMask4_g129058;
					float In_MultiMask3_g129056 = temp_output_836_11_g129055;
					half Visual_AlphaClip667_g129055 = Out_AlphaClip4_g129058;
					TVEGlobalData Data15_g129057 = Data204_g128736;
					float Out_Dummy15_g129057 = 0;
					float4 Out_CoatDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129057 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129057 = Data15_g129057.Dummy;
					Out_CoatDataRT15_g129057 = Data15_g129057.CoatDataRT;
					Out_PaintDataRT15_g129057 = Data15_g129057.PaintDataRT;
					Out_GlowDataRT15_g129057= Data15_g129057.GlowDataRT;
					Out_AtmoDataRT15_g129057= Data15_g129057.AtmoDataRT;
					Out_FadeDataRT15_g129057= Data15_g129057.FadeDataRT;
					Out_FormDataRT15_g129057 = Data15_g129057.FormDataRT;
					Out_FlowDataRT15_g129057 = Data15_g129057.FlowDataRT;
					}
					half4 Global_FadeParams516_g129055 = Out_FadeDataRT15_g129057;
					float temp_output_6_0_g129064 = saturate( (Global_FadeParams516_g129055).w );
					#ifdef TVE_DUMMY
					float staticSwitch14_g129064 = ( temp_output_6_0_g129064 + _CutoutElementMode );
					#else
					float staticSwitch14_g129064 = temp_output_6_0_g129064;
					#endif
					#ifdef TVE_CUTOUT_ELEMENT
					float staticSwitch663_g129055 = staticSwitch14_g129064;
					#else
					float staticSwitch663_g129055 = TVE_FadeParams.w;
					#endif
					float lerpResult843_g129055 = lerp( 1.0 , ( staticSwitch663_g129055 * TVE_IsEnabled ) , _CutoutGlobalValue);
					half Local_GlobalMask429_g129055 = lerpResult843_g129055;
					half Local_AlphaMask814_g129055 = 1.0;
					half Local_NoiseMask678_g129055 = 1.0;
					half Local_VertMask766_g129055 = 1.0;
					half Local_MultiMask685_g129055 = 1.0;
					float lerpResult728_g129055 = lerp( Visual_AlphaClip667_g129055 , min( Visual_AlphaClip667_g129055 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g129055 ) - ( Local_AlphaMask814_g129055 * Local_NoiseMask678_g129055 * Local_VertMask766_g129055 ) ) ) ) , Local_MultiMask685_g129055);
					half Local_AlphaClip784_g129055 = lerpResult728_g129055;
					#ifdef TVE_CUTOUT
					float staticSwitch577_g129055 = Local_AlphaClip784_g129055;
					#else
					float staticSwitch577_g129055 = Visual_AlphaClip667_g129055;
					#endif
					half Final_AlphaClip795_g129055 = staticSwitch577_g129055;
					float In_AlphaClip3_g129056 = Final_AlphaClip795_g129055;
					float In_AlphaFade3_g129056 = Out_AlphaFade4_g129058;
					float3 In_Translucency3_g129056 = Out_Translucency4_g129058;
					float In_Transmission3_g129056 = Out_Transmission4_g129058;
					float In_Thickness3_g129056 = Out_Thickness4_g129058;
					float In_Diffusion3_g129056 = Out_Diffusion4_g129058;
					float In_Depth3_g129056 = Out_Depth4_g129058;
					{
					Data3_g129056.Dummy = In_Dummy3_g129056;
					Data3_g129056.Albedo = In_Albedo3_g129056;
					Data3_g129056.AlbedoRaw = In_AlbedoRaw3_g129056;
					Data3_g129056.NormalTS = In_NormalTS3_g129056;
					Data3_g129056.NormalWS = In_NormalWS3_g129056;
					Data3_g129056.Shader = In_Shader3_g129056;
					Data3_g129056.Emissive= In_Emissive3_g129056;
					Data3_g129056.MultiMask = In_MultiMask3_g129056;
					Data3_g129056.Grayscale = In_Grayscale3_g129056;
					Data3_g129056.Luminosity = In_Luminosity3_g129056;
					Data3_g129056.AlphaClip = In_AlphaClip3_g129056;
					Data3_g129056.AlphaFade = In_AlphaFade3_g129056;
					Data3_g129056.Translucency = In_Translucency3_g129056;
					Data3_g129056.Transmission = In_Transmission3_g129056;
					Data3_g129056.Thickness = In_Thickness3_g129056;
					Data3_g129056.Diffusion = In_Diffusion3_g129056;
					Data3_g129056.Depth = In_Depth3_g129056;
					}
					TVEVisualData Data4_g129098 = Data3_g129056;
					float Out_Dummy4_g129098 = 0;
					float3 Out_Albedo4_g129098 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129098 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129098 = float2( 0,0 );
					float3 Out_NormalWS4_g129098 = float3( 0,0,0 );
					float4 Out_Shader4_g129098 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129098 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129098 = 0;
					float Out_Grayscale4_g129098 = 0;
					float Out_Luminosity4_g129098 = 0;
					float Out_AlphaClip4_g129098 = 0;
					float Out_AlphaFade4_g129098 = 0;
					float3 Out_Translucency4_g129098 = float3( 0,0,0 );
					float Out_Transmission4_g129098 = 0;
					float Out_Thickness4_g129098 = 0;
					float Out_Diffusion4_g129098 = 0;
					float Out_Depth4_g129098 = 0;
					{
					Out_Dummy4_g129098 = Data4_g129098.Dummy;
					Out_Albedo4_g129098 = Data4_g129098.Albedo;
					Out_AlbedoRaw4_g129098 = Data4_g129098.AlbedoRaw;
					Out_NormalTS4_g129098 = Data4_g129098.NormalTS;
					Out_NormalWS4_g129098 = Data4_g129098.NormalWS;
					Out_Shader4_g129098 = Data4_g129098.Shader;
					Out_Emissive4_g129098= Data4_g129098.Emissive;
					Out_MultiMask4_g129098 = Data4_g129098.MultiMask;
					Out_Grayscale4_g129098 = Data4_g129098.Grayscale;
					Out_Luminosity4_g129098= Data4_g129098.Luminosity;
					Out_AlphaClip4_g129098 = Data4_g129098.AlphaClip;
					Out_AlphaFade4_g129098 = Data4_g129098.AlphaFade;
					Out_Translucency4_g129098 = Data4_g129098.Translucency;
					Out_Transmission4_g129098 = Data4_g129098.Transmission;
					Out_Thickness4_g129098 = Data4_g129098.Thickness;
					Out_Diffusion4_g129098 = Data4_g129098.Diffusion;
					Out_Depth4_g129098= Data4_g129098.Depth;
					}
					half3 Input_Albedo24_g129097 = Out_Albedo4_g129098;
					#ifdef UNITY_COLORSPACE_GAMMA
					float4 staticSwitch22_g129097 = half4( 0.2209163, 0.2209163, 0.2209163, 0.7790837 );
					#else
					float4 staticSwitch22_g129097 = half4( 0.04, 0.04, 0.04, 0.96 );
					#endif
					half4 ColorSpaceDielectricSpec23_g129097 = staticSwitch22_g129097;
					float4 break24_g129094 = Out_Shader4_g129098;
					half Metallic95_g129094 = break24_g129094.x;
					half Input_Metallic25_g129097 = Metallic95_g129094;
					half OneMinusReflectivity31_g129097 = ( (ColorSpaceDielectricSpec23_g129097).w - ( (ColorSpaceDielectricSpec23_g129097).w * Input_Metallic25_g129097 ) );
					
					float3 appendResult23_g129094 = (float3(Out_NormalTS4_g129098 , 1.0));
					
					half Smoothness101_g129094 = break24_g129094.w;
					half Input_Smoothness43_g129102 = Smoothness101_g129094;
					half Input_True57_g129104 = Input_Smoothness43_g129102;
					half True33_g129104 = Input_True57_g129104;
					half Render_Specualr110_g129094 = _RenderSpecular;
					half Input_RenderSpec58_g129102 = Render_Specualr110_g129094;
					float temp_output_46_0_g129102 = max( ( Input_Smoothness43_g129102 * Input_RenderSpec58_g129102 ) , 0.001 );
					float temp_output_6_0_g129103 = temp_output_46_0_g129102;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129103 = ( temp_output_6_0_g129103 + _SpecColor.r );
					#else
					float staticSwitch14_g129103 = temp_output_6_0_g129103;
					#endif
					float temp_output_61_0_g129102 = staticSwitch14_g129103;
					half Input_False58_g129104 = temp_output_61_0_g129102;
					half False33_g129104 = Input_False58_g129104;
					half localShadowPassCheck33_g129104 = ShadowPassCheck33_g129104( True33_g129104 , False33_g129104 );
					
					half Input_True57_g129105 = 0.04;
					half True33_g129105 = Input_True57_g129105;
					half Input_False58_g129105 = temp_output_46_0_g129102;
					half False33_g129105 = Input_False58_g129105;
					half localShadowPassCheck33_g129105 = ShadowPassCheck33_g129105( True33_g129105 , False33_g129105 );
					
					float localCustomAlphaClip20_g129100 = ( 0.0 );
					float temp_output_3_0_g129100 = Out_AlphaClip4_g129098;
					float Alpha20_g129100 = temp_output_3_0_g129100;
					float temp_output_15_0_g129100 = 0.5;
					float Treshold20_g129100 = temp_output_15_0_g129100;
					{
					#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_GLANCING) || defined (TVE_DITHER)
					clip(Alpha20_g129100 - Treshold20_g129100);
					#endif
					}
					

					o.Albedo = ( Input_Albedo24_g129097 * OneMinusReflectivity31_g129097 );
					o.Normal = appendResult23_g129094;
					#if defined(ASE_LIGHTING_SIMPLE)
						o.Specular = localShadowPassCheck33_g129104;
						o.Gloss = localShadowPassCheck33_g129105;
					#else
						#if defined(_SPECULAR_SETUP)
							o.Specular = fixed3( 0, 0, 0 );
						#else
							o.Metallic = 0;
						#endif
						o.Occlusion = 1;
						o.Smoothness = 0;
					#endif
					o.Emission = (Out_Emissive4_g129098).xyz;
					o.Alpha = Alpha20_g129100;
					float3 Translucency = 1;

					#if defined( ASE_DEPTH_WRITE_ON )
						float DeviceDepth = IN.pos.z;
					#endif

					#ifdef _ALPHATEST_ON
						clip( o.Alpha - AlphaClipThreshold );
					#endif

					#if ( ASE_FRAGMENT_NORMAL == 0 )
						o.Normal = normalize(o.Normal.x * IN.worldTangent.xyz + o.Normal.y * IN.worldBitangent.xyz + o.Normal.z * IN.worldNormal.xyz);
					#elif ( ASE_FRAGMENT_NORMAL == 1 )
						o.Normal = UnityObjectToWorldNormal( o.Normal );
					#elif ( ASE_FRAGMENT_NORMAL == 2 )
						// @diogo: already in world-space; do nothing
					#endif

					#if defined( ASE_DEPTH_WRITE_ON )
						outputDepth = DeviceDepth;
					#endif

					#ifndef USING_DIRECTIONAL_LIGHT
						half3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));
					#else
						half3 lightDir = _WorldSpaceLightPos0.xyz;
					#endif

					UnityGI gi;
					UNITY_INITIALIZE_OUTPUT(UnityGI, gi);
					gi.indirect.diffuse = 0;
					gi.indirect.specular = 0;
					gi.light.color = _LightColor0.rgb;
					gi.light.dir = lightDir;
					gi.light.color *= atten;

					half4 c = 0;
					#if defined(ASE_LIGHTING_SIMPLE)
						#if defined(_SPECULAR_SETUP)
							c += LightingBlinnPhong (o, worldViewDir, gi);
						#else
							c += LightingLambert( o, gi );
						#endif
					#else
						#if defined(_SPECULAR_SETUP)
							c += LightingStandardSpecular (o, worldViewDir, gi);
						#else
							c += LightingStandard( o, worldViewDir, gi );
						#endif
					#endif

					#ifdef ASE_TRANSMISSION
					{
						float shadow = _TransmissionShadow;
						#ifdef DIRECTIONAL
							float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
						#else
							float3 lightAtten = gi.light.color;
						#endif
						half3 transmission = max(0 , -dot(o.Normal, gi.light.dir)) * lightAtten * Transmission;
						c.rgb += o.Albedo * transmission;
					}
					#endif

					#ifdef ASE_TRANSLUCENCY
					{
						float shadow = _TransShadow;
						float normal = _TransNormal;
						float scattering = _TransScattering;
						float direct = _TransDirect;
						float ambient = _TransAmbient;
						float strength = _TransStrength;

						#ifdef DIRECTIONAL
							float3 lightAtten = lerp( _LightColor0.rgb, gi.light.color, shadow );
						#else
							float3 lightAtten = gi.light.color;
						#endif
						half3 lightDir = gi.light.dir + o.Normal * normal;
						half transVdotL = pow( saturate( dot( worldViewDir, -lightDir ) ), scattering );
						half3 translucency = lightAtten * (transVdotL * direct + gi.indirect.diffuse * ambient) * Translucency;
						c.rgb += o.Albedo * translucency * strength;
					}
					#endif

					#ifdef ASE_FOG
						UNITY_APPLY_FOG(IN.fogCoord, c);
					#endif
					return c;
				}
			ENDCG
		}

		UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

		Pass
		{
			
			Name "Meta"
			Tags { "LightMode"="Meta" }
			Cull Off

			CGPROGRAM
				#define ASE_FRAGMENT_NORMAL 0
				#define ASE_NEEDS_FRAG_SHADOWCOORDS
				#pragma multi_compile __ LOD_FADE_CROSSFADE
				#pragma multi_compile_fog
				#define ASE_ABSOLUTE_VERTEX_POS 1
				#define ASE_TERRAIN 1
				#define _SPECULAR_SETUP 1
				#define ASE_LIGHTING_SIMPLE 1
				#define _ENVIRONMENTREFLECTIONS_OFF 1
				#define ASE_VERSION 19802
				#define ASE_USING_SAMPLING_MACROS 1

				#pragma vertex vert
				#pragma fragment frag
				#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
				#pragma shader_feature EDITOR_VISUALIZATION
				#ifndef UNITY_PASS_META
					#define UNITY_PASS_META
				#endif
				#include "HLSLSupport.cginc"
				#ifdef ASE_GEOMETRY
					#ifndef UNITY_INSTANCED_LOD_FADE
						#define UNITY_INSTANCED_LOD_FADE
					#endif
					#ifndef UNITY_INSTANCED_SH
						#define UNITY_INSTANCED_SH
					#endif
					#ifndef UNITY_INSTANCED_LIGHTMAPSTS
						#define UNITY_INSTANCED_LIGHTMAPSTS
					#endif
				#endif
				#include "UnityShaderVariables.cginc"
				#include "UnityCG.cginc"
				#include "Lighting.cginc"
				#include "UnityPBSLighting.cginc"
				#include "UnityMetaPass.cginc"

				#define ASE_NEEDS_VERT_POSITION
				#define ASE_NEEDS_VERT_NORMAL
				#define ASE_NEEDS_VERT_TANGENT
				#define ASE_NEEDS_TEXTURE_COORDINATES0
				#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
				#pragma shader_feature_local_vertex TVE_CONFORM
				#pragma shader_feature_local_fragment TVE_WETNESS
				#pragma shader_feature_local_fragment TVE_OVERLAY
				#pragma shader_feature_local_fragment TVE_DRYNESS
				#pragma shader_feature_local_fragment TVE_TINTING
				#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
				#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
				#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
				#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
				#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
				#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
				#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_WATER
				#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
				#pragma shader_feature_local_fragment TVE_EMISSIVE
				#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
				#pragma shader_feature_local_fragment TVE_CUTOUT
				#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
				#pragma multi_compile_instancing
				#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
				  
				struct TVEVisualData
				{  
					half Dummy;  
					half3 Albedo;
					half3 AlbedoRaw;
					half2 NormalTS;
					half3 NormalWS; 
					half4 Shader;
					half4 Emissive;
					half AlphaClip;
					half AlphaFade;
					half MultiMask;
					half Grayscale;
					half Luminosity;
					half3 Translucency;
					half Transmission;
					half Thickness;
					float Diffusion;
					float Depth;
				};  
				    
				struct TVEModelData
				{    
					half Dummy;    
					half3 PositionOS;
					half3 PositionWS;
					half3 PositionWO;
					half3 PositionRawOS;
					half3 PositionAddOS;
					half3 PivotOS;
					half3 PivotWS;
					half3 PivotWO;
					half3 NormalOS;
					half3 NormalWS;
					half3 NormalRawOS;
					half3 NormalRawWS;
					half4 TangentOS;
					half3 ViewDirWS;
					half4 VertexData;
					half4 PhaseData;
					half4 BoundsData;
					half4 RotationData;
				};    
				      
				struct TVEGlobalData
				{      
					half Dummy;      
					half4 CoatDataRT;
					half4 PaintDataRT;
					half4 GlowDataRT;
					half4 AtmoDataRT;
					half4 FadeDataRT;
					half4 FormDataRT;
					half4 FlowDataRT;
				};      
				        
				struct TVEMasksData
				{        
					half4 Mask0;
					half4 Mask1;
					half4 Mask2;
					half4 Mask3;
				};        
				#define TVE_TERRAIN_SHADER
				//#pragma editor_sync_compilation
				#ifndef ASE_NEEDS_TEXTURE_COORDINATES2 //Needed for ASE 1.9.8.1
					#define ASE_NEEDS_TEXTURE_COORDINATES2
				#endif
				#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#else//ASE Sampling Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
				#endif//ASE Sampling Macros
				


				struct appdata
				{
					float4 vertex : POSITION;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord : TEXCOORD0;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct v2f
				{
					UNITY_POSITION( pos );
					#ifdef EDITOR_VISUALIZATION
						float2 vizUV : TEXCOORD1;
						float4 lightCoord : TEXCOORD2;
					#endif
					float4 ase_texcoord3 : TEXCOORD3;
					float4 ase_texcoord4 : TEXCOORD4;
					float4 ase_texcoord5 : TEXCOORD5;
					float4 ase_texcoord6 : TEXCOORD6;
					float4 ase_texcoord7 : TEXCOORD7;
					float4 ase_color : COLOR;
					float4 ase_texcoord8 : TEXCOORD8;
					UNITY_VERTEX_INPUT_INSTANCE_ID
					UNITY_VERTEX_OUTPUT_STEREO
				};

				#ifdef ASE_TESSELLATION
					float _TessPhongStrength;
					float _TessValue;
					float _TessMin;
					float _TessMax;
					float _TessEdgeLength;
					float _TessMaxDisp;
				#endif

				uniform half _TerrainLayersMode;
				uniform half _TerrainSampleMode1;
				uniform half _TerrainSampleMode2;
				uniform half _TerrainSampleMode3;
				uniform half _TerrainSampleMode4;
				uniform half _TerrainSampleMode5;
				uniform half _TerrainSampleMode6;
				uniform half _TerrainSampleMode7;
				uniform half _TerrainSampleMode8;
				uniform half _TerrainSampleMode9;
				uniform half _TerrainSampleMode10;
				uniform half _TerrainSampleMode11;
				uniform half _TerrainSampleMode12;
				uniform half _TerrainSampleMode13;
				uniform half _TerrainSampleMode14;
				uniform half _TerrainSampleMode15;
				uniform half _TerrainSampleMode16;
				uniform half _TerrainTextureMode;
				uniform half _IsTerrainShader;
				uniform half _IsSimpleShader;
				uniform half _RenderCategory;
				uniform half _RenderEnd;
				uniform half _IsTVEShader;
				uniform half _IsCustomShader;
				uniform half _IsShared;
				uniform half _IsCollected;
				uniform half _IsConverted;
				uniform half _IsIdentifier;
				uniform half _RenderDecals;
				uniform half _RenderSSR;
				uniform half _RenderClip;
				uniform half _IsVersion;
				uniform half _RenderShadow;
				uniform half _RenderFilter;
				UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
				SamplerState sampler_NoiseTex3D;
				uniform half _ConformCategory;
				uniform half _ConformEnd;
				uniform half _ConformInfo;
				uniform float3 TVE_WorldOrigin;
				uniform half4 TVE_TimeParams;
				uniform half4 _object_phase_mode;
				uniform half _GlobalCategory;
				uniform half _GlobalEnd;
				uniform half4 TVE_CoatParams;
				uniform half _GlobalPaintLayerValue;
				uniform float TVE_PaintLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
				uniform half4 TVE_RenderBaseCoords;
				SamplerState sampler_Linear_Clamp;
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
				uniform half4 TVE_RenderNearCoords;
				SamplerState sampler_Linear_Repeat;
				uniform float4 TVE_RenderNearPositionR;
				uniform half TVE_RenderNearFadeValue;
				uniform half4 TVE_PaintParams;
				uniform half _GlobalGlowLayerValue;
				uniform float TVE_GlowLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
				uniform half4 TVE_GlowParams;
				uniform half _GlobalAtmoLayerValue;
				uniform float TVE_AtmoLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
				uniform half4 TVE_AtmoParams;
				uniform half _GlobalFadeLayerValue;
				uniform float TVE_FadeLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
				uniform half4 TVE_FadeParams;
				uniform half _GlobalFormLayerValue;
				uniform float TVE_FormLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
				uniform half4 TVE_FormParams;
				uniform half4 TVE_FlowParams;
				uniform half _ConformHeightMode;
				uniform half _ConformHeightValue;
				uniform half TVE_IsEnabled;
				uniform half _CutoutCategory;
				uniform half _CutoutEnd;
				uniform half _CutoutSpace;
				uniform half _CutoutBakeInfo;
				uniform half _EmissiveCategory;
				uniform half _EmissiveEnd;
				uniform half _EmissivePowerMode;
				uniform half _EmissivePowerValue;
				uniform half _EmissiveFlagMode;
				uniform half _WetnessCategory;
				uniform half _WetnessEnd;
				uniform half _WetnessBakeInfo;
				uniform half _OverlayCategory;
				uniform half _OverlayEnd;
				uniform half _OverlaySpace;
				uniform half _OverlayBakeInfo;
				uniform half _DrynessCategory;
				uniform half _DrynessEnd;
				uniform half _DrynessSpace;
				uniform half _DrynessBakeInfo;
				uniform half _TintingCategory;
				uniform half _TintingEnd;
				uniform half _TintingSpace;
				uniform half _TintingBakeInfo;
				uniform half _CategoryTerrain;
				uniform half _EndTerrain;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
				uniform half4 _TerrainPosition;
				uniform half4 _TerrainSize;
				float4 _TerrainControlTex1_TexelSize;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
				SamplerState sampler_Point_Repeat;
				SamplerState sampler_Linear_Repeat_Aniso8;
				uniform half4 _TerrainCoord1;
				uniform half4 _TerrainShaderMin1;
				uniform half4 _TerrainShaderRcp1;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
				uniform half4 _TerrainCoord2;
				uniform half4 _TerrainShaderMin2;
				uniform half4 _TerrainShaderRcp2;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
				uniform half4 _TerrainCoord3;
				uniform half4 _TerrainShaderMin3;
				uniform half4 _TerrainShaderRcp3;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
				uniform half4 _TerrainCoord4;
				uniform half4 _TerrainShaderMin4;
				uniform half4 _TerrainShaderRcp4;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
				uniform half4 _TerrainCoord5;
				uniform half4 _TerrainShaderMin5;
				uniform half4 _TerrainShaderRcp5;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
				uniform half4 _TerrainCoord6;
				uniform half4 _TerrainShaderMin6;
				uniform half4 _TerrainShaderRcp6;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
				uniform half4 _TerrainCoord7;
				uniform half4 _TerrainShaderMin7;
				uniform half4 _TerrainShaderRcp7;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
				uniform half4 _TerrainCoord8;
				uniform half4 _TerrainShaderMin8;
				uniform half4 _TerrainShaderRcp8;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
				uniform half4 _TerrainCoord9;
				uniform half4 _TerrainShaderMin9;
				uniform half4 _TerrainShaderRcp9;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
				uniform half4 _TerrainCoord10;
				uniform half4 _TerrainShaderMin10;
				uniform half4 _TerrainShaderRcp10;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
				uniform half4 _TerrainCoord11;
				uniform half4 _TerrainShaderMin11;
				uniform half4 _TerrainShaderRcp11;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
				uniform half4 _TerrainCoord12;
				uniform half4 _TerrainShaderMin12;
				uniform half4 _TerrainShaderRcp12;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
				uniform half4 _TerrainCoord13;
				uniform half4 _TerrainShaderMin13;
				uniform half4 _TerrainShaderRcp13;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
				uniform half4 _TerrainCoord14;
				uniform half4 _TerrainShaderMin14;
				uniform half4 _TerrainShaderRcp14;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
				uniform half4 _TerrainCoord15;
				uniform half4 _TerrainShaderMin15;
				uniform half4 _TerrainShaderRcp15;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
				uniform half4 _TerrainCoord16;
				uniform half4 _TerrainShaderMin16;
				uniform half4 _TerrainShaderRcp16;
				uniform half _TerrainHeightBlendValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
				uniform half4 _TerrainColor1;
				uniform half4 _TerrainColor2;
				uniform half4 _TerrainColor3;
				uniform half4 _TerrainColor4;
				uniform half4 _TerrainColor5;
				uniform half4 _TerrainColor6;
				uniform half4 _TerrainColor7;
				uniform half4 _TerrainColor8;
				uniform half4 _TerrainColor9;
				uniform half4 _TerrainColor10;
				uniform half4 _TerrainColor11;
				uniform half4 _TerrainColor12;
				uniform half4 _TerrainColor13;
				uniform half4 _TerrainColor14;
				uniform half4 _TerrainColor15;
				uniform half4 _TerrainColor16;
				uniform half4 _TerrainColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
				uniform half4 _TerrainParams1;
				uniform half4 _TerrainParams2;
				uniform half4 _TerrainParams3;
				uniform half4 _TerrainParams4;
				uniform half4 _TerrainParams5;
				uniform half4 _TerrainParams6;
				uniform half4 _TerrainParams7;
				uniform half4 _TerrainParams8;
				uniform half4 _TerrainParams9;
				uniform half4 _TerrainParams10;
				uniform half4 _TerrainParams11;
				uniform half4 _TerrainParams12;
				uniform half4 _TerrainParams13;
				uniform half4 _TerrainParams14;
				uniform half4 _TerrainParams15;
				uniform half4 _TerrainParams16;
				uniform half _TerrainNormalValue;
				uniform half _TerrainMetallicValue;
				uniform half _TerrainOcclusionValue;
				uniform half _TerrainSmoothnessValue;
				uniform half4 _TerrainSpecular1;
				uniform half4 _TerrainSpecular2;
				uniform half4 _TerrainSpecular3;
				uniform half4 _TerrainSpecular4;
				uniform half4 _TerrainSpecular5;
				uniform half4 _TerrainSpecular6;
				uniform half4 _TerrainSpecular7;
				uniform half4 _TerrainSpecular8;
				uniform half4 _TerrainSpecular9;
				uniform half4 _TerrainSpecular10;
				uniform half4 _TerrainSpecular11;
				uniform half4 _TerrainSpecular12;
				uniform half4 _TerrainSpecular13;
				uniform half4 _TerrainSpecular14;
				uniform half4 _TerrainSpecular15;
				uniform half4 _TerrainSpecular16;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
				uniform half _TintingElementMode;
				uniform half _TintingGlobalValue;
				uniform half _TintingGrayValue;
				uniform float4 _TintingColor;
				uniform half _TintingIntensityValue;
				uniform half _TintingMultiValue;
				uniform half4 _TintingLumaRemap;
				uniform half _TintingLumaValue;
				uniform half4 _TintingBlendRemap;
				uniform half _DrynessElementMode;
				uniform half _DrynessGlobalValue;
				uniform half _DrynessGrayValue;
				uniform float4 _DrynessColor;
				uniform half _DrynessIntensityValue;
				uniform half _DrynessMultiValue;
				uniform half4 _DrynessLumaRemap;
				uniform half _DrynessLumaValue;
				uniform half4 _DrynessBlendRemap;
				uniform half _DrynessSmoothnessValue;
				uniform half _DrynessSubsurfaceValue;
				uniform half4 _OverlayColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
				uniform half4 _overlay_coord_value;
				uniform half _OverlaySampleMode;
				uniform half _OverlayCoordMode;
				uniform half4 _OverlayCoordValue;
				uniform half _OverlayTextureMode;
				uniform half _OverlayGlitterIntensityValue;
				uniform half4 _OverlayGlitterColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
				uniform half _OverlayGlitterTillingValue;
				uniform half _OverlayGlitterDistValue;
				uniform half _OverlayIntensityValue;
				uniform half4 _OverlayProjRemap;
				uniform half _OverlayProjValue;
				uniform half4 _OverlayLumaRemap;
				uniform half _OverlayLumaValue;
				uniform half _OverlayElementMode;
				uniform half _OverlayGlobalValue;
				uniform half4 _OverlayBlendRemap;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
				uniform half _OverlayNormalValue;
				uniform half _OverlaySmoothnessValue;
				uniform half _OverlaySubsurfaceValue;
				uniform half4 _WetnessWaterColor;
				uniform half _WetnessWaterIntensityValue;
				uniform half _WetnessIntensityValue;
				uniform half _WetnessElementMode;
				uniform half _WetnessGlobalValue;
				uniform half _WetnessWaterBaseValue;
				uniform half4 _WetnessWaterBlendRemap;
				uniform half _WetnessContrastValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
				uniform half _WetnessDropsTillingValue;
				uniform half _WetnessDropsIntensityValue;
				uniform half _WetnessDropsNormalValue;
				uniform half _WetnessDropsDistValue;
				uniform half _WetnessSmoothnessValue;
				uniform half _EmissiveIntensityValue;
				uniform half4 _EmissiveColor;
				uniform half _EmissiveElementMode;
				uniform half _EmissiveGlobalValue;
				uniform half _EmissiveColorMode;
				uniform float _emissive_power_value;
				uniform half _CutoutIntensityValue;
				uniform half _CutoutElementMode;
				uniform half _CutoutGlobalValue;
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
					sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
					UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
				CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
					#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
						float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
						float4 _TerrainHeightmapScale;//ASE Terrain Instancing
					#endif//ASE Terrain Instancing
				CBUFFER_END//ASE Terrain Instancing


				float4 mod289( float4 x )
				{
					return x - floor(x * 0.00346020761) * 289.0;
				}
				
				float4 perm( float4 x )
				{
					    return mod289((x * 34.0 + 1.0) * x);
				}
				
				float SimpleNoise3D( float3 p )
				{
					    // Compute integer and fractional parts.
					    float3 i = floor(p);
					    float3 f = p - i;
					    // Cubic interpolation (smoothstep)
					    f = f * f * (3.0 - 2.0 * f);
					    // Build 4-component vectors using swizzling.
					    // a = (i.x, i.x+1, i.y, i.y+1)
					    float4 a = float4(i.x, i.x, i.y, i.y) + float4(0.0, 1.0, 0.0, 1.0);
					    // Permutations along the x and y axes.
					    float4 k1 = perm(a.xyxy);
					    float4 k2 = perm(k1.xyxy + a.zzww);
					    // Incorporate the z component.
					    float4 c  = k2 + float4(i.z, i.z, i.z, i.z);
					    float4 k3 = perm(c);
					    float4 k4 = perm(c + 1.0);
					    // Map results to the [0,1] range.
					    float4 o1 = frac(k3 * 0.0243902439);
					    float4 o2 = frac(k4 * 0.0243902439);
					    // Interpolate along z, then x, then y.
					    float4 o3 = lerp(o1, o2, f.z);           // f.z blends between layers.
					    float2 o4 = lerp(o3.xz, o3.yw, f.x);       // f.x blends between pairs.
					    return lerp(o4.x, o4.y, f.y); 
				}
				
				void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
				{
					ZX = WorldPosition.xz * Coords.xx - Coords.zz;
					ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
					XY = WorldPosition.xy * Coords.xy - Coords.zw;
				}
				
				half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
					return tex;
				}
				
				void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
				{
					half3 powNormal = abs( WorldNormal.xyz );
					half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
					weights /= ( weights.x + weights.y + weights.z ).xxx;
					T1 = weights.y;
					T2 = weights.x;
					T3 = weights.z;
				}
				
				half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
					half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
					half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
					return tex1 * T1 + tex2 * T2 + tex3 * T3;
				}
				
				void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
				{
					half2 vertex1, vertex2, vertex3;
					// Scaling of the input
					half2 uv = UV * 3.464; // 2 * sqrt (3)
					// Skew input space into simplex triangle grid
					const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
					half2 skewedCoord = mul( gridToSkewedGrid, uv );
					// Compute local triangle vertex IDs and local barycentric coordinates
					int2 baseId = int2( floor( skewedCoord ) );
					half3 temp = half3( frac( skewedCoord ), 0 );
					temp.z = 1.0 - temp.x - temp.y;
					if ( temp.z > 0.0 )
					{
						W1 = temp.z;
						W2 = temp.y;
						W3 = temp.x;
						vertex1 = baseId;
						vertex2 = baseId + int2( 0, 1 );
						vertex3 = baseId + int2( 1, 0 );
					}
					else
					{
						W1 = -temp.z;
						W2 = 1.0 - temp.y;
						W3 = 1.0 - temp.x;
						vertex1 = baseId + int2( 1, 1 );
						vertex2 = baseId + int2( 1, 0 );
						vertex3 = baseId + int2( 0, 1 );
					}
					UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
					UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
					UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
					return;
				}
				
				float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
					half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
					half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
					half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
					return tex1 * W1 + tex2 * W2 + tex3 * W3;
				}
				
				half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					half4 tex1, tex2, tex3;
					ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
					half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
					half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
					half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					return texZX * T1 + texZY * T2 + texXY * T3;
				}
				
				appdata ApplyMeshModification( appdata v ){
				#ifdef UNITY_INSTANCING_ENABLED
					float2 patchVertex = v.vertex.xy;
					float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
					float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
					float4 uvoffset = instanceData.xyxy * uvscale;
					uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
					float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
					v.texcoord.xyzw = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
					float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
					v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
					v.vertex.y = height * _TerrainHeightmapScale.y;
					v.normal = tex2Dlod( _TerrainNormalmapTexture, v.texcoord.xyzw ).rgb * 2 - 1;
				#endif
				return v;
				}
				

				v2f VertexFunction( appdata v  )
				{
					UNITY_SETUP_INSTANCE_ID(v);
					v2f o;
					UNITY_INITIALIZE_OUTPUT(v2f,o);
					UNITY_TRANSFER_INSTANCE_ID(v,o);
					UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

					v = ApplyMeshModification(v);
					TVEModelData Data16_g129074 = (TVEModelData)0;
					half Dummy181_g129072 = ( _ConformCategory + _ConformEnd + _ConformInfo );
					float In_Dummy16_g129074 = Dummy181_g129072;
					TVEModelData Data16_g114310 = (TVEModelData)0;
					half Dummy207_g114306 = 0.0;
					float In_Dummy16_g114310 = Dummy207_g114306;
					half3 PositionOS131_g114306 = v.vertex.xyz;
					float3 In_PositionOS16_g114310 = PositionOS131_g114306;
					float3 ase_positionWS = mul( unity_ObjectToWorld, float4( ( v.vertex ).xyz, 1 ) ).xyz;
					float3 vertexToFrag73_g114306 = ase_positionWS;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114310 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114310 = PositionWO132_g114306;
					float3 In_PositionRawOS16_g114310 = PositionOS131_g114306;
					float3 In_PositionAddOS16_g114310 = float3( 0,0,0 );
					float3 _Vector0 = float3(0,0,0);
					half3 PivotOS149_g114306 = _Vector0;
					float3 In_PivotOS16_g114310 = PivotOS149_g114306;
					float3 In_PivotWS16_g114310 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114310 = PivotWO133_g114306;
					half3 NormalOS134_g114306 = v.normal;
					float3 In_NormalOS16_g114310 = NormalOS134_g114306;
					float3 ase_normalWS = UnityObjectToWorldNormal( v.normal );
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114310 = Normal_WS95_g114306;
					float3 In_NormalRawOS16_g114310 = NormalOS134_g114306;
					float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0.0 ) ).xyz );
					half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
					float3 In_NormalRawWS16_g114310 = Normal_RawWS136_g114306;
					half4 TangentlOS153_g114306 = v.tangent;
					float4 In_TangentOS16_g114310 = TangentlOS153_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114310 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = v.ase_color;
					float4 In_VertexData16_g114310 = VertexMasks171_g114306;
					float mulTime113_g128352 = _Time.y * 0.52;
					float lerpResult128_g128352 = lerp( mulTime113_g128352 , ( ( mulTime113_g128352 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float3 break319_g114306 = PivotWO133_g114306;
					half Pivot_Position322_g114306 = ( break319_g114306.x + break319_g114306.z );
					float mulTime113_g128351 = _Time.y * 0.27;
					float lerpResult128_g128351 = lerp( mulTime113_g128351 , ( ( mulTime113_g128351 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float4 break33_g128354 = _object_phase_mode;
					float temp_output_30_0_g128354 = ( v.ase_color.r * break33_g128354.x );
					float temp_output_29_0_g128354 = ( v.ase_color.g * break33_g128354.y );
					float temp_output_31_0_g128354 = ( v.ase_color.b * break33_g128354.z );
					float temp_output_28_0_g128354 = ( temp_output_30_0_g128354 + temp_output_29_0_g128354 + temp_output_31_0_g128354 + ( v.ase_color.a * break33_g128354.w ) );
					float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g128354 + Pivot_Position322_g114306 ) )*2.0 + -1.0);
					float4 appendResult177_g114306 = (float4(sin( ( lerpResult128_g128352 + Pivot_Position322_g114306 ) ) , sin( ( lerpResult128_g128351 + Pivot_Position322_g114306 ) ) , temp_output_315_0_g114306 , 1.0));
					half4 MotionMasks176_g114306 = appendResult177_g114306;
					float4 In_PhaseData16_g114310 = MotionMasks176_g114306;
					half4 BoundsData254_g114306 = float4( 0,0,0,0 );
					float4 In_BoundsData16_g114310 = BoundsData254_g114306;
					float4 In_RotationData16_g114310 = float4( 0,0,0,0 );
					{
					Data16_g114310.Dummy = In_Dummy16_g114310;
					Data16_g114310.PositionOS = In_PositionOS16_g114310;
					Data16_g114310.PositionWS = In_PositionWS16_g114310;
					Data16_g114310.PositionWO = In_PositionWO16_g114310;
					Data16_g114310.PositionRawOS = In_PositionRawOS16_g114310;
					Data16_g114310.PositionAddOS = In_PositionAddOS16_g114310;
					Data16_g114310.PivotOS = In_PivotOS16_g114310;
					Data16_g114310.PivotWS = In_PivotWS16_g114310;
					Data16_g114310.PivotWO = In_PivotWO16_g114310;
					Data16_g114310.NormalOS = In_NormalOS16_g114310;
					Data16_g114310.NormalWS = In_NormalWS16_g114310;
					Data16_g114310.NormalRawOS = In_NormalRawOS16_g114310;
					Data16_g114310.NormalRawWS = In_NormalRawWS16_g114310;
					Data16_g114310.TangentOS = In_TangentOS16_g114310;
					Data16_g114310.ViewDirWS = In_ViewDirWS16_g114310;
					Data16_g114310.VertexData = In_VertexData16_g114310;
					Data16_g114310.PhaseData = In_PhaseData16_g114310;
					Data16_g114310.BoundsData = In_BoundsData16_g114310;
					Data16_g114310.RotationData = In_RotationData16_g114310;
					}
					TVEModelData Data15_g129073 = Data16_g114310;
					float Out_Dummy15_g129073 = 0;
					float3 Out_PositionOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129073 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129073 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129073 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129073 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129073 = float3( 0,0,0 );
					float4 Out_VertexData15_g129073 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129073 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129073 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129073 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129073 = Data15_g129073.Dummy;
					Out_PositionOS15_g129073 = Data15_g129073.PositionOS;
					Out_PositionWS15_g129073 = Data15_g129073.PositionWS;
					Out_PositionWO15_g129073 = Data15_g129073.PositionWO;
					Out_PositionRawOS15_g129073 = Data15_g129073.PositionRawOS;
					Out_PositionAddOS15_g129073 = Data15_g129073.PositionAddOS;
					Out_PivotOS15_g129073 = Data15_g129073.PivotOS;
					Out_PivotWS15_g129073 = Data15_g129073.PivotWS;
					Out_PivotWO15_g129073 = Data15_g129073.PivotWO;
					Out_NormalOS15_g129073 = Data15_g129073.NormalOS;
					Out_NormalWS15_g129073 = Data15_g129073.NormalWS;
					Out_NormalRawOS15_g129073 = Data15_g129073.NormalRawOS;
					Out_NormalRawWS15_g129073 = Data15_g129073.NormalRawWS;
					Out_TangentOS15_g129073 = Data15_g129073.TangentOS;
					Out_ViewDirWS15_g129073 = Data15_g129073.ViewDirWS;
					Out_VertexData15_g129073 = Data15_g129073.VertexData;
					Out_PhaseData15_g129073 = Data15_g129073.PhaseData;
					Out_BoundsData15_g129073 = Data15_g129073.BoundsData;
					Out_RotationData15_g129073 = Data15_g129073.RotationData;
					}
					half3 Input_PositionOS147_g129072 = Out_PositionOS15_g129073;
					float3 break592_g129072 = Input_PositionOS147_g129072;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g129077 = Data204_g128736;
					float Out_Dummy15_g129077 = 0;
					float4 Out_CoatDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129077 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129077 = Data15_g129077.Dummy;
					Out_CoatDataRT15_g129077 = Data15_g129077.CoatDataRT;
					Out_PaintDataRT15_g129077 = Data15_g129077.PaintDataRT;
					Out_GlowDataRT15_g129077= Data15_g129077.GlowDataRT;
					Out_AtmoDataRT15_g129077= Data15_g129077.AtmoDataRT;
					Out_FadeDataRT15_g129077= Data15_g129077.FadeDataRT;
					Out_FormDataRT15_g129077 = Data15_g129077.FormDataRT;
					Out_FlowDataRT15_g129077 = Data15_g129077.FlowDataRT;
					}
					half4 Input_FormParams214_g129072 = Out_FormDataRT15_g129077;
					float temp_output_642_0_g129072 = ( (Input_FormParams214_g129072).z + (TVE_WorldOrigin).y );
					float3 temp_output_481_19_g129072 = Out_PivotWO15_g129073;
					half3 Model_PivotWO602_g129072 = temp_output_481_19_g129072;
					float lerpResult594_g129072 = lerp( ( break592_g129072.y + temp_output_642_0_g129072 ) , ( temp_output_642_0_g129072 - (Model_PivotWO602_g129072).y ) , _ConformHeightMode);
					float lerpResult604_g129072 = lerp( break592_g129072.y , lerpResult594_g129072 , ( _ConformHeightValue * TVE_IsEnabled ));
					float3 appendResult593_g129072 = (float3(break592_g129072.x , lerpResult604_g129072 , break592_g129072.z));
					#ifdef TVE_CONFORM
					float3 staticSwitch575_g129072 = appendResult593_g129072;
					#else
					float3 staticSwitch575_g129072 = Input_PositionOS147_g129072;
					#endif
					half3 Final_PositionOS580_g129072 = staticSwitch575_g129072;
					float3 In_PositionOS16_g129074 = Final_PositionOS580_g129072;
					float3 In_PositionWS16_g129074 = Out_PositionWS15_g129073;
					float3 In_PositionWO16_g129074 = Out_PositionWO15_g129073;
					float3 In_PositionRawOS16_g129074 = Out_PositionRawOS15_g129073;
					float3 In_PositionAddOS16_g129074 = Out_PositionAddOS15_g129073;
					float3 In_PivotOS16_g129074 = Out_PivotOS15_g129073;
					float3 In_PivotWS16_g129074 = Out_PivotWS15_g129073;
					float3 In_PivotWO16_g129074 = temp_output_481_19_g129072;
					float3 temp_output_481_20_g129072 = Out_NormalOS15_g129073;
					float3 In_NormalOS16_g129074 = temp_output_481_20_g129072;
					float3 In_NormalWS16_g129074 = Out_NormalWS15_g129073;
					float3 In_NormalRawOS16_g129074 = Out_NormalRawOS15_g129073;
					float3 In_NormalRawWS16_g129074 = Out_NormalRawWS15_g129073;
					float4 In_TangentOS16_g129074 = Out_TangentOS15_g129073;
					float3 In_ViewDirWS16_g129074 = Out_ViewDirWS15_g129073;
					float4 In_VertexData16_g129074 = Out_VertexData15_g129073;
					float4 In_PhaseData16_g129074 = Out_PhaseData15_g129073;
					float4 In_BoundsData16_g129074 = Out_BoundsData15_g129073;
					float4 In_RotationData16_g129074 = Out_RotationData15_g129073;
					{
					Data16_g129074.Dummy = In_Dummy16_g129074;
					Data16_g129074.PositionOS = In_PositionOS16_g129074;
					Data16_g129074.PositionWS = In_PositionWS16_g129074;
					Data16_g129074.PositionWO = In_PositionWO16_g129074;
					Data16_g129074.PositionRawOS = In_PositionRawOS16_g129074;
					Data16_g129074.PositionAddOS = In_PositionAddOS16_g129074;
					Data16_g129074.PivotOS = In_PivotOS16_g129074;
					Data16_g129074.PivotWS = In_PivotWS16_g129074;
					Data16_g129074.PivotWO = In_PivotWO16_g129074;
					Data16_g129074.NormalOS = In_NormalOS16_g129074;
					Data16_g129074.NormalWS = In_NormalWS16_g129074;
					Data16_g129074.NormalRawOS = In_NormalRawOS16_g129074;
					Data16_g129074.NormalRawWS = In_NormalRawWS16_g129074;
					Data16_g129074.TangentOS = In_TangentOS16_g129074;
					Data16_g129074.ViewDirWS = In_ViewDirWS16_g129074;
					Data16_g129074.VertexData = In_VertexData16_g129074;
					Data16_g129074.PhaseData = In_PhaseData16_g129074;
					Data16_g129074.BoundsData = In_BoundsData16_g129074;
					Data16_g129074.RotationData = In_RotationData16_g129074;
					}
					TVEModelData Data15_g129096 = Data16_g129074;
					float Out_Dummy15_g129096 = 0;
					float3 Out_PositionOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129096 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129096 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129096 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129096 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129096 = float3( 0,0,0 );
					float4 Out_VertexData15_g129096 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129096 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129096 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129096 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129096 = Data15_g129096.Dummy;
					Out_PositionOS15_g129096 = Data15_g129096.PositionOS;
					Out_PositionWS15_g129096 = Data15_g129096.PositionWS;
					Out_PositionWO15_g129096 = Data15_g129096.PositionWO;
					Out_PositionRawOS15_g129096 = Data15_g129096.PositionRawOS;
					Out_PositionAddOS15_g129096 = Data15_g129096.PositionAddOS;
					Out_PivotOS15_g129096 = Data15_g129096.PivotOS;
					Out_PivotWS15_g129096 = Data15_g129096.PivotWS;
					Out_PivotWO15_g129096 = Data15_g129096.PivotWO;
					Out_NormalOS15_g129096 = Data15_g129096.NormalOS;
					Out_NormalWS15_g129096 = Data15_g129096.NormalWS;
					Out_NormalRawOS15_g129096 = Data15_g129096.NormalRawOS;
					Out_NormalRawWS15_g129096 = Data15_g129096.NormalRawWS;
					Out_TangentOS15_g129096 = Data15_g129096.TangentOS;
					Out_ViewDirWS15_g129096 = Data15_g129096.ViewDirWS;
					Out_VertexData15_g129096 = Data15_g129096.VertexData;
					Out_PhaseData15_g129096 = Data15_g129096.PhaseData;
					Out_BoundsData15_g129096 = Data15_g129096.BoundsData;
					Out_RotationData15_g129096 = Data15_g129096.RotationData;
					}
					float3 temp_output_31_0_g129094 = Out_PositionOS15_g129096;
					
					float3 temp_output_31_20_g129094 = Out_NormalOS15_g129096;
					
					float4 appendResult120_g129094 = (float4(cross( temp_output_31_20_g129094 , float3( 0, 0, 1 ) ) , -1.0));
					float4 temp_output_6_0_g129107 = appendResult120_g129094;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129107 = ( temp_output_6_0_g129107 + 0.0 );
					#else
					float4 staticSwitch14_g129107 = temp_output_6_0_g129107;
					#endif
					
					o.ase_texcoord3.xyz = ase_positionWS;
					o.ase_texcoord4.xyz = ase_normalWS;
					float3 ase_tangentWS = UnityObjectToWorldDir( v.tangent );
					o.ase_texcoord5.xyz = ase_tangentWS;
					float ase_tangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
					float3 ase_bitangentWS = cross( ase_normalWS, ase_tangentWS ) * ase_tangentSign;
					o.ase_texcoord6.xyz = ase_bitangentWS;
					o.ase_texcoord7.xyz = vertexToFrag73_g114306;
					
					o.ase_color = v.ase_color;
					o.ase_texcoord8 = v.texcoord.xyzw;
					
					//setting value to unused interpolator channels and avoid initialization warnings
					o.ase_texcoord3.w = 0;
					o.ase_texcoord4.w = 0;
					o.ase_texcoord5.w = 0;
					o.ase_texcoord6.w = 0;
					o.ase_texcoord7.w = 0;

					#ifdef ASE_ABSOLUTE_VERTEX_POS
						float3 defaultVertexValue = v.vertex.xyz;
					#else
						float3 defaultVertexValue = float3(0, 0, 0);
					#endif
					float3 vertexValue = temp_output_31_0_g129094;
					#ifdef ASE_ABSOLUTE_VERTEX_POS
						v.vertex.xyz = vertexValue;
					#else
						v.vertex.xyz += vertexValue;
					#endif
					v.vertex.w = 1;
					v.normal = temp_output_31_20_g129094;
					v.tangent = staticSwitch14_g129107;

					#ifdef EDITOR_VISUALIZATION
						o.vizUV = 0;
						o.lightCoord = 0;
						if (unity_VisualizationMode == EDITORVIZ_TEXTURE)
							o.vizUV = UnityMetaVizUV(unity_EditorViz_UVIndex, v.texcoord.xy, v.texcoord1.xy, v.texcoord2.xy, unity_EditorViz_Texture_ST);
						else if (unity_VisualizationMode == EDITORVIZ_SHOWLIGHTMASK)
						{
							o.vizUV = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
							o.lightCoord = mul(unity_EditorViz_WorldToLight, mul(unity_ObjectToWorld, float4(v.vertex.xyz, 1)));
						}
					#endif

					o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy, unity_LightmapST, unity_DynamicLightmapST);
					return o;
				}

				#if defined(ASE_TESSELLATION)
				struct VertexControl
				{
					float4 vertex : INTERNALTESSPOS;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;

					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct TessellationFactors
				{
					float edge[3] : SV_TessFactor;
					float inside : SV_InsideTessFactor;
				};

				VertexControl vert ( appdata v )
				{
					VertexControl o;
					UNITY_SETUP_INSTANCE_ID(v);
					UNITY_TRANSFER_INSTANCE_ID(v, o);
					o.vertex = v.vertex;
					o.tangent = v.tangent;
					o.normal = v.normal;
					o.texcoord1 = v.texcoord1;
					o.texcoord2 = v.texcoord2;
					o.ase_color = v.ase_color;
					return o;
				}

				TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
				{
					TessellationFactors o;
					float4 tf = 1;
					float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
					float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
					#if defined(ASE_FIXED_TESSELLATION)
					tf = FixedTess( tessValue );
					#elif defined(ASE_DISTANCE_TESSELLATION)
					tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
					#elif defined(ASE_LENGTH_TESSELLATION)
					tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
					#elif defined(ASE_LENGTH_CULL_TESSELLATION)
					tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
					#endif
					o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
					return o;
				}

				[domain("tri")]
				[partitioning("fractional_odd")]
				[outputtopology("triangle_cw")]
				[patchconstantfunc("TessellationFunction")]
				[outputcontrolpoints(3)]
				VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
				{
				   return patch[id];
				}

				[domain("tri")]
				v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
				{
					appdata o = (appdata) 0;
					o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
					o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
					o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
					o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
					o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
					o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
					#if defined(ASE_PHONG_TESSELLATION)
					float3 pp[3];
					for (int i = 0; i < 3; ++i)
						pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
					float phongStrength = _TessPhongStrength;
					o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
					#endif
					UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
					return VertexFunction(o);
				}
				#else
				v2f vert( appdata v )
				{
					return VertexFunction( v );
				}
				#endif

				half4 frag( v2f IN  ) : SV_Target
				{
					UNITY_SETUP_INSTANCE_ID(IN);

					#ifdef LOD_FADE_CROSSFADE
						UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
					#endif

					#if defined(ASE_LIGHTING_SIMPLE)
						SurfaceOutput o = (SurfaceOutput)0;
					#else
						#if defined(_SPECULAR_SETUP)
							SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
						#else
							SurfaceOutputStandard o = (SurfaceOutputStandard)0;
						#endif
					#endif

					float localBreakData4_g129098 = ( 0.0 );
					float localCompData3_g129056 = ( 0.0 );
					TVEVisualData Data3_g129056 = (TVEVisualData)0;
					half Dummy594_g129055 = ( _CutoutCategory + _CutoutEnd + _CutoutSpace + _CutoutBakeInfo );
					float In_Dummy3_g129056 = Dummy594_g129055;
					float localBreakData4_g129058 = ( 0.0 );
					float localCompData3_g129054 = ( 0.0 );
					TVEVisualData Data3_g129054 = (TVEVisualData)0;
					half Dummy145_g129039 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveFlagMode );
					float In_Dummy3_g129054 = Dummy145_g129039;
					float localBreakData4_g129043 = ( 0.0 );
					float localCompData3_g129012 = ( 0.0 );
					TVEVisualData Data3_g129012 = (TVEVisualData)0;
					half Dummy594_g129010 = ( _WetnessCategory + _WetnessEnd + _WetnessBakeInfo );
					float In_Dummy3_g129012 = Dummy594_g129010;
					float localBreakData4_g129011 = ( 0.0 );
					float localCompData3_g128976 = ( 0.0 );
					TVEVisualData Data3_g128976 = (TVEVisualData)0;
					half Dummy594_g128973 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayBakeInfo );
					float In_Dummy3_g128976 = Dummy594_g128973;
					float localBreakData4_g128974 = ( 0.0 );
					float localCompData3_g128952 = ( 0.0 );
					TVEVisualData Data3_g128952 = (TVEVisualData)0;
					half Dummy205_g128949 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessBakeInfo );
					float In_Dummy3_g128952 = Dummy205_g128949;
					float localBreakData4_g128951 = ( 0.0 );
					float localCompData3_g128944 = ( 0.0 );
					TVEVisualData Data3_g128944 = (TVEVisualData)0;
					half Dummy205_g128924 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
					float In_Dummy3_g128944 = Dummy205_g128924;
					float localBreakData4_g128928 = ( 0.0 );
					float localCompData3_g128923 = ( 0.0 );
					TVEVisualData Data3_g128923 = (TVEVisualData)0;
					half Dummy9163_g128810 = ( _CategoryTerrain + _EndTerrain );
					float In_Dummy3_g128923 = Dummy9163_g128810;
					float localHeightBasedBlending7362_g128811 = ( 0.0 );
					float3 ase_positionWS = IN.ase_texcoord3.xyz;
					float4 appendResult9125_g128811 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
					float4 temp_output_35_0_g128903 = appendResult9125_g128811;
					float2 InputScale48_g128903 = (temp_output_35_0_g128903).zw;
					half2 FinalScale53_g128903 = ( 1.0 / InputScale48_g128903 );
					float2 InputPosition52_g128903 = (temp_output_35_0_g128903).xy;
					half2 FinalPosition58_g128903 = -( FinalScale53_g128903 * InputPosition52_g128903 );
					float2 temp_output_65_0_g128903 = ( ( (ase_positionWS).xz * FinalScale53_g128903 ) + FinalPosition58_g128903 );
					float4 temp_output_70_0_g128903 = _TerrainControlTex1_TexelSize;
					float2 InputTexelSize68_g128903 = (temp_output_70_0_g128903).zw;
					float2 temp_cast_0 = (1.0).xx;
					float2 InputTexelRecip69_g128903 = (temp_output_70_0_g128903).xy;
					float2 Terrain_Control_UV7873_g128811 = ( ( ( temp_output_65_0_g128903 / ( 1.0 / ( InputTexelSize68_g128903 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g128903 );
					half4 Terrain_Control_047365_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_047362_g128811 = Terrain_Control_047365_g128811;
					half4 Terrain_Control_087366_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_087362_g128811 = Terrain_Control_087366_g128811;
					half4 Terrain_Control_127712_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_127362_g128811 = Terrain_Control_127712_g128811;
					half4 Terrain_Control_167711_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_167362_g128811 = Terrain_Control_167711_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128840) = _TerrainShaderTex1;
					float localFilterTexture30_g128901 = ( 0.0 );
					SamplerState SS30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerDefault30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerPoint30_g128901 = sampler_Point_Repeat;
					SamplerState SamplerLow30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerMedium30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerHigh30_g128901 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS30_g128901 = SamplerDefault30_g128901;
					#if defined (TVE_FILTER_DEFAULT)
					    SS30_g128901 = SamplerDefault30_g128901;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS30_g128901 = SamplerPoint30_g128901;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS30_g128901 = SamplerLow30_g128901;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS30_g128901 = SamplerMedium30_g128901;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS30_g128901 = SamplerHigh30_g128901;
					#endif
					}
					SamplerState Sampler238_g128840 = SS30_g128901;
					half4 Input_Terrain_Coords_016785_g128811 = _TerrainCoord1;
					float4 temp_output_37_0_g128840 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128840 = temp_output_37_0_g128840;
					half3 Input_Position9197_g128811 = ase_positionWS;
					float3 temp_output_279_0_g128840 = Input_Position9197_g128811;
					half3 WorldPosition238_g128840 = temp_output_279_0_g128840;
					half4 localSamplePlanar2D238_g128840 = SamplePlanar2D( Texture238_g128840 , Sampler238_g128840 , Coords238_g128840 , WorldPosition238_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128840) = _TerrainShaderTex1;
					SamplerState Sampler246_g128840 = SS30_g128901;
					half4 Coords246_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition246_g128840 = temp_output_279_0_g128840;
					float3 ase_normalWS = IN.ase_texcoord4.xyz;
					half3 Input_Normal9199_g128811 = ase_normalWS;
					float3 temp_output_280_0_g128840 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128840 = temp_output_280_0_g128840;
					half4 localSamplePlanar3D246_g128840 = SamplePlanar3D( Texture246_g128840 , Sampler246_g128840 , Coords246_g128840 , WorldPosition246_g128840 , WorldNormal246_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128840) = _TerrainShaderTex1;
					SamplerState Sampler234_g128840 = SS30_g128901;
					float4 Coords234_g128840 = temp_output_37_0_g128840;
					float3 WorldPosition234_g128840 = temp_output_279_0_g128840;
					float4 localSampleStochastic2D234_g128840 = SampleStochastic2D( Texture234_g128840 , Sampler234_g128840 , Coords234_g128840 , WorldPosition234_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128840) = _TerrainShaderTex1;
					SamplerState Sampler263_g128840 = SS30_g128901;
					half4 Coords263_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition263_g128840 = temp_output_279_0_g128840;
					half3 WorldNormal263_g128840 = temp_output_280_0_g128840;
					half4 localSampleStochastic3D263_g128840 = SampleStochastic3D( Texture263_g128840 , Sampler263_g128840 , Coords263_g128840 , WorldPosition263_g128840 , WorldNormal263_g128840 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8639_g128811 = localSamplePlanar3D246_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8639_g128811 = localSampleStochastic2D234_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8639_g128811 = localSampleStochastic3D263_g128840;
					#else
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#endif
					float4 temp_output_7_0_g128905 = _TerrainShaderMin1;
					float4 temp_output_9_0_g128905 = ( staticSwitch8639_g128811 - temp_output_7_0_g128905 );
					float4 temp_output_6970_0_g128811 = saturate( ( ( temp_output_9_0_g128905 * _TerrainShaderRcp1 ) + 0.0001 ) );
					half4 Masks_015_g128816 = temp_output_6970_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128844) = _TerrainShaderTex2;
					SamplerState Sampler238_g128844 = SS30_g128901;
					half4 Input_Terrain_Coords_026787_g128811 = _TerrainCoord2;
					float4 temp_output_37_0_g128844 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128844 = temp_output_37_0_g128844;
					float3 temp_output_279_0_g128844 = Input_Position9197_g128811;
					half3 WorldPosition238_g128844 = temp_output_279_0_g128844;
					half4 localSamplePlanar2D238_g128844 = SamplePlanar2D( Texture238_g128844 , Sampler238_g128844 , Coords238_g128844 , WorldPosition238_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128844) = _TerrainShaderTex2;
					SamplerState Sampler246_g128844 = SS30_g128901;
					half4 Coords246_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition246_g128844 = temp_output_279_0_g128844;
					float3 temp_output_280_0_g128844 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128844 = temp_output_280_0_g128844;
					half4 localSamplePlanar3D246_g128844 = SamplePlanar3D( Texture246_g128844 , Sampler246_g128844 , Coords246_g128844 , WorldPosition246_g128844 , WorldNormal246_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128844) = _TerrainShaderTex2;
					SamplerState Sampler234_g128844 = SS30_g128901;
					float4 Coords234_g128844 = temp_output_37_0_g128844;
					float3 WorldPosition234_g128844 = temp_output_279_0_g128844;
					float4 localSampleStochastic2D234_g128844 = SampleStochastic2D( Texture234_g128844 , Sampler234_g128844 , Coords234_g128844 , WorldPosition234_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128844) = _TerrainShaderTex2;
					SamplerState Sampler263_g128844 = SS30_g128901;
					half4 Coords263_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition263_g128844 = temp_output_279_0_g128844;
					half3 WorldNormal263_g128844 = temp_output_280_0_g128844;
					half4 localSampleStochastic3D263_g128844 = SampleStochastic3D( Texture263_g128844 , Sampler263_g128844 , Coords263_g128844 , WorldPosition263_g128844 , WorldNormal263_g128844 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8640_g128811 = localSamplePlanar3D246_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8640_g128811 = localSampleStochastic2D234_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8640_g128811 = localSampleStochastic3D263_g128844;
					#else
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#endif
					float4 temp_output_7_0_g128906 = _TerrainShaderMin2;
					float4 temp_output_9_0_g128906 = ( staticSwitch8640_g128811 - temp_output_7_0_g128906 );
					float4 temp_output_6977_0_g128811 = saturate( ( ( temp_output_9_0_g128906 * _TerrainShaderRcp2 ) + 0.0001 ) );
					half4 Masks_0210_g128816 = temp_output_6977_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128849) = _TerrainShaderTex3;
					SamplerState Sampler238_g128849 = SS30_g128901;
					half4 Input_Terrain_Coords_036789_g128811 = _TerrainCoord3;
					float4 temp_output_37_0_g128849 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128849 = temp_output_37_0_g128849;
					float3 temp_output_279_0_g128849 = Input_Position9197_g128811;
					half3 WorldPosition238_g128849 = temp_output_279_0_g128849;
					half4 localSamplePlanar2D238_g128849 = SamplePlanar2D( Texture238_g128849 , Sampler238_g128849 , Coords238_g128849 , WorldPosition238_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128849) = _TerrainShaderTex3;
					SamplerState Sampler246_g128849 = SS30_g128901;
					half4 Coords246_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition246_g128849 = temp_output_279_0_g128849;
					float3 temp_output_280_0_g128849 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128849 = temp_output_280_0_g128849;
					half4 localSamplePlanar3D246_g128849 = SamplePlanar3D( Texture246_g128849 , Sampler246_g128849 , Coords246_g128849 , WorldPosition246_g128849 , WorldNormal246_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128849) = _TerrainShaderTex3;
					SamplerState Sampler234_g128849 = SS30_g128901;
					float4 Coords234_g128849 = temp_output_37_0_g128849;
					float3 WorldPosition234_g128849 = temp_output_279_0_g128849;
					float4 localSampleStochastic2D234_g128849 = SampleStochastic2D( Texture234_g128849 , Sampler234_g128849 , Coords234_g128849 , WorldPosition234_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128849) = _TerrainShaderTex3;
					SamplerState Sampler263_g128849 = SS30_g128901;
					half4 Coords263_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition263_g128849 = temp_output_279_0_g128849;
					half3 WorldNormal263_g128849 = temp_output_280_0_g128849;
					half4 localSampleStochastic3D263_g128849 = SampleStochastic3D( Texture263_g128849 , Sampler263_g128849 , Coords263_g128849 , WorldPosition263_g128849 , WorldNormal263_g128849 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8641_g128811 = localSamplePlanar3D246_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8641_g128811 = localSampleStochastic2D234_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8641_g128811 = localSampleStochastic3D263_g128849;
					#else
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#endif
					float4 temp_output_7_0_g128907 = _TerrainShaderMin3;
					float4 temp_output_9_0_g128907 = ( staticSwitch8641_g128811 - temp_output_7_0_g128907 );
					float4 temp_output_6978_0_g128811 = saturate( ( ( temp_output_9_0_g128907 * _TerrainShaderRcp3 ) + 0.0001 ) );
					half4 Masks_0312_g128816 = temp_output_6978_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128850) = _TerrainShaderTex4;
					SamplerState Sampler238_g128850 = SS30_g128901;
					half4 Input_Terrain_Coords_046791_g128811 = _TerrainCoord4;
					float4 temp_output_37_0_g128850 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128850 = temp_output_37_0_g128850;
					float3 temp_output_279_0_g128850 = Input_Position9197_g128811;
					half3 WorldPosition238_g128850 = temp_output_279_0_g128850;
					half4 localSamplePlanar2D238_g128850 = SamplePlanar2D( Texture238_g128850 , Sampler238_g128850 , Coords238_g128850 , WorldPosition238_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128850) = _TerrainShaderTex4;
					SamplerState Sampler246_g128850 = SS30_g128901;
					half4 Coords246_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition246_g128850 = temp_output_279_0_g128850;
					float3 temp_output_280_0_g128850 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128850 = temp_output_280_0_g128850;
					half4 localSamplePlanar3D246_g128850 = SamplePlanar3D( Texture246_g128850 , Sampler246_g128850 , Coords246_g128850 , WorldPosition246_g128850 , WorldNormal246_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128850) = _TerrainShaderTex4;
					SamplerState Sampler234_g128850 = SS30_g128901;
					float4 Coords234_g128850 = temp_output_37_0_g128850;
					float3 WorldPosition234_g128850 = temp_output_279_0_g128850;
					float4 localSampleStochastic2D234_g128850 = SampleStochastic2D( Texture234_g128850 , Sampler234_g128850 , Coords234_g128850 , WorldPosition234_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128850) = _TerrainShaderTex4;
					SamplerState Sampler263_g128850 = SS30_g128901;
					half4 Coords263_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition263_g128850 = temp_output_279_0_g128850;
					half3 WorldNormal263_g128850 = temp_output_280_0_g128850;
					half4 localSampleStochastic3D263_g128850 = SampleStochastic3D( Texture263_g128850 , Sampler263_g128850 , Coords263_g128850 , WorldPosition263_g128850 , WorldNormal263_g128850 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8642_g128811 = localSamplePlanar3D246_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8642_g128811 = localSampleStochastic2D234_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8642_g128811 = localSampleStochastic3D263_g128850;
					#else
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#endif
					float4 temp_output_7_0_g128908 = _TerrainShaderMin4;
					float4 temp_output_9_0_g128908 = ( staticSwitch8642_g128811 - temp_output_7_0_g128908 );
					float4 temp_output_6983_0_g128811 = saturate( ( ( temp_output_9_0_g128908 * _TerrainShaderRcp4 ) + 0.0001 ) );
					half4 Masks_0414_g128816 = temp_output_6983_0_g128811;
					float4 appendResult29_g128816 = (float4((Masks_015_g128816).z , (Masks_0210_g128816).z , (Masks_0312_g128816).z , (Masks_0414_g128816).z));
					half4 Control31_g128816 = Terrain_Control_047365_g128811;
					half4 Terrain_Height_047210_g128811 = ( appendResult29_g128816 * Control31_g128816 );
					float4 heights_047362_g128811 = Terrain_Height_047210_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128853) = _TerrainShaderTex5;
					SamplerState Sampler238_g128853 = SS30_g128901;
					half4 Input_Terrain_Coords_058750_g128811 = _TerrainCoord5;
					float4 temp_output_37_0_g128853 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128853 = temp_output_37_0_g128853;
					float3 temp_output_279_0_g128853 = Input_Position9197_g128811;
					half3 WorldPosition238_g128853 = temp_output_279_0_g128853;
					half4 localSamplePlanar2D238_g128853 = SamplePlanar2D( Texture238_g128853 , Sampler238_g128853 , Coords238_g128853 , WorldPosition238_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128853) = _TerrainShaderTex5;
					SamplerState Sampler246_g128853 = SS30_g128901;
					half4 Coords246_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition246_g128853 = temp_output_279_0_g128853;
					float3 temp_output_280_0_g128853 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128853 = temp_output_280_0_g128853;
					half4 localSamplePlanar3D246_g128853 = SamplePlanar3D( Texture246_g128853 , Sampler246_g128853 , Coords246_g128853 , WorldPosition246_g128853 , WorldNormal246_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128853) = _TerrainShaderTex5;
					SamplerState Sampler234_g128853 = SS30_g128901;
					float4 Coords234_g128853 = temp_output_37_0_g128853;
					float3 WorldPosition234_g128853 = temp_output_279_0_g128853;
					float4 localSampleStochastic2D234_g128853 = SampleStochastic2D( Texture234_g128853 , Sampler234_g128853 , Coords234_g128853 , WorldPosition234_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128853) = _TerrainShaderTex5;
					SamplerState Sampler263_g128853 = SS30_g128901;
					half4 Coords263_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition263_g128853 = temp_output_279_0_g128853;
					half3 WorldNormal263_g128853 = temp_output_280_0_g128853;
					half4 localSampleStochastic3D263_g128853 = SampleStochastic3D( Texture263_g128853 , Sampler263_g128853 , Coords263_g128853 , WorldPosition263_g128853 , WorldNormal263_g128853 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8710_g128811 = localSamplePlanar3D246_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8710_g128811 = localSampleStochastic2D234_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8710_g128811 = localSampleStochastic3D263_g128853;
					#else
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#endif
					float4 temp_output_7_0_g128909 = _TerrainShaderMin5;
					float4 temp_output_9_0_g128909 = ( staticSwitch8710_g128811 - temp_output_7_0_g128909 );
					float4 temp_output_8714_0_g128811 = saturate( ( ( temp_output_9_0_g128909 * _TerrainShaderRcp5 ) + 0.0001 ) );
					half4 Masks_015_g128824 = temp_output_8714_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128884) = _TerrainShaderTex6;
					SamplerState Sampler238_g128884 = SS30_g128901;
					half4 Input_Terrain_Coords_068751_g128811 = _TerrainCoord6;
					float4 temp_output_37_0_g128884 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128884 = temp_output_37_0_g128884;
					float3 temp_output_279_0_g128884 = Input_Position9197_g128811;
					half3 WorldPosition238_g128884 = temp_output_279_0_g128884;
					half4 localSamplePlanar2D238_g128884 = SamplePlanar2D( Texture238_g128884 , Sampler238_g128884 , Coords238_g128884 , WorldPosition238_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128884) = _TerrainShaderTex6;
					SamplerState Sampler246_g128884 = SS30_g128901;
					half4 Coords246_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition246_g128884 = temp_output_279_0_g128884;
					float3 temp_output_280_0_g128884 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128884 = temp_output_280_0_g128884;
					half4 localSamplePlanar3D246_g128884 = SamplePlanar3D( Texture246_g128884 , Sampler246_g128884 , Coords246_g128884 , WorldPosition246_g128884 , WorldNormal246_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128884) = _TerrainShaderTex6;
					SamplerState Sampler234_g128884 = SS30_g128901;
					float4 Coords234_g128884 = temp_output_37_0_g128884;
					float3 WorldPosition234_g128884 = temp_output_279_0_g128884;
					float4 localSampleStochastic2D234_g128884 = SampleStochastic2D( Texture234_g128884 , Sampler234_g128884 , Coords234_g128884 , WorldPosition234_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128884) = _TerrainShaderTex6;
					SamplerState Sampler263_g128884 = SS30_g128901;
					half4 Coords263_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition263_g128884 = temp_output_279_0_g128884;
					half3 WorldNormal263_g128884 = temp_output_280_0_g128884;
					half4 localSampleStochastic3D263_g128884 = SampleStochastic3D( Texture263_g128884 , Sampler263_g128884 , Coords263_g128884 , WorldPosition263_g128884 , WorldNormal263_g128884 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8711_g128811 = localSamplePlanar3D246_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8711_g128811 = localSampleStochastic2D234_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8711_g128811 = localSampleStochastic3D263_g128884;
					#else
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#endif
					float4 temp_output_7_0_g128910 = _TerrainShaderMin6;
					float4 temp_output_9_0_g128910 = ( staticSwitch8711_g128811 - temp_output_7_0_g128910 );
					float4 temp_output_8721_0_g128811 = saturate( ( ( temp_output_9_0_g128910 * _TerrainShaderRcp6 ) + 0.0001 ) );
					half4 Masks_0210_g128824 = temp_output_8721_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128885) = _TerrainShaderTex7;
					SamplerState Sampler238_g128885 = SS30_g128901;
					half4 Input_Terrain_Coords_078752_g128811 = _TerrainCoord7;
					float4 temp_output_37_0_g128885 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128885 = temp_output_37_0_g128885;
					float3 temp_output_279_0_g128885 = Input_Position9197_g128811;
					half3 WorldPosition238_g128885 = temp_output_279_0_g128885;
					half4 localSamplePlanar2D238_g128885 = SamplePlanar2D( Texture238_g128885 , Sampler238_g128885 , Coords238_g128885 , WorldPosition238_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128885) = _TerrainShaderTex7;
					SamplerState Sampler246_g128885 = SS30_g128901;
					half4 Coords246_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition246_g128885 = temp_output_279_0_g128885;
					float3 temp_output_280_0_g128885 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128885 = temp_output_280_0_g128885;
					half4 localSamplePlanar3D246_g128885 = SamplePlanar3D( Texture246_g128885 , Sampler246_g128885 , Coords246_g128885 , WorldPosition246_g128885 , WorldNormal246_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128885) = _TerrainShaderTex7;
					SamplerState Sampler234_g128885 = SS30_g128901;
					float4 Coords234_g128885 = temp_output_37_0_g128885;
					float3 WorldPosition234_g128885 = temp_output_279_0_g128885;
					float4 localSampleStochastic2D234_g128885 = SampleStochastic2D( Texture234_g128885 , Sampler234_g128885 , Coords234_g128885 , WorldPosition234_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128885) = _TerrainShaderTex7;
					SamplerState Sampler263_g128885 = SS30_g128901;
					half4 Coords263_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition263_g128885 = temp_output_279_0_g128885;
					half3 WorldNormal263_g128885 = temp_output_280_0_g128885;
					half4 localSampleStochastic3D263_g128885 = SampleStochastic3D( Texture263_g128885 , Sampler263_g128885 , Coords263_g128885 , WorldPosition263_g128885 , WorldNormal263_g128885 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8712_g128811 = localSamplePlanar3D246_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8712_g128811 = localSampleStochastic2D234_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8712_g128811 = localSampleStochastic3D263_g128885;
					#else
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#endif
					float4 temp_output_7_0_g128911 = _TerrainShaderMin7;
					float4 temp_output_9_0_g128911 = ( staticSwitch8712_g128811 - temp_output_7_0_g128911 );
					float4 temp_output_8724_0_g128811 = saturate( ( ( temp_output_9_0_g128911 * _TerrainShaderRcp7 ) + 0.0001 ) );
					half4 Masks_0312_g128824 = temp_output_8724_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128886) = _TerrainShaderTex8;
					SamplerState Sampler238_g128886 = SS30_g128901;
					half4 Input_Terrain_Coords_088749_g128811 = _TerrainCoord8;
					float4 temp_output_37_0_g128886 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128886 = temp_output_37_0_g128886;
					float3 temp_output_279_0_g128886 = Input_Position9197_g128811;
					half3 WorldPosition238_g128886 = temp_output_279_0_g128886;
					half4 localSamplePlanar2D238_g128886 = SamplePlanar2D( Texture238_g128886 , Sampler238_g128886 , Coords238_g128886 , WorldPosition238_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128886) = _TerrainShaderTex8;
					SamplerState Sampler246_g128886 = SS30_g128901;
					half4 Coords246_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition246_g128886 = temp_output_279_0_g128886;
					float3 temp_output_280_0_g128886 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128886 = temp_output_280_0_g128886;
					half4 localSamplePlanar3D246_g128886 = SamplePlanar3D( Texture246_g128886 , Sampler246_g128886 , Coords246_g128886 , WorldPosition246_g128886 , WorldNormal246_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128886) = _TerrainShaderTex8;
					SamplerState Sampler234_g128886 = SS30_g128901;
					float4 Coords234_g128886 = temp_output_37_0_g128886;
					float3 WorldPosition234_g128886 = temp_output_279_0_g128886;
					float4 localSampleStochastic2D234_g128886 = SampleStochastic2D( Texture234_g128886 , Sampler234_g128886 , Coords234_g128886 , WorldPosition234_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128886) = _TerrainShaderTex8;
					SamplerState Sampler263_g128886 = SS30_g128901;
					half4 Coords263_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition263_g128886 = temp_output_279_0_g128886;
					half3 WorldNormal263_g128886 = temp_output_280_0_g128886;
					half4 localSampleStochastic3D263_g128886 = SampleStochastic3D( Texture263_g128886 , Sampler263_g128886 , Coords263_g128886 , WorldPosition263_g128886 , WorldNormal263_g128886 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8713_g128811 = localSamplePlanar3D246_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8713_g128811 = localSampleStochastic2D234_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8713_g128811 = localSampleStochastic3D263_g128886;
					#else
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#endif
					float4 temp_output_7_0_g128912 = _TerrainShaderMin8;
					float4 temp_output_9_0_g128912 = ( staticSwitch8713_g128811 - temp_output_7_0_g128912 );
					float4 temp_output_8727_0_g128811 = saturate( ( ( temp_output_9_0_g128912 * _TerrainShaderRcp8 ) + 0.0001 ) );
					half4 Masks_0414_g128824 = temp_output_8727_0_g128811;
					float4 appendResult29_g128824 = (float4((Masks_015_g128824).z , (Masks_0210_g128824).z , (Masks_0312_g128824).z , (Masks_0414_g128824).z));
					half4 Control31_g128824 = Terrain_Control_087366_g128811;
					half4 Terrain_Height_088731_g128811 = ( appendResult29_g128824 * Control31_g128824 );
					float4 heights_087362_g128811 = Terrain_Height_088731_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128856) = _TerrainShaderTex9;
					SamplerState Sampler238_g128856 = SS30_g128901;
					half4 Input_Terrain_Coords_098833_g128811 = _TerrainCoord9;
					float4 temp_output_37_0_g128856 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128856 = temp_output_37_0_g128856;
					float3 temp_output_279_0_g128856 = Input_Position9197_g128811;
					half3 WorldPosition238_g128856 = temp_output_279_0_g128856;
					half4 localSamplePlanar2D238_g128856 = SamplePlanar2D( Texture238_g128856 , Sampler238_g128856 , Coords238_g128856 , WorldPosition238_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128856) = _TerrainShaderTex9;
					SamplerState Sampler246_g128856 = SS30_g128901;
					half4 Coords246_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition246_g128856 = temp_output_279_0_g128856;
					float3 temp_output_280_0_g128856 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128856 = temp_output_280_0_g128856;
					half4 localSamplePlanar3D246_g128856 = SamplePlanar3D( Texture246_g128856 , Sampler246_g128856 , Coords246_g128856 , WorldPosition246_g128856 , WorldNormal246_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128856) = _TerrainShaderTex9;
					SamplerState Sampler234_g128856 = SS30_g128901;
					float4 Coords234_g128856 = temp_output_37_0_g128856;
					float3 WorldPosition234_g128856 = temp_output_279_0_g128856;
					float4 localSampleStochastic2D234_g128856 = SampleStochastic2D( Texture234_g128856 , Sampler234_g128856 , Coords234_g128856 , WorldPosition234_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128856) = _TerrainShaderTex9;
					SamplerState Sampler263_g128856 = SS30_g128901;
					half4 Coords263_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition263_g128856 = temp_output_279_0_g128856;
					half3 WorldNormal263_g128856 = temp_output_280_0_g128856;
					half4 localSampleStochastic3D263_g128856 = SampleStochastic3D( Texture263_g128856 , Sampler263_g128856 , Coords263_g128856 , WorldPosition263_g128856 , WorldNormal263_g128856 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8878_g128811 = localSamplePlanar3D246_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8878_g128811 = localSampleStochastic2D234_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8878_g128811 = localSampleStochastic3D263_g128856;
					#else
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#endif
					float4 temp_output_7_0_g128913 = _TerrainShaderMin9;
					float4 temp_output_9_0_g128913 = ( staticSwitch8878_g128811 - temp_output_7_0_g128913 );
					float4 temp_output_8815_0_g128811 = saturate( ( ( temp_output_9_0_g128913 * _TerrainShaderRcp9 ) + 0.0001 ) );
					half4 Masks_015_g128830 = temp_output_8815_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128866) = _TerrainShaderTex10;
					SamplerState Sampler238_g128866 = SS30_g128901;
					half4 Input_Terrain_Coords_108834_g128811 = _TerrainCoord10;
					float4 temp_output_37_0_g128866 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128866 = temp_output_37_0_g128866;
					float3 temp_output_279_0_g128866 = Input_Position9197_g128811;
					half3 WorldPosition238_g128866 = temp_output_279_0_g128866;
					half4 localSamplePlanar2D238_g128866 = SamplePlanar2D( Texture238_g128866 , Sampler238_g128866 , Coords238_g128866 , WorldPosition238_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128866) = _TerrainShaderTex10;
					SamplerState Sampler246_g128866 = SS30_g128901;
					half4 Coords246_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition246_g128866 = temp_output_279_0_g128866;
					float3 temp_output_280_0_g128866 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128866 = temp_output_280_0_g128866;
					half4 localSamplePlanar3D246_g128866 = SamplePlanar3D( Texture246_g128866 , Sampler246_g128866 , Coords246_g128866 , WorldPosition246_g128866 , WorldNormal246_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128866) = _TerrainShaderTex10;
					SamplerState Sampler234_g128866 = SS30_g128901;
					float4 Coords234_g128866 = temp_output_37_0_g128866;
					float3 WorldPosition234_g128866 = temp_output_279_0_g128866;
					float4 localSampleStochastic2D234_g128866 = SampleStochastic2D( Texture234_g128866 , Sampler234_g128866 , Coords234_g128866 , WorldPosition234_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128866) = _TerrainShaderTex10;
					SamplerState Sampler263_g128866 = SS30_g128901;
					half4 Coords263_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition263_g128866 = temp_output_279_0_g128866;
					half3 WorldNormal263_g128866 = temp_output_280_0_g128866;
					half4 localSampleStochastic3D263_g128866 = SampleStochastic3D( Texture263_g128866 , Sampler263_g128866 , Coords263_g128866 , WorldPosition263_g128866 , WorldNormal263_g128866 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8860_g128811 = localSamplePlanar3D246_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8860_g128811 = localSampleStochastic2D234_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8860_g128811 = localSampleStochastic3D263_g128866;
					#else
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#endif
					float4 temp_output_7_0_g128914 = _TerrainShaderMin10;
					float4 temp_output_9_0_g128914 = ( staticSwitch8860_g128811 - temp_output_7_0_g128914 );
					float4 temp_output_8818_0_g128811 = saturate( ( ( temp_output_9_0_g128914 * _TerrainShaderRcp10 ) + 0.0001 ) );
					half4 Masks_0210_g128830 = temp_output_8818_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128867) = _TerrainShaderTex11;
					SamplerState Sampler238_g128867 = SS30_g128901;
					half4 Input_Terrain_Coords_118835_g128811 = _TerrainCoord11;
					float4 temp_output_37_0_g128867 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128867 = temp_output_37_0_g128867;
					float3 temp_output_279_0_g128867 = Input_Position9197_g128811;
					half3 WorldPosition238_g128867 = temp_output_279_0_g128867;
					half4 localSamplePlanar2D238_g128867 = SamplePlanar2D( Texture238_g128867 , Sampler238_g128867 , Coords238_g128867 , WorldPosition238_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128867) = _TerrainShaderTex11;
					SamplerState Sampler246_g128867 = SS30_g128901;
					half4 Coords246_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition246_g128867 = temp_output_279_0_g128867;
					float3 temp_output_280_0_g128867 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128867 = temp_output_280_0_g128867;
					half4 localSamplePlanar3D246_g128867 = SamplePlanar3D( Texture246_g128867 , Sampler246_g128867 , Coords246_g128867 , WorldPosition246_g128867 , WorldNormal246_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128867) = _TerrainShaderTex11;
					SamplerState Sampler234_g128867 = SS30_g128901;
					float4 Coords234_g128867 = temp_output_37_0_g128867;
					float3 WorldPosition234_g128867 = temp_output_279_0_g128867;
					float4 localSampleStochastic2D234_g128867 = SampleStochastic2D( Texture234_g128867 , Sampler234_g128867 , Coords234_g128867 , WorldPosition234_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128867) = _TerrainShaderTex11;
					SamplerState Sampler263_g128867 = SS30_g128901;
					half4 Coords263_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition263_g128867 = temp_output_279_0_g128867;
					half3 WorldNormal263_g128867 = temp_output_280_0_g128867;
					half4 localSampleStochastic3D263_g128867 = SampleStochastic3D( Texture263_g128867 , Sampler263_g128867 , Coords263_g128867 , WorldPosition263_g128867 , WorldNormal263_g128867 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8861_g128811 = localSamplePlanar3D246_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8861_g128811 = localSampleStochastic2D234_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8861_g128811 = localSampleStochastic3D263_g128867;
					#else
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#endif
					float4 temp_output_7_0_g128915 = _TerrainShaderMin11;
					float4 temp_output_9_0_g128915 = ( staticSwitch8861_g128811 - temp_output_7_0_g128915 );
					float4 temp_output_8819_0_g128811 = saturate( ( ( temp_output_9_0_g128915 * _TerrainShaderRcp11 ) + 0.0001 ) );
					half4 Masks_0312_g128830 = temp_output_8819_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128868) = _TerrainShaderTex12;
					SamplerState Sampler238_g128868 = SS30_g128901;
					half4 Input_Terrain_Coords_128836_g128811 = _TerrainCoord12;
					float4 temp_output_37_0_g128868 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128868 = temp_output_37_0_g128868;
					float3 temp_output_279_0_g128868 = Input_Position9197_g128811;
					half3 WorldPosition238_g128868 = temp_output_279_0_g128868;
					half4 localSamplePlanar2D238_g128868 = SamplePlanar2D( Texture238_g128868 , Sampler238_g128868 , Coords238_g128868 , WorldPosition238_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128868) = _TerrainShaderTex12;
					SamplerState Sampler246_g128868 = SS30_g128901;
					half4 Coords246_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition246_g128868 = temp_output_279_0_g128868;
					float3 temp_output_280_0_g128868 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128868 = temp_output_280_0_g128868;
					half4 localSamplePlanar3D246_g128868 = SamplePlanar3D( Texture246_g128868 , Sampler246_g128868 , Coords246_g128868 , WorldPosition246_g128868 , WorldNormal246_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128868) = _TerrainShaderTex12;
					SamplerState Sampler234_g128868 = SS30_g128901;
					float4 Coords234_g128868 = temp_output_37_0_g128868;
					float3 WorldPosition234_g128868 = temp_output_279_0_g128868;
					float4 localSampleStochastic2D234_g128868 = SampleStochastic2D( Texture234_g128868 , Sampler234_g128868 , Coords234_g128868 , WorldPosition234_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128868) = _TerrainShaderTex12;
					SamplerState Sampler263_g128868 = SS30_g128901;
					half4 Coords263_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition263_g128868 = temp_output_279_0_g128868;
					half3 WorldNormal263_g128868 = temp_output_280_0_g128868;
					half4 localSampleStochastic3D263_g128868 = SampleStochastic3D( Texture263_g128868 , Sampler263_g128868 , Coords263_g128868 , WorldPosition263_g128868 , WorldNormal263_g128868 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8879_g128811 = localSamplePlanar3D246_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8879_g128811 = localSampleStochastic2D234_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8879_g128811 = localSampleStochastic3D263_g128868;
					#else
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#endif
					float4 temp_output_7_0_g128916 = _TerrainShaderMin12;
					float4 temp_output_9_0_g128916 = ( staticSwitch8879_g128811 - temp_output_7_0_g128916 );
					float4 temp_output_8820_0_g128811 = saturate( ( ( temp_output_9_0_g128916 * _TerrainShaderRcp12 ) + 0.0001 ) );
					half4 Masks_0414_g128830 = temp_output_8820_0_g128811;
					float4 appendResult29_g128830 = (float4((Masks_015_g128830).z , (Masks_0210_g128830).z , (Masks_0312_g128830).z , (Masks_0414_g128830).z));
					half4 Control31_g128830 = Terrain_Control_127712_g128811;
					half4 Terrain_Height_128870_g128811 = ( appendResult29_g128830 * Control31_g128830 );
					float4 heights_127362_g128811 = Terrain_Height_128870_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128864) = _TerrainShaderTex13;
					SamplerState Sampler238_g128864 = SS30_g128901;
					half4 Input_Terrain_Coords_138960_g128811 = _TerrainCoord13;
					float4 temp_output_37_0_g128864 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128864 = temp_output_37_0_g128864;
					float3 temp_output_279_0_g128864 = Input_Position9197_g128811;
					half3 WorldPosition238_g128864 = temp_output_279_0_g128864;
					half4 localSamplePlanar2D238_g128864 = SamplePlanar2D( Texture238_g128864 , Sampler238_g128864 , Coords238_g128864 , WorldPosition238_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128864) = _TerrainShaderTex13;
					SamplerState Sampler246_g128864 = SS30_g128901;
					half4 Coords246_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition246_g128864 = temp_output_279_0_g128864;
					float3 temp_output_280_0_g128864 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128864 = temp_output_280_0_g128864;
					half4 localSamplePlanar3D246_g128864 = SamplePlanar3D( Texture246_g128864 , Sampler246_g128864 , Coords246_g128864 , WorldPosition246_g128864 , WorldNormal246_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128864) = _TerrainShaderTex13;
					SamplerState Sampler234_g128864 = SS30_g128901;
					float4 Coords234_g128864 = temp_output_37_0_g128864;
					float3 WorldPosition234_g128864 = temp_output_279_0_g128864;
					float4 localSampleStochastic2D234_g128864 = SampleStochastic2D( Texture234_g128864 , Sampler234_g128864 , Coords234_g128864 , WorldPosition234_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128864) = _TerrainShaderTex13;
					SamplerState Sampler263_g128864 = SS30_g128901;
					half4 Coords263_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition263_g128864 = temp_output_279_0_g128864;
					half3 WorldNormal263_g128864 = temp_output_280_0_g128864;
					half4 localSampleStochastic3D263_g128864 = SampleStochastic3D( Texture263_g128864 , Sampler263_g128864 , Coords263_g128864 , WorldPosition263_g128864 , WorldNormal263_g128864 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch9000_g128811 = localSamplePlanar3D246_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch9000_g128811 = localSampleStochastic2D234_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch9000_g128811 = localSampleStochastic3D263_g128864;
					#else
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#endif
					float4 temp_output_7_0_g128917 = _TerrainShaderMin13;
					float4 temp_output_9_0_g128917 = ( staticSwitch9000_g128811 - temp_output_7_0_g128917 );
					float4 temp_output_8931_0_g128811 = saturate( ( ( temp_output_9_0_g128917 * _TerrainShaderRcp13 ) + 0.0001 ) );
					half4 Masks_015_g128836 = temp_output_8931_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128875) = _TerrainShaderTex14;
					SamplerState Sampler238_g128875 = SS30_g128901;
					half4 Input_Terrain_Coords_148961_g128811 = _TerrainCoord14;
					float4 temp_output_37_0_g128875 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128875 = temp_output_37_0_g128875;
					float3 temp_output_279_0_g128875 = Input_Position9197_g128811;
					half3 WorldPosition238_g128875 = temp_output_279_0_g128875;
					half4 localSamplePlanar2D238_g128875 = SamplePlanar2D( Texture238_g128875 , Sampler238_g128875 , Coords238_g128875 , WorldPosition238_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128875) = _TerrainShaderTex14;
					SamplerState Sampler246_g128875 = SS30_g128901;
					half4 Coords246_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition246_g128875 = temp_output_279_0_g128875;
					float3 temp_output_280_0_g128875 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128875 = temp_output_280_0_g128875;
					half4 localSamplePlanar3D246_g128875 = SamplePlanar3D( Texture246_g128875 , Sampler246_g128875 , Coords246_g128875 , WorldPosition246_g128875 , WorldNormal246_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128875) = _TerrainShaderTex14;
					SamplerState Sampler234_g128875 = SS30_g128901;
					float4 Coords234_g128875 = temp_output_37_0_g128875;
					float3 WorldPosition234_g128875 = temp_output_279_0_g128875;
					float4 localSampleStochastic2D234_g128875 = SampleStochastic2D( Texture234_g128875 , Sampler234_g128875 , Coords234_g128875 , WorldPosition234_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128875) = _TerrainShaderTex14;
					SamplerState Sampler263_g128875 = SS30_g128901;
					half4 Coords263_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition263_g128875 = temp_output_279_0_g128875;
					half3 WorldNormal263_g128875 = temp_output_280_0_g128875;
					half4 localSampleStochastic3D263_g128875 = SampleStochastic3D( Texture263_g128875 , Sampler263_g128875 , Coords263_g128875 , WorldPosition263_g128875 , WorldNormal263_g128875 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch9001_g128811 = localSamplePlanar3D246_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch9001_g128811 = localSampleStochastic2D234_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch9001_g128811 = localSampleStochastic3D263_g128875;
					#else
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#endif
					float4 temp_output_7_0_g128918 = _TerrainShaderMin14;
					float4 temp_output_9_0_g128918 = ( staticSwitch9001_g128811 - temp_output_7_0_g128918 );
					float4 temp_output_8934_0_g128811 = saturate( ( ( temp_output_9_0_g128918 * _TerrainShaderRcp14 ) + 0.0001 ) );
					half4 Masks_0210_g128836 = temp_output_8934_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128876) = _TerrainShaderTex15;
					SamplerState Sampler238_g128876 = SS30_g128901;
					half4 Input_Terrain_Coords_158962_g128811 = _TerrainCoord15;
					float4 temp_output_37_0_g128876 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128876 = temp_output_37_0_g128876;
					float3 temp_output_279_0_g128876 = Input_Position9197_g128811;
					half3 WorldPosition238_g128876 = temp_output_279_0_g128876;
					half4 localSamplePlanar2D238_g128876 = SamplePlanar2D( Texture238_g128876 , Sampler238_g128876 , Coords238_g128876 , WorldPosition238_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128876) = _TerrainShaderTex15;
					SamplerState Sampler246_g128876 = SS30_g128901;
					half4 Coords246_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition246_g128876 = temp_output_279_0_g128876;
					float3 temp_output_280_0_g128876 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128876 = temp_output_280_0_g128876;
					half4 localSamplePlanar3D246_g128876 = SamplePlanar3D( Texture246_g128876 , Sampler246_g128876 , Coords246_g128876 , WorldPosition246_g128876 , WorldNormal246_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128876) = _TerrainShaderTex15;
					SamplerState Sampler234_g128876 = SS30_g128901;
					float4 Coords234_g128876 = temp_output_37_0_g128876;
					float3 WorldPosition234_g128876 = temp_output_279_0_g128876;
					float4 localSampleStochastic2D234_g128876 = SampleStochastic2D( Texture234_g128876 , Sampler234_g128876 , Coords234_g128876 , WorldPosition234_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128876) = _TerrainShaderTex15;
					SamplerState Sampler263_g128876 = SS30_g128901;
					half4 Coords263_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition263_g128876 = temp_output_279_0_g128876;
					half3 WorldNormal263_g128876 = temp_output_280_0_g128876;
					half4 localSampleStochastic3D263_g128876 = SampleStochastic3D( Texture263_g128876 , Sampler263_g128876 , Coords263_g128876 , WorldPosition263_g128876 , WorldNormal263_g128876 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch9002_g128811 = localSamplePlanar3D246_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch9002_g128811 = localSampleStochastic2D234_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch9002_g128811 = localSampleStochastic3D263_g128876;
					#else
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#endif
					float4 temp_output_7_0_g128919 = _TerrainShaderMin15;
					float4 temp_output_9_0_g128919 = ( staticSwitch9002_g128811 - temp_output_7_0_g128919 );
					float4 temp_output_8935_0_g128811 = saturate( ( ( temp_output_9_0_g128919 * _TerrainShaderRcp15 ) + 0.0001 ) );
					half4 Masks_0312_g128836 = temp_output_8935_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128877) = _TerrainShaderTex16;
					SamplerState Sampler238_g128877 = SS30_g128901;
					half4 Input_Terrain_Coords_168959_g128811 = _TerrainCoord16;
					float4 temp_output_37_0_g128877 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128877 = temp_output_37_0_g128877;
					float3 temp_output_279_0_g128877 = Input_Position9197_g128811;
					half3 WorldPosition238_g128877 = temp_output_279_0_g128877;
					half4 localSamplePlanar2D238_g128877 = SamplePlanar2D( Texture238_g128877 , Sampler238_g128877 , Coords238_g128877 , WorldPosition238_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128877) = _TerrainShaderTex16;
					SamplerState Sampler246_g128877 = SS30_g128901;
					half4 Coords246_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition246_g128877 = temp_output_279_0_g128877;
					float3 temp_output_280_0_g128877 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128877 = temp_output_280_0_g128877;
					half4 localSamplePlanar3D246_g128877 = SamplePlanar3D( Texture246_g128877 , Sampler246_g128877 , Coords246_g128877 , WorldPosition246_g128877 , WorldNormal246_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128877) = _TerrainShaderTex16;
					SamplerState Sampler234_g128877 = SS30_g128901;
					float4 Coords234_g128877 = temp_output_37_0_g128877;
					float3 WorldPosition234_g128877 = temp_output_279_0_g128877;
					float4 localSampleStochastic2D234_g128877 = SampleStochastic2D( Texture234_g128877 , Sampler234_g128877 , Coords234_g128877 , WorldPosition234_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128877) = _TerrainShaderTex16;
					SamplerState Sampler263_g128877 = SS30_g128901;
					half4 Coords263_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition263_g128877 = temp_output_279_0_g128877;
					half3 WorldNormal263_g128877 = temp_output_280_0_g128877;
					half4 localSampleStochastic3D263_g128877 = SampleStochastic3D( Texture263_g128877 , Sampler263_g128877 , Coords263_g128877 , WorldPosition263_g128877 , WorldNormal263_g128877 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch9003_g128811 = localSamplePlanar3D246_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch9003_g128811 = localSampleStochastic2D234_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch9003_g128811 = localSampleStochastic3D263_g128877;
					#else
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#endif
					float4 temp_output_7_0_g128920 = _TerrainShaderMin16;
					float4 temp_output_9_0_g128920 = ( staticSwitch9003_g128811 - temp_output_7_0_g128920 );
					float4 temp_output_8936_0_g128811 = saturate( ( ( temp_output_9_0_g128920 * _TerrainShaderRcp16 ) + 0.0001 ) );
					half4 Masks_0414_g128836 = temp_output_8936_0_g128811;
					float4 appendResult29_g128836 = (float4((Masks_015_g128836).z , (Masks_0210_g128836).z , (Masks_0312_g128836).z , (Masks_0414_g128836).z));
					half4 Control31_g128836 = Terrain_Control_167711_g128811;
					half4 Terrain_Height_169015_g128811 = ( appendResult29_g128836 * Control31_g128836 );
					float4 heights_167362_g128811 = Terrain_Height_169015_g128811;
					float heightTransition7362_g128811 = ( 1.0 - _TerrainHeightBlendValue );
					float4 weights_047362_g128811 = float4( 0,0,0,0 );
					float4 weights_087362_g128811 = float4( 0,0,0,0 );
					float4 weights_127362_g128811 = float4( 0,0,0,0 );
					float4 weights_167362_g128811 = float4( 0,0,0,0 );
					{
					//Modified version of the HDRP terrain height based blending
					float maxHeight = 0;
					float4 weightedHeights_04 = float4( 0,0,0,0 );
					float4 weightedHeights_08 = float4( 0,0,0,0 );
					float4 weightedHeights_12 = float4( 0,0,0,0 );
					float4 weightedHeights_16 = float4( 0,0,0,0 );
					maxHeight = heights_047362_g128811.x;
					maxHeight = max(maxHeight, heights_047362_g128811.y);
					maxHeight = max(maxHeight, heights_047362_g128811.z);
					maxHeight = max(maxHeight, heights_047362_g128811.w);
					#ifdef TVE_TERRAIN_08
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_12
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_16
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					maxHeight = max(maxHeight, heights_167362_g128811.x);
					maxHeight = max(maxHeight, heights_167362_g128811.y);
					maxHeight = max(maxHeight, heights_167362_g128811.z);
					maxHeight = max(maxHeight, heights_167362_g128811.w);
					#endif
					float transition = max(heightTransition7362_g128811, 0.01);
					weightedHeights_04 = float4 ( heights_047362_g128811.x, heights_047362_g128811.y, heights_047362_g128811.z, heights_047362_g128811.w );
					weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
					weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g128811;
					#ifdef TVE_TERRAIN_08
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					#endif
					#ifdef TVE_TERRAIN_12
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					#endif
					#ifdef TVE_TERRAIN_16
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					weightedHeights_16 = float4 ( heights_167362_g128811.x, heights_167362_g128811.y, heights_167362_g128811.z, heights_167362_g128811.w );
					weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
					weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g128811;
					#endif
					float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
					float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
					float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
					float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
					float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
					weights_047362_g128811 = weightedHeights_04 / sumHeight.xxxx;
					#ifdef TVE_TERRAIN_08
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_12
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_16
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					weights_167362_g128811 = weightedHeights_16 / sumHeight.xxxx;
					#endif
					}
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8792_g128811 = weights_047362_g128811;
					#else
					float4 staticSwitch8792_g128811 = control_047362_g128811;
					#endif
					half4 Terrain_Weights_046781_g128811 = staticSwitch8792_g128811;
					half4 Weights52_g128815 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128841) = _TerrainAlbedoTex1;
					float localFilterTexture19_g128898 = ( 0.0 );
					SamplerState SS19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128898 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128898 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128898 = SamplerDefault19_g128898;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128898 = SamplerDefault19_g128898;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128898 = SamplerPoint19_g128898;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128898 = SamplerLow19_g128898;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128898 = SamplerMedium19_g128898;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128898 = SamplerHigh19_g128898;
					#endif
					}
					SamplerState Sampler238_g128841 = SS19_g128898;
					float4 temp_output_37_0_g128841 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128841 = temp_output_37_0_g128841;
					float3 temp_output_279_0_g128841 = Input_Position9197_g128811;
					half3 WorldPosition238_g128841 = temp_output_279_0_g128841;
					half4 localSamplePlanar2D238_g128841 = SamplePlanar2D( Texture238_g128841 , Sampler238_g128841 , Coords238_g128841 , WorldPosition238_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler246_g128841 = SS19_g128898;
					half4 Coords246_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition246_g128841 = temp_output_279_0_g128841;
					float3 temp_output_280_0_g128841 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128841 = temp_output_280_0_g128841;
					half4 localSamplePlanar3D246_g128841 = SamplePlanar3D( Texture246_g128841 , Sampler246_g128841 , Coords246_g128841 , WorldPosition246_g128841 , WorldNormal246_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler234_g128841 = SS19_g128898;
					float4 Coords234_g128841 = temp_output_37_0_g128841;
					float3 WorldPosition234_g128841 = temp_output_279_0_g128841;
					float4 localSampleStochastic2D234_g128841 = SampleStochastic2D( Texture234_g128841 , Sampler234_g128841 , Coords234_g128841 , WorldPosition234_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler263_g128841 = SS19_g128898;
					half4 Coords263_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition263_g128841 = temp_output_279_0_g128841;
					half3 WorldNormal263_g128841 = temp_output_280_0_g128841;
					half4 localSampleStochastic3D263_g128841 = SampleStochastic3D( Texture263_g128841 , Sampler263_g128841 , Coords263_g128841 , WorldPosition263_g128841 , WorldNormal263_g128841 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8614_g128811 = localSamplePlanar3D246_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8614_g128811 = localSampleStochastic2D234_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8614_g128811 = localSampleStochastic3D263_g128841;
					#else
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#endif
					half4 Layer133_g128815 = staticSwitch8614_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler238_g128842 = SS19_g128898;
					float4 temp_output_37_0_g128842 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128842 = temp_output_37_0_g128842;
					float3 temp_output_279_0_g128842 = Input_Position9197_g128811;
					half3 WorldPosition238_g128842 = temp_output_279_0_g128842;
					half4 localSamplePlanar2D238_g128842 = SamplePlanar2D( Texture238_g128842 , Sampler238_g128842 , Coords238_g128842 , WorldPosition238_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler246_g128842 = SS19_g128898;
					half4 Coords246_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition246_g128842 = temp_output_279_0_g128842;
					float3 temp_output_280_0_g128842 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128842 = temp_output_280_0_g128842;
					half4 localSamplePlanar3D246_g128842 = SamplePlanar3D( Texture246_g128842 , Sampler246_g128842 , Coords246_g128842 , WorldPosition246_g128842 , WorldNormal246_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler234_g128842 = SS19_g128898;
					float4 Coords234_g128842 = temp_output_37_0_g128842;
					float3 WorldPosition234_g128842 = temp_output_279_0_g128842;
					float4 localSampleStochastic2D234_g128842 = SampleStochastic2D( Texture234_g128842 , Sampler234_g128842 , Coords234_g128842 , WorldPosition234_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler263_g128842 = SS19_g128898;
					half4 Coords263_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition263_g128842 = temp_output_279_0_g128842;
					half3 WorldNormal263_g128842 = temp_output_280_0_g128842;
					half4 localSampleStochastic3D263_g128842 = SampleStochastic3D( Texture263_g128842 , Sampler263_g128842 , Coords263_g128842 , WorldPosition263_g128842 , WorldNormal263_g128842 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8629_g128811 = localSamplePlanar3D246_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8629_g128811 = localSampleStochastic2D234_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8629_g128811 = localSampleStochastic3D263_g128842;
					#else
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#endif
					half4 Layer237_g128815 = staticSwitch8629_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler238_g128845 = SS19_g128898;
					float4 temp_output_37_0_g128845 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128845 = temp_output_37_0_g128845;
					float3 temp_output_279_0_g128845 = Input_Position9197_g128811;
					half3 WorldPosition238_g128845 = temp_output_279_0_g128845;
					half4 localSamplePlanar2D238_g128845 = SamplePlanar2D( Texture238_g128845 , Sampler238_g128845 , Coords238_g128845 , WorldPosition238_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler246_g128845 = SS19_g128898;
					half4 Coords246_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition246_g128845 = temp_output_279_0_g128845;
					float3 temp_output_280_0_g128845 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128845 = temp_output_280_0_g128845;
					half4 localSamplePlanar3D246_g128845 = SamplePlanar3D( Texture246_g128845 , Sampler246_g128845 , Coords246_g128845 , WorldPosition246_g128845 , WorldNormal246_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler234_g128845 = SS19_g128898;
					float4 Coords234_g128845 = temp_output_37_0_g128845;
					float3 WorldPosition234_g128845 = temp_output_279_0_g128845;
					float4 localSampleStochastic2D234_g128845 = SampleStochastic2D( Texture234_g128845 , Sampler234_g128845 , Coords234_g128845 , WorldPosition234_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler263_g128845 = SS19_g128898;
					half4 Coords263_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition263_g128845 = temp_output_279_0_g128845;
					half3 WorldNormal263_g128845 = temp_output_280_0_g128845;
					half4 localSampleStochastic3D263_g128845 = SampleStochastic3D( Texture263_g128845 , Sampler263_g128845 , Coords263_g128845 , WorldPosition263_g128845 , WorldNormal263_g128845 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8630_g128811 = localSamplePlanar3D246_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8630_g128811 = localSampleStochastic2D234_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8630_g128811 = localSampleStochastic3D263_g128845;
					#else
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#endif
					half4 Layer338_g128815 = staticSwitch8630_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler238_g128847 = SS19_g128898;
					float4 temp_output_37_0_g128847 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128847 = temp_output_37_0_g128847;
					float3 temp_output_279_0_g128847 = Input_Position9197_g128811;
					half3 WorldPosition238_g128847 = temp_output_279_0_g128847;
					half4 localSamplePlanar2D238_g128847 = SamplePlanar2D( Texture238_g128847 , Sampler238_g128847 , Coords238_g128847 , WorldPosition238_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler246_g128847 = SS19_g128898;
					half4 Coords246_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition246_g128847 = temp_output_279_0_g128847;
					float3 temp_output_280_0_g128847 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128847 = temp_output_280_0_g128847;
					half4 localSamplePlanar3D246_g128847 = SamplePlanar3D( Texture246_g128847 , Sampler246_g128847 , Coords246_g128847 , WorldPosition246_g128847 , WorldNormal246_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler234_g128847 = SS19_g128898;
					float4 Coords234_g128847 = temp_output_37_0_g128847;
					float3 WorldPosition234_g128847 = temp_output_279_0_g128847;
					float4 localSampleStochastic2D234_g128847 = SampleStochastic2D( Texture234_g128847 , Sampler234_g128847 , Coords234_g128847 , WorldPosition234_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler263_g128847 = SS19_g128898;
					half4 Coords263_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition263_g128847 = temp_output_279_0_g128847;
					half3 WorldNormal263_g128847 = temp_output_280_0_g128847;
					half4 localSampleStochastic3D263_g128847 = SampleStochastic3D( Texture263_g128847 , Sampler263_g128847 , Coords263_g128847 , WorldPosition263_g128847 , WorldNormal263_g128847 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8631_g128811 = localSamplePlanar3D246_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8631_g128811 = localSampleStochastic2D234_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8631_g128811 = localSampleStochastic3D263_g128847;
					#else
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#endif
					half4 Layer439_g128815 = staticSwitch8631_g128811;
					float4 weightedBlendVar31_g128815 = Weights52_g128815;
					float4 weightedBlend31_g128815 = ( weightedBlendVar31_g128815.x*Layer133_g128815 + weightedBlendVar31_g128815.y*Layer237_g128815 + weightedBlendVar31_g128815.z*Layer338_g128815 + weightedBlendVar31_g128815.w*Layer439_g128815 );
					half4 Terrain_AAAA_047200_g128811 = weightedBlend31_g128815;
					half4 Layer_045_g128818 = Terrain_AAAA_047200_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8793_g128811 = weights_087362_g128811;
					#else
					float4 staticSwitch8793_g128811 = control_087362_g128811;
					#endif
					half4 Terrain_Weights_087340_g128811 = staticSwitch8793_g128811;
					half4 Weights52_g128822 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler238_g128851 = SS19_g128898;
					float4 temp_output_37_0_g128851 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128851 = temp_output_37_0_g128851;
					float3 temp_output_279_0_g128851 = Input_Position9197_g128811;
					half3 WorldPosition238_g128851 = temp_output_279_0_g128851;
					half4 localSamplePlanar2D238_g128851 = SamplePlanar2D( Texture238_g128851 , Sampler238_g128851 , Coords238_g128851 , WorldPosition238_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler246_g128851 = SS19_g128898;
					half4 Coords246_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition246_g128851 = temp_output_279_0_g128851;
					float3 temp_output_280_0_g128851 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128851 = temp_output_280_0_g128851;
					half4 localSamplePlanar3D246_g128851 = SamplePlanar3D( Texture246_g128851 , Sampler246_g128851 , Coords246_g128851 , WorldPosition246_g128851 , WorldNormal246_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler234_g128851 = SS19_g128898;
					float4 Coords234_g128851 = temp_output_37_0_g128851;
					float3 WorldPosition234_g128851 = temp_output_279_0_g128851;
					float4 localSampleStochastic2D234_g128851 = SampleStochastic2D( Texture234_g128851 , Sampler234_g128851 , Coords234_g128851 , WorldPosition234_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler263_g128851 = SS19_g128898;
					half4 Coords263_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition263_g128851 = temp_output_279_0_g128851;
					half3 WorldNormal263_g128851 = temp_output_280_0_g128851;
					half4 localSampleStochastic3D263_g128851 = SampleStochastic3D( Texture263_g128851 , Sampler263_g128851 , Coords263_g128851 , WorldPosition263_g128851 , WorldNormal263_g128851 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8690_g128811 = localSamplePlanar3D246_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8690_g128811 = localSampleStochastic2D234_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8690_g128811 = localSampleStochastic3D263_g128851;
					#else
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#endif
					half4 Layer133_g128822 = staticSwitch8690_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler238_g128878 = SS19_g128898;
					float4 temp_output_37_0_g128878 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128878 = temp_output_37_0_g128878;
					float3 temp_output_279_0_g128878 = Input_Position9197_g128811;
					half3 WorldPosition238_g128878 = temp_output_279_0_g128878;
					half4 localSamplePlanar2D238_g128878 = SamplePlanar2D( Texture238_g128878 , Sampler238_g128878 , Coords238_g128878 , WorldPosition238_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler246_g128878 = SS19_g128898;
					half4 Coords246_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition246_g128878 = temp_output_279_0_g128878;
					float3 temp_output_280_0_g128878 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128878 = temp_output_280_0_g128878;
					half4 localSamplePlanar3D246_g128878 = SamplePlanar3D( Texture246_g128878 , Sampler246_g128878 , Coords246_g128878 , WorldPosition246_g128878 , WorldNormal246_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler234_g128878 = SS19_g128898;
					float4 Coords234_g128878 = temp_output_37_0_g128878;
					float3 WorldPosition234_g128878 = temp_output_279_0_g128878;
					float4 localSampleStochastic2D234_g128878 = SampleStochastic2D( Texture234_g128878 , Sampler234_g128878 , Coords234_g128878 , WorldPosition234_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler263_g128878 = SS19_g128898;
					half4 Coords263_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition263_g128878 = temp_output_279_0_g128878;
					half3 WorldNormal263_g128878 = temp_output_280_0_g128878;
					half4 localSampleStochastic3D263_g128878 = SampleStochastic3D( Texture263_g128878 , Sampler263_g128878 , Coords263_g128878 , WorldPosition263_g128878 , WorldNormal263_g128878 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8691_g128811 = localSamplePlanar3D246_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8691_g128811 = localSampleStochastic2D234_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8691_g128811 = localSampleStochastic3D263_g128878;
					#else
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#endif
					half4 Layer237_g128822 = staticSwitch8691_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler238_g128879 = SS19_g128898;
					float4 temp_output_37_0_g128879 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128879 = temp_output_37_0_g128879;
					float3 temp_output_279_0_g128879 = Input_Position9197_g128811;
					half3 WorldPosition238_g128879 = temp_output_279_0_g128879;
					half4 localSamplePlanar2D238_g128879 = SamplePlanar2D( Texture238_g128879 , Sampler238_g128879 , Coords238_g128879 , WorldPosition238_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler246_g128879 = SS19_g128898;
					half4 Coords246_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition246_g128879 = temp_output_279_0_g128879;
					float3 temp_output_280_0_g128879 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128879 = temp_output_280_0_g128879;
					half4 localSamplePlanar3D246_g128879 = SamplePlanar3D( Texture246_g128879 , Sampler246_g128879 , Coords246_g128879 , WorldPosition246_g128879 , WorldNormal246_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler234_g128879 = SS19_g128898;
					float4 Coords234_g128879 = temp_output_37_0_g128879;
					float3 WorldPosition234_g128879 = temp_output_279_0_g128879;
					float4 localSampleStochastic2D234_g128879 = SampleStochastic2D( Texture234_g128879 , Sampler234_g128879 , Coords234_g128879 , WorldPosition234_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler263_g128879 = SS19_g128898;
					half4 Coords263_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition263_g128879 = temp_output_279_0_g128879;
					half3 WorldNormal263_g128879 = temp_output_280_0_g128879;
					half4 localSampleStochastic3D263_g128879 = SampleStochastic3D( Texture263_g128879 , Sampler263_g128879 , Coords263_g128879 , WorldPosition263_g128879 , WorldNormal263_g128879 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8692_g128811 = localSamplePlanar3D246_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8692_g128811 = localSampleStochastic2D234_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8692_g128811 = localSampleStochastic3D263_g128879;
					#else
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#endif
					half4 Layer338_g128822 = staticSwitch8692_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler238_g128880 = SS19_g128898;
					float4 temp_output_37_0_g128880 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128880 = temp_output_37_0_g128880;
					float3 temp_output_279_0_g128880 = Input_Position9197_g128811;
					half3 WorldPosition238_g128880 = temp_output_279_0_g128880;
					half4 localSamplePlanar2D238_g128880 = SamplePlanar2D( Texture238_g128880 , Sampler238_g128880 , Coords238_g128880 , WorldPosition238_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler246_g128880 = SS19_g128898;
					half4 Coords246_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition246_g128880 = temp_output_279_0_g128880;
					float3 temp_output_280_0_g128880 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128880 = temp_output_280_0_g128880;
					half4 localSamplePlanar3D246_g128880 = SamplePlanar3D( Texture246_g128880 , Sampler246_g128880 , Coords246_g128880 , WorldPosition246_g128880 , WorldNormal246_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler234_g128880 = SS19_g128898;
					float4 Coords234_g128880 = temp_output_37_0_g128880;
					float3 WorldPosition234_g128880 = temp_output_279_0_g128880;
					float4 localSampleStochastic2D234_g128880 = SampleStochastic2D( Texture234_g128880 , Sampler234_g128880 , Coords234_g128880 , WorldPosition234_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler263_g128880 = SS19_g128898;
					half4 Coords263_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition263_g128880 = temp_output_279_0_g128880;
					half3 WorldNormal263_g128880 = temp_output_280_0_g128880;
					half4 localSampleStochastic3D263_g128880 = SampleStochastic3D( Texture263_g128880 , Sampler263_g128880 , Coords263_g128880 , WorldPosition263_g128880 , WorldNormal263_g128880 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8693_g128811 = localSamplePlanar3D246_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8693_g128811 = localSampleStochastic2D234_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8693_g128811 = localSampleStochastic3D263_g128880;
					#else
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#endif
					half4 Layer439_g128822 = staticSwitch8693_g128811;
					float4 weightedBlendVar31_g128822 = Weights52_g128822;
					float4 weightedBlend31_g128822 = ( weightedBlendVar31_g128822.x*Layer133_g128822 + weightedBlendVar31_g128822.y*Layer237_g128822 + weightedBlendVar31_g128822.z*Layer338_g128822 + weightedBlendVar31_g128822.w*Layer439_g128822 );
					half4 Terrain_AAAA_088665_g128811 = weightedBlend31_g128822;
					half4 Layer_0810_g128818 = Terrain_AAAA_088665_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8794_g128811 = weights_127362_g128811;
					#else
					float4 staticSwitch8794_g128811 = control_127362_g128811;
					#endif
					half4 Terrain_Weights_127710_g128811 = staticSwitch8794_g128811;
					half4 Weights52_g128828 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler238_g128854 = SS19_g128898;
					float4 temp_output_37_0_g128854 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128854 = temp_output_37_0_g128854;
					float3 temp_output_279_0_g128854 = Input_Position9197_g128811;
					half3 WorldPosition238_g128854 = temp_output_279_0_g128854;
					half4 localSamplePlanar2D238_g128854 = SamplePlanar2D( Texture238_g128854 , Sampler238_g128854 , Coords238_g128854 , WorldPosition238_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler246_g128854 = SS19_g128898;
					half4 Coords246_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition246_g128854 = temp_output_279_0_g128854;
					float3 temp_output_280_0_g128854 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128854 = temp_output_280_0_g128854;
					half4 localSamplePlanar3D246_g128854 = SamplePlanar3D( Texture246_g128854 , Sampler246_g128854 , Coords246_g128854 , WorldPosition246_g128854 , WorldNormal246_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler234_g128854 = SS19_g128898;
					float4 Coords234_g128854 = temp_output_37_0_g128854;
					float3 WorldPosition234_g128854 = temp_output_279_0_g128854;
					float4 localSampleStochastic2D234_g128854 = SampleStochastic2D( Texture234_g128854 , Sampler234_g128854 , Coords234_g128854 , WorldPosition234_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler263_g128854 = SS19_g128898;
					half4 Coords263_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition263_g128854 = temp_output_279_0_g128854;
					half3 WorldNormal263_g128854 = temp_output_280_0_g128854;
					half4 localSampleStochastic3D263_g128854 = SampleStochastic3D( Texture263_g128854 , Sampler263_g128854 , Coords263_g128854 , WorldPosition263_g128854 , WorldNormal263_g128854 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8872_g128811 = localSamplePlanar3D246_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8872_g128811 = localSampleStochastic2D234_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8872_g128811 = localSampleStochastic3D263_g128854;
					#else
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#endif
					half4 Layer133_g128828 = staticSwitch8872_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler238_g128857 = SS19_g128898;
					float4 temp_output_37_0_g128857 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128857 = temp_output_37_0_g128857;
					float3 temp_output_279_0_g128857 = Input_Position9197_g128811;
					half3 WorldPosition238_g128857 = temp_output_279_0_g128857;
					half4 localSamplePlanar2D238_g128857 = SamplePlanar2D( Texture238_g128857 , Sampler238_g128857 , Coords238_g128857 , WorldPosition238_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler246_g128857 = SS19_g128898;
					half4 Coords246_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition246_g128857 = temp_output_279_0_g128857;
					float3 temp_output_280_0_g128857 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128857 = temp_output_280_0_g128857;
					half4 localSamplePlanar3D246_g128857 = SamplePlanar3D( Texture246_g128857 , Sampler246_g128857 , Coords246_g128857 , WorldPosition246_g128857 , WorldNormal246_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler234_g128857 = SS19_g128898;
					float4 Coords234_g128857 = temp_output_37_0_g128857;
					float3 WorldPosition234_g128857 = temp_output_279_0_g128857;
					float4 localSampleStochastic2D234_g128857 = SampleStochastic2D( Texture234_g128857 , Sampler234_g128857 , Coords234_g128857 , WorldPosition234_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler263_g128857 = SS19_g128898;
					half4 Coords263_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition263_g128857 = temp_output_279_0_g128857;
					half3 WorldNormal263_g128857 = temp_output_280_0_g128857;
					half4 localSampleStochastic3D263_g128857 = SampleStochastic3D( Texture263_g128857 , Sampler263_g128857 , Coords263_g128857 , WorldPosition263_g128857 , WorldNormal263_g128857 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8873_g128811 = localSamplePlanar3D246_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8873_g128811 = localSampleStochastic2D234_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8873_g128811 = localSampleStochastic3D263_g128857;
					#else
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#endif
					half4 Layer237_g128828 = staticSwitch8873_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler238_g128858 = SS19_g128898;
					float4 temp_output_37_0_g128858 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128858 = temp_output_37_0_g128858;
					float3 temp_output_279_0_g128858 = Input_Position9197_g128811;
					half3 WorldPosition238_g128858 = temp_output_279_0_g128858;
					half4 localSamplePlanar2D238_g128858 = SamplePlanar2D( Texture238_g128858 , Sampler238_g128858 , Coords238_g128858 , WorldPosition238_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler246_g128858 = SS19_g128898;
					half4 Coords246_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition246_g128858 = temp_output_279_0_g128858;
					float3 temp_output_280_0_g128858 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128858 = temp_output_280_0_g128858;
					half4 localSamplePlanar3D246_g128858 = SamplePlanar3D( Texture246_g128858 , Sampler246_g128858 , Coords246_g128858 , WorldPosition246_g128858 , WorldNormal246_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler234_g128858 = SS19_g128898;
					float4 Coords234_g128858 = temp_output_37_0_g128858;
					float3 WorldPosition234_g128858 = temp_output_279_0_g128858;
					float4 localSampleStochastic2D234_g128858 = SampleStochastic2D( Texture234_g128858 , Sampler234_g128858 , Coords234_g128858 , WorldPosition234_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler263_g128858 = SS19_g128898;
					half4 Coords263_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition263_g128858 = temp_output_279_0_g128858;
					half3 WorldNormal263_g128858 = temp_output_280_0_g128858;
					half4 localSampleStochastic3D263_g128858 = SampleStochastic3D( Texture263_g128858 , Sampler263_g128858 , Coords263_g128858 , WorldPosition263_g128858 , WorldNormal263_g128858 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8874_g128811 = localSamplePlanar3D246_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8874_g128811 = localSampleStochastic2D234_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8874_g128811 = localSampleStochastic3D263_g128858;
					#else
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#endif
					half4 Layer338_g128828 = staticSwitch8874_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler238_g128859 = SS19_g128898;
					float4 temp_output_37_0_g128859 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128859 = temp_output_37_0_g128859;
					float3 temp_output_279_0_g128859 = Input_Position9197_g128811;
					half3 WorldPosition238_g128859 = temp_output_279_0_g128859;
					half4 localSamplePlanar2D238_g128859 = SamplePlanar2D( Texture238_g128859 , Sampler238_g128859 , Coords238_g128859 , WorldPosition238_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler246_g128859 = SS19_g128898;
					half4 Coords246_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition246_g128859 = temp_output_279_0_g128859;
					float3 temp_output_280_0_g128859 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128859 = temp_output_280_0_g128859;
					half4 localSamplePlanar3D246_g128859 = SamplePlanar3D( Texture246_g128859 , Sampler246_g128859 , Coords246_g128859 , WorldPosition246_g128859 , WorldNormal246_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler234_g128859 = SS19_g128898;
					float4 Coords234_g128859 = temp_output_37_0_g128859;
					float3 WorldPosition234_g128859 = temp_output_279_0_g128859;
					float4 localSampleStochastic2D234_g128859 = SampleStochastic2D( Texture234_g128859 , Sampler234_g128859 , Coords234_g128859 , WorldPosition234_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler263_g128859 = SS19_g128898;
					half4 Coords263_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition263_g128859 = temp_output_279_0_g128859;
					half3 WorldNormal263_g128859 = temp_output_280_0_g128859;
					half4 localSampleStochastic3D263_g128859 = SampleStochastic3D( Texture263_g128859 , Sampler263_g128859 , Coords263_g128859 , WorldPosition263_g128859 , WorldNormal263_g128859 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8875_g128811 = localSamplePlanar3D246_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8875_g128811 = localSampleStochastic2D234_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8875_g128811 = localSampleStochastic3D263_g128859;
					#else
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#endif
					half4 Layer439_g128828 = staticSwitch8875_g128811;
					float4 weightedBlendVar31_g128828 = Weights52_g128828;
					float4 weightedBlend31_g128828 = ( weightedBlendVar31_g128828.x*Layer133_g128828 + weightedBlendVar31_g128828.y*Layer237_g128828 + weightedBlendVar31_g128828.z*Layer338_g128828 + weightedBlendVar31_g128828.w*Layer439_g128828 );
					half4 Terrain_AAAA_128851_g128811 = weightedBlend31_g128828;
					half4 Layer_1243_g128818 = Terrain_AAAA_128851_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8795_g128811 = weights_167362_g128811;
					#else
					float4 staticSwitch8795_g128811 = control_167362_g128811;
					#endif
					half4 Terrain_Weights_167709_g128811 = staticSwitch8795_g128811;
					half4 Weights52_g128834 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler238_g128863 = SS19_g128898;
					float4 temp_output_37_0_g128863 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128863 = temp_output_37_0_g128863;
					float3 temp_output_279_0_g128863 = Input_Position9197_g128811;
					half3 WorldPosition238_g128863 = temp_output_279_0_g128863;
					half4 localSamplePlanar2D238_g128863 = SamplePlanar2D( Texture238_g128863 , Sampler238_g128863 , Coords238_g128863 , WorldPosition238_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler246_g128863 = SS19_g128898;
					half4 Coords246_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition246_g128863 = temp_output_279_0_g128863;
					float3 temp_output_280_0_g128863 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128863 = temp_output_280_0_g128863;
					half4 localSamplePlanar3D246_g128863 = SamplePlanar3D( Texture246_g128863 , Sampler246_g128863 , Coords246_g128863 , WorldPosition246_g128863 , WorldNormal246_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler234_g128863 = SS19_g128898;
					float4 Coords234_g128863 = temp_output_37_0_g128863;
					float3 WorldPosition234_g128863 = temp_output_279_0_g128863;
					float4 localSampleStochastic2D234_g128863 = SampleStochastic2D( Texture234_g128863 , Sampler234_g128863 , Coords234_g128863 , WorldPosition234_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler263_g128863 = SS19_g128898;
					half4 Coords263_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition263_g128863 = temp_output_279_0_g128863;
					half3 WorldNormal263_g128863 = temp_output_280_0_g128863;
					half4 localSampleStochastic3D263_g128863 = SampleStochastic3D( Texture263_g128863 , Sampler263_g128863 , Coords263_g128863 , WorldPosition263_g128863 , WorldNormal263_g128863 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8972_g128811 = localSamplePlanar3D246_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8972_g128811 = localSampleStochastic2D234_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8972_g128811 = localSampleStochastic3D263_g128863;
					#else
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#endif
					half4 Layer133_g128834 = staticSwitch8972_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler238_g128869 = SS19_g128898;
					float4 temp_output_37_0_g128869 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128869 = temp_output_37_0_g128869;
					float3 temp_output_279_0_g128869 = Input_Position9197_g128811;
					half3 WorldPosition238_g128869 = temp_output_279_0_g128869;
					half4 localSamplePlanar2D238_g128869 = SamplePlanar2D( Texture238_g128869 , Sampler238_g128869 , Coords238_g128869 , WorldPosition238_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler246_g128869 = SS19_g128898;
					half4 Coords246_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition246_g128869 = temp_output_279_0_g128869;
					float3 temp_output_280_0_g128869 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128869 = temp_output_280_0_g128869;
					half4 localSamplePlanar3D246_g128869 = SamplePlanar3D( Texture246_g128869 , Sampler246_g128869 , Coords246_g128869 , WorldPosition246_g128869 , WorldNormal246_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler234_g128869 = SS19_g128898;
					float4 Coords234_g128869 = temp_output_37_0_g128869;
					float3 WorldPosition234_g128869 = temp_output_279_0_g128869;
					float4 localSampleStochastic2D234_g128869 = SampleStochastic2D( Texture234_g128869 , Sampler234_g128869 , Coords234_g128869 , WorldPosition234_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler263_g128869 = SS19_g128898;
					half4 Coords263_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition263_g128869 = temp_output_279_0_g128869;
					half3 WorldNormal263_g128869 = temp_output_280_0_g128869;
					half4 localSampleStochastic3D263_g128869 = SampleStochastic3D( Texture263_g128869 , Sampler263_g128869 , Coords263_g128869 , WorldPosition263_g128869 , WorldNormal263_g128869 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8973_g128811 = localSamplePlanar3D246_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8973_g128811 = localSampleStochastic2D234_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8973_g128811 = localSampleStochastic3D263_g128869;
					#else
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#endif
					half4 Layer237_g128834 = staticSwitch8973_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler238_g128870 = SS19_g128898;
					float4 temp_output_37_0_g128870 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128870 = temp_output_37_0_g128870;
					float3 temp_output_279_0_g128870 = Input_Position9197_g128811;
					half3 WorldPosition238_g128870 = temp_output_279_0_g128870;
					half4 localSamplePlanar2D238_g128870 = SamplePlanar2D( Texture238_g128870 , Sampler238_g128870 , Coords238_g128870 , WorldPosition238_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler246_g128870 = SS19_g128898;
					half4 Coords246_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition246_g128870 = temp_output_279_0_g128870;
					float3 temp_output_280_0_g128870 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128870 = temp_output_280_0_g128870;
					half4 localSamplePlanar3D246_g128870 = SamplePlanar3D( Texture246_g128870 , Sampler246_g128870 , Coords246_g128870 , WorldPosition246_g128870 , WorldNormal246_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler234_g128870 = SS19_g128898;
					float4 Coords234_g128870 = temp_output_37_0_g128870;
					float3 WorldPosition234_g128870 = temp_output_279_0_g128870;
					float4 localSampleStochastic2D234_g128870 = SampleStochastic2D( Texture234_g128870 , Sampler234_g128870 , Coords234_g128870 , WorldPosition234_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler263_g128870 = SS19_g128898;
					half4 Coords263_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition263_g128870 = temp_output_279_0_g128870;
					half3 WorldNormal263_g128870 = temp_output_280_0_g128870;
					half4 localSampleStochastic3D263_g128870 = SampleStochastic3D( Texture263_g128870 , Sampler263_g128870 , Coords263_g128870 , WorldPosition263_g128870 , WorldNormal263_g128870 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8974_g128811 = localSamplePlanar3D246_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8974_g128811 = localSampleStochastic2D234_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8974_g128811 = localSampleStochastic3D263_g128870;
					#else
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#endif
					half4 Layer338_g128834 = staticSwitch8974_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler238_g128871 = SS19_g128898;
					float4 temp_output_37_0_g128871 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128871 = temp_output_37_0_g128871;
					float3 temp_output_279_0_g128871 = Input_Position9197_g128811;
					half3 WorldPosition238_g128871 = temp_output_279_0_g128871;
					half4 localSamplePlanar2D238_g128871 = SamplePlanar2D( Texture238_g128871 , Sampler238_g128871 , Coords238_g128871 , WorldPosition238_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler246_g128871 = SS19_g128898;
					half4 Coords246_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition246_g128871 = temp_output_279_0_g128871;
					float3 temp_output_280_0_g128871 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128871 = temp_output_280_0_g128871;
					half4 localSamplePlanar3D246_g128871 = SamplePlanar3D( Texture246_g128871 , Sampler246_g128871 , Coords246_g128871 , WorldPosition246_g128871 , WorldNormal246_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler234_g128871 = SS19_g128898;
					float4 Coords234_g128871 = temp_output_37_0_g128871;
					float3 WorldPosition234_g128871 = temp_output_279_0_g128871;
					float4 localSampleStochastic2D234_g128871 = SampleStochastic2D( Texture234_g128871 , Sampler234_g128871 , Coords234_g128871 , WorldPosition234_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler263_g128871 = SS19_g128898;
					half4 Coords263_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition263_g128871 = temp_output_279_0_g128871;
					half3 WorldNormal263_g128871 = temp_output_280_0_g128871;
					half4 localSampleStochastic3D263_g128871 = SampleStochastic3D( Texture263_g128871 , Sampler263_g128871 , Coords263_g128871 , WorldPosition263_g128871 , WorldNormal263_g128871 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8975_g128811 = localSamplePlanar3D246_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8975_g128811 = localSampleStochastic2D234_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8975_g128811 = localSampleStochastic3D263_g128871;
					#else
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#endif
					half4 Layer439_g128834 = staticSwitch8975_g128811;
					float4 weightedBlendVar31_g128834 = Weights52_g128834;
					float4 weightedBlend31_g128834 = ( weightedBlendVar31_g128834.x*Layer133_g128834 + weightedBlendVar31_g128834.y*Layer237_g128834 + weightedBlendVar31_g128834.z*Layer338_g128834 + weightedBlendVar31_g128834.w*Layer439_g128834 );
					half4 Terrain_AAAA_168986_g128811 = weightedBlend31_g128834;
					half4 Layer_1644_g128818 = Terrain_AAAA_168986_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 + Layer_1644_g128818 );
					#else
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#endif
					half4 Blend_Albedo7468_g128811 = staticSwitch40_g128818;
					half4 Weights52_g128889 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128889 = _TerrainColor1;
					half4 Layer237_g128889 = _TerrainColor2;
					half4 Layer338_g128889 = _TerrainColor3;
					half4 Layer439_g128889 = _TerrainColor4;
					float4 weightedBlendVar31_g128889 = Weights52_g128889;
					float4 weightedBlend31_g128889 = ( weightedBlendVar31_g128889.x*Layer133_g128889 + weightedBlendVar31_g128889.y*Layer237_g128889 + weightedBlendVar31_g128889.z*Layer338_g128889 + weightedBlendVar31_g128889.w*Layer439_g128889 );
					half4 Terrain_Color_049349_g128811 = weightedBlend31_g128889;
					half4 Layer_045_g128894 = Terrain_Color_049349_g128811;
					half4 Weights52_g128890 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128890 = _TerrainColor5;
					half4 Layer237_g128890 = _TerrainColor6;
					half4 Layer338_g128890 = _TerrainColor7;
					half4 Layer439_g128890 = _TerrainColor8;
					float4 weightedBlendVar31_g128890 = Weights52_g128890;
					float4 weightedBlend31_g128890 = ( weightedBlendVar31_g128890.x*Layer133_g128890 + weightedBlendVar31_g128890.y*Layer237_g128890 + weightedBlendVar31_g128890.z*Layer338_g128890 + weightedBlendVar31_g128890.w*Layer439_g128890 );
					half4 Terrain_Color_089361_g128811 = weightedBlend31_g128890;
					half4 Layer_0810_g128894 = Terrain_Color_089361_g128811;
					half4 Weights52_g128891 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128891 = _TerrainColor9;
					half4 Layer237_g128891 = _TerrainColor10;
					half4 Layer338_g128891 = _TerrainColor11;
					half4 Layer439_g128891 = _TerrainColor12;
					float4 weightedBlendVar31_g128891 = Weights52_g128891;
					float4 weightedBlend31_g128891 = ( weightedBlendVar31_g128891.x*Layer133_g128891 + weightedBlendVar31_g128891.y*Layer237_g128891 + weightedBlendVar31_g128891.z*Layer338_g128891 + weightedBlendVar31_g128891.w*Layer439_g128891 );
					half4 Terrain_Color_129373_g128811 = weightedBlend31_g128891;
					half4 Layer_1243_g128894 = Terrain_Color_129373_g128811;
					half4 Weights52_g128892 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128892 = _TerrainColor13;
					half4 Layer237_g128892 = _TerrainColor14;
					half4 Layer338_g128892 = _TerrainColor15;
					half4 Layer439_g128892 = _TerrainColor16;
					float4 weightedBlendVar31_g128892 = Weights52_g128892;
					float4 weightedBlend31_g128892 = ( weightedBlendVar31_g128892.x*Layer133_g128892 + weightedBlendVar31_g128892.y*Layer237_g128892 + weightedBlendVar31_g128892.z*Layer338_g128892 + weightedBlendVar31_g128892.w*Layer439_g128892 );
					half4 Terrain_Color_169381_g128811 = weightedBlend31_g128892;
					half4 Layer_1644_g128894 = Terrain_Color_169381_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 + Layer_1644_g128894 );
					#else
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#endif
					half4 Blend_TerrainColor9387_g128811 = staticSwitch40_g128894;
					half3 Final_Albedo9144_g128811 = ( (Blend_Albedo7468_g128811).xyz * (Blend_TerrainColor9387_g128811).rgb * (_TerrainColor).rgb );
					half3 Local_Albedo9199_g128810 = Final_Albedo9144_g128811;
					float3 In_Albedo3_g128923 = Local_Albedo9199_g128810;
					float3 In_AlbedoRaw3_g128923 = Local_Albedo9199_g128810;
					float3 ase_tangentWS = IN.ase_texcoord5.xyz;
					float3 ase_bitangentWS = IN.ase_texcoord6.xyz;
					float3x3 ase_worldToTangent = float3x3( ase_tangentWS, ase_bitangentWS, ase_normalWS );
					half4 Weights52_g128812 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128887) = _TerrainNormalTex1;
					float localFilterTexture29_g128902 = ( 0.0 );
					SamplerState SS29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128902 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128902 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128902 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128902 = SamplerDefault29_g128902;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128902 = SamplerDefault29_g128902;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128902 = SamplerPoint29_g128902;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128902 = SamplerLow29_g128902;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128902 = SamplerMedium29_g128902;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128902 = SamplerHigh29_g128902;
					#endif
					}
					SamplerState Sampler238_g128887 = SS29_g128902;
					float4 temp_output_37_0_g128887 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128887 = temp_output_37_0_g128887;
					float3 temp_output_279_0_g128887 = Input_Position9197_g128811;
					half3 WorldPosition238_g128887 = temp_output_279_0_g128887;
					half4 localSamplePlanar2D238_g128887 = SamplePlanar2D( Texture238_g128887 , Sampler238_g128887 , Coords238_g128887 , WorldPosition238_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128887) = _TerrainNormalTex1;
					SamplerState Sampler246_g128887 = SS29_g128902;
					half4 Coords246_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition246_g128887 = temp_output_279_0_g128887;
					float3 temp_output_280_0_g128887 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128887 = temp_output_280_0_g128887;
					half4 localSamplePlanar3D246_g128887 = SamplePlanar3D( Texture246_g128887 , Sampler246_g128887 , Coords246_g128887 , WorldPosition246_g128887 , WorldNormal246_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128887) = _TerrainNormalTex1;
					SamplerState Sampler234_g128887 = SS29_g128902;
					float4 Coords234_g128887 = temp_output_37_0_g128887;
					float3 WorldPosition234_g128887 = temp_output_279_0_g128887;
					float4 localSampleStochastic2D234_g128887 = SampleStochastic2D( Texture234_g128887 , Sampler234_g128887 , Coords234_g128887 , WorldPosition234_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128887) = _TerrainNormalTex1;
					SamplerState Sampler263_g128887 = SS29_g128902;
					half4 Coords263_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition263_g128887 = temp_output_279_0_g128887;
					half3 WorldNormal263_g128887 = temp_output_280_0_g128887;
					half4 localSampleStochastic3D263_g128887 = SampleStochastic3D( Texture263_g128887 , Sampler263_g128887 , Coords263_g128887 , WorldPosition263_g128887 , WorldNormal263_g128887 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8635_g128811 = localSamplePlanar3D246_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8635_g128811 = localSampleStochastic2D234_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8635_g128811 = localSampleStochastic3D263_g128887;
					#else
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#endif
					half4 Layer133_g128812 = staticSwitch8635_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128843) = _TerrainNormalTex2;
					SamplerState Sampler238_g128843 = SS29_g128902;
					float4 temp_output_37_0_g128843 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128843 = temp_output_37_0_g128843;
					float3 temp_output_279_0_g128843 = Input_Position9197_g128811;
					half3 WorldPosition238_g128843 = temp_output_279_0_g128843;
					half4 localSamplePlanar2D238_g128843 = SamplePlanar2D( Texture238_g128843 , Sampler238_g128843 , Coords238_g128843 , WorldPosition238_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128843) = _TerrainNormalTex2;
					SamplerState Sampler246_g128843 = SS29_g128902;
					half4 Coords246_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition246_g128843 = temp_output_279_0_g128843;
					float3 temp_output_280_0_g128843 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128843 = temp_output_280_0_g128843;
					half4 localSamplePlanar3D246_g128843 = SamplePlanar3D( Texture246_g128843 , Sampler246_g128843 , Coords246_g128843 , WorldPosition246_g128843 , WorldNormal246_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128843) = _TerrainNormalTex2;
					SamplerState Sampler234_g128843 = SS29_g128902;
					float4 Coords234_g128843 = temp_output_37_0_g128843;
					float3 WorldPosition234_g128843 = temp_output_279_0_g128843;
					float4 localSampleStochastic2D234_g128843 = SampleStochastic2D( Texture234_g128843 , Sampler234_g128843 , Coords234_g128843 , WorldPosition234_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128843) = _TerrainNormalTex2;
					SamplerState Sampler263_g128843 = SS29_g128902;
					half4 Coords263_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition263_g128843 = temp_output_279_0_g128843;
					half3 WorldNormal263_g128843 = temp_output_280_0_g128843;
					half4 localSampleStochastic3D263_g128843 = SampleStochastic3D( Texture263_g128843 , Sampler263_g128843 , Coords263_g128843 , WorldPosition263_g128843 , WorldNormal263_g128843 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8636_g128811 = localSamplePlanar3D246_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8636_g128811 = localSampleStochastic2D234_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8636_g128811 = localSampleStochastic3D263_g128843;
					#else
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#endif
					half4 Layer237_g128812 = staticSwitch8636_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128846) = _TerrainNormalTex3;
					SamplerState Sampler238_g128846 = SS29_g128902;
					float4 temp_output_37_0_g128846 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128846 = temp_output_37_0_g128846;
					float3 temp_output_279_0_g128846 = Input_Position9197_g128811;
					half3 WorldPosition238_g128846 = temp_output_279_0_g128846;
					half4 localSamplePlanar2D238_g128846 = SamplePlanar2D( Texture238_g128846 , Sampler238_g128846 , Coords238_g128846 , WorldPosition238_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128846) = _TerrainNormalTex3;
					SamplerState Sampler246_g128846 = SS29_g128902;
					half4 Coords246_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition246_g128846 = temp_output_279_0_g128846;
					float3 temp_output_280_0_g128846 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128846 = temp_output_280_0_g128846;
					half4 localSamplePlanar3D246_g128846 = SamplePlanar3D( Texture246_g128846 , Sampler246_g128846 , Coords246_g128846 , WorldPosition246_g128846 , WorldNormal246_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128846) = _TerrainNormalTex3;
					SamplerState Sampler234_g128846 = SS29_g128902;
					float4 Coords234_g128846 = temp_output_37_0_g128846;
					float3 WorldPosition234_g128846 = temp_output_279_0_g128846;
					float4 localSampleStochastic2D234_g128846 = SampleStochastic2D( Texture234_g128846 , Sampler234_g128846 , Coords234_g128846 , WorldPosition234_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128846) = _TerrainNormalTex3;
					SamplerState Sampler263_g128846 = SS29_g128902;
					half4 Coords263_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition263_g128846 = temp_output_279_0_g128846;
					half3 WorldNormal263_g128846 = temp_output_280_0_g128846;
					half4 localSampleStochastic3D263_g128846 = SampleStochastic3D( Texture263_g128846 , Sampler263_g128846 , Coords263_g128846 , WorldPosition263_g128846 , WorldNormal263_g128846 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8637_g128811 = localSamplePlanar3D246_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8637_g128811 = localSampleStochastic2D234_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8637_g128811 = localSampleStochastic3D263_g128846;
					#else
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#endif
					half4 Layer338_g128812 = staticSwitch8637_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128848) = _TerrainNormalTex4;
					SamplerState Sampler238_g128848 = SS29_g128902;
					float4 temp_output_37_0_g128848 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128848 = temp_output_37_0_g128848;
					float3 temp_output_279_0_g128848 = Input_Position9197_g128811;
					half3 WorldPosition238_g128848 = temp_output_279_0_g128848;
					half4 localSamplePlanar2D238_g128848 = SamplePlanar2D( Texture238_g128848 , Sampler238_g128848 , Coords238_g128848 , WorldPosition238_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128848) = _TerrainNormalTex4;
					SamplerState Sampler246_g128848 = SS29_g128902;
					half4 Coords246_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition246_g128848 = temp_output_279_0_g128848;
					float3 temp_output_280_0_g128848 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128848 = temp_output_280_0_g128848;
					half4 localSamplePlanar3D246_g128848 = SamplePlanar3D( Texture246_g128848 , Sampler246_g128848 , Coords246_g128848 , WorldPosition246_g128848 , WorldNormal246_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128848) = _TerrainNormalTex4;
					SamplerState Sampler234_g128848 = SS29_g128902;
					float4 Coords234_g128848 = temp_output_37_0_g128848;
					float3 WorldPosition234_g128848 = temp_output_279_0_g128848;
					float4 localSampleStochastic2D234_g128848 = SampleStochastic2D( Texture234_g128848 , Sampler234_g128848 , Coords234_g128848 , WorldPosition234_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128848) = _TerrainNormalTex4;
					SamplerState Sampler263_g128848 = SS29_g128902;
					half4 Coords263_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition263_g128848 = temp_output_279_0_g128848;
					half3 WorldNormal263_g128848 = temp_output_280_0_g128848;
					half4 localSampleStochastic3D263_g128848 = SampleStochastic3D( Texture263_g128848 , Sampler263_g128848 , Coords263_g128848 , WorldPosition263_g128848 , WorldNormal263_g128848 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8638_g128811 = localSamplePlanar3D246_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8638_g128811 = localSampleStochastic2D234_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8638_g128811 = localSampleStochastic3D263_g128848;
					#else
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#endif
					half4 Layer439_g128812 = staticSwitch8638_g128811;
					float4 weightedBlendVar31_g128812 = Weights52_g128812;
					float4 weightedBlend31_g128812 = ( weightedBlendVar31_g128812.x*Layer133_g128812 + weightedBlendVar31_g128812.y*Layer237_g128812 + weightedBlendVar31_g128812.z*Layer338_g128812 + weightedBlendVar31_g128812.w*Layer439_g128812 );
					half4 Terrain_B_047202_g128811 = weightedBlend31_g128812;
					half4 Layer_045_g128817 = Terrain_B_047202_g128811;
					half4 Weights52_g128823 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128852) = _TerrainNormalTex5;
					SamplerState Sampler238_g128852 = SS29_g128902;
					float4 temp_output_37_0_g128852 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128852 = temp_output_37_0_g128852;
					float3 temp_output_279_0_g128852 = Input_Position9197_g128811;
					half3 WorldPosition238_g128852 = temp_output_279_0_g128852;
					half4 localSamplePlanar2D238_g128852 = SamplePlanar2D( Texture238_g128852 , Sampler238_g128852 , Coords238_g128852 , WorldPosition238_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128852) = _TerrainNormalTex5;
					SamplerState Sampler246_g128852 = SS29_g128902;
					half4 Coords246_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition246_g128852 = temp_output_279_0_g128852;
					float3 temp_output_280_0_g128852 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128852 = temp_output_280_0_g128852;
					half4 localSamplePlanar3D246_g128852 = SamplePlanar3D( Texture246_g128852 , Sampler246_g128852 , Coords246_g128852 , WorldPosition246_g128852 , WorldNormal246_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128852) = _TerrainNormalTex5;
					SamplerState Sampler234_g128852 = SS29_g128902;
					float4 Coords234_g128852 = temp_output_37_0_g128852;
					float3 WorldPosition234_g128852 = temp_output_279_0_g128852;
					float4 localSampleStochastic2D234_g128852 = SampleStochastic2D( Texture234_g128852 , Sampler234_g128852 , Coords234_g128852 , WorldPosition234_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128852) = _TerrainNormalTex5;
					SamplerState Sampler263_g128852 = SS29_g128902;
					half4 Coords263_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition263_g128852 = temp_output_279_0_g128852;
					half3 WorldNormal263_g128852 = temp_output_280_0_g128852;
					half4 localSampleStochastic3D263_g128852 = SampleStochastic3D( Texture263_g128852 , Sampler263_g128852 , Coords263_g128852 , WorldPosition263_g128852 , WorldNormal263_g128852 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8686_g128811 = localSamplePlanar3D246_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8686_g128811 = localSampleStochastic2D234_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8686_g128811 = localSampleStochastic3D263_g128852;
					#else
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#endif
					half4 Layer133_g128823 = staticSwitch8686_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128881) = _TerrainNormalTex6;
					SamplerState Sampler238_g128881 = SS29_g128902;
					float4 temp_output_37_0_g128881 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128881 = temp_output_37_0_g128881;
					float3 temp_output_279_0_g128881 = Input_Position9197_g128811;
					half3 WorldPosition238_g128881 = temp_output_279_0_g128881;
					half4 localSamplePlanar2D238_g128881 = SamplePlanar2D( Texture238_g128881 , Sampler238_g128881 , Coords238_g128881 , WorldPosition238_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128881) = _TerrainNormalTex6;
					SamplerState Sampler246_g128881 = SS29_g128902;
					half4 Coords246_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition246_g128881 = temp_output_279_0_g128881;
					float3 temp_output_280_0_g128881 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128881 = temp_output_280_0_g128881;
					half4 localSamplePlanar3D246_g128881 = SamplePlanar3D( Texture246_g128881 , Sampler246_g128881 , Coords246_g128881 , WorldPosition246_g128881 , WorldNormal246_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128881) = _TerrainNormalTex6;
					SamplerState Sampler234_g128881 = SS29_g128902;
					float4 Coords234_g128881 = temp_output_37_0_g128881;
					float3 WorldPosition234_g128881 = temp_output_279_0_g128881;
					float4 localSampleStochastic2D234_g128881 = SampleStochastic2D( Texture234_g128881 , Sampler234_g128881 , Coords234_g128881 , WorldPosition234_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128881) = _TerrainNormalTex6;
					SamplerState Sampler263_g128881 = SS29_g128902;
					half4 Coords263_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition263_g128881 = temp_output_279_0_g128881;
					half3 WorldNormal263_g128881 = temp_output_280_0_g128881;
					half4 localSampleStochastic3D263_g128881 = SampleStochastic3D( Texture263_g128881 , Sampler263_g128881 , Coords263_g128881 , WorldPosition263_g128881 , WorldNormal263_g128881 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8687_g128811 = localSamplePlanar3D246_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8687_g128811 = localSampleStochastic2D234_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8687_g128811 = localSampleStochastic3D263_g128881;
					#else
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#endif
					half4 Layer237_g128823 = staticSwitch8687_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128882) = _TerrainNormalTex7;
					SamplerState Sampler238_g128882 = SS29_g128902;
					float4 temp_output_37_0_g128882 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128882 = temp_output_37_0_g128882;
					float3 temp_output_279_0_g128882 = Input_Position9197_g128811;
					half3 WorldPosition238_g128882 = temp_output_279_0_g128882;
					half4 localSamplePlanar2D238_g128882 = SamplePlanar2D( Texture238_g128882 , Sampler238_g128882 , Coords238_g128882 , WorldPosition238_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128882) = _TerrainNormalTex7;
					SamplerState Sampler246_g128882 = SS29_g128902;
					half4 Coords246_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition246_g128882 = temp_output_279_0_g128882;
					float3 temp_output_280_0_g128882 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128882 = temp_output_280_0_g128882;
					half4 localSamplePlanar3D246_g128882 = SamplePlanar3D( Texture246_g128882 , Sampler246_g128882 , Coords246_g128882 , WorldPosition246_g128882 , WorldNormal246_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128882) = _TerrainNormalTex7;
					SamplerState Sampler234_g128882 = SS29_g128902;
					float4 Coords234_g128882 = temp_output_37_0_g128882;
					float3 WorldPosition234_g128882 = temp_output_279_0_g128882;
					float4 localSampleStochastic2D234_g128882 = SampleStochastic2D( Texture234_g128882 , Sampler234_g128882 , Coords234_g128882 , WorldPosition234_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128882) = _TerrainNormalTex7;
					SamplerState Sampler263_g128882 = SS29_g128902;
					half4 Coords263_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition263_g128882 = temp_output_279_0_g128882;
					half3 WorldNormal263_g128882 = temp_output_280_0_g128882;
					half4 localSampleStochastic3D263_g128882 = SampleStochastic3D( Texture263_g128882 , Sampler263_g128882 , Coords263_g128882 , WorldPosition263_g128882 , WorldNormal263_g128882 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8688_g128811 = localSamplePlanar3D246_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8688_g128811 = localSampleStochastic2D234_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8688_g128811 = localSampleStochastic3D263_g128882;
					#else
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#endif
					half4 Layer338_g128823 = staticSwitch8688_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128883) = _TerrainNormalTex8;
					SamplerState Sampler238_g128883 = SS29_g128902;
					float4 temp_output_37_0_g128883 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128883 = temp_output_37_0_g128883;
					float3 temp_output_279_0_g128883 = Input_Position9197_g128811;
					half3 WorldPosition238_g128883 = temp_output_279_0_g128883;
					half4 localSamplePlanar2D238_g128883 = SamplePlanar2D( Texture238_g128883 , Sampler238_g128883 , Coords238_g128883 , WorldPosition238_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128883) = _TerrainNormalTex8;
					SamplerState Sampler246_g128883 = SS29_g128902;
					half4 Coords246_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition246_g128883 = temp_output_279_0_g128883;
					float3 temp_output_280_0_g128883 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128883 = temp_output_280_0_g128883;
					half4 localSamplePlanar3D246_g128883 = SamplePlanar3D( Texture246_g128883 , Sampler246_g128883 , Coords246_g128883 , WorldPosition246_g128883 , WorldNormal246_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128883) = _TerrainNormalTex8;
					SamplerState Sampler234_g128883 = SS29_g128902;
					float4 Coords234_g128883 = temp_output_37_0_g128883;
					float3 WorldPosition234_g128883 = temp_output_279_0_g128883;
					float4 localSampleStochastic2D234_g128883 = SampleStochastic2D( Texture234_g128883 , Sampler234_g128883 , Coords234_g128883 , WorldPosition234_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128883) = _TerrainNormalTex8;
					SamplerState Sampler263_g128883 = SS29_g128902;
					half4 Coords263_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition263_g128883 = temp_output_279_0_g128883;
					half3 WorldNormal263_g128883 = temp_output_280_0_g128883;
					half4 localSampleStochastic3D263_g128883 = SampleStochastic3D( Texture263_g128883 , Sampler263_g128883 , Coords263_g128883 , WorldPosition263_g128883 , WorldNormal263_g128883 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8689_g128811 = localSamplePlanar3D246_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8689_g128811 = localSampleStochastic2D234_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8689_g128811 = localSampleStochastic3D263_g128883;
					#else
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#endif
					half4 Layer439_g128823 = staticSwitch8689_g128811;
					float4 weightedBlendVar31_g128823 = Weights52_g128823;
					float4 weightedBlend31_g128823 = ( weightedBlendVar31_g128823.x*Layer133_g128823 + weightedBlendVar31_g128823.y*Layer237_g128823 + weightedBlendVar31_g128823.z*Layer338_g128823 + weightedBlendVar31_g128823.w*Layer439_g128823 );
					half4 Terrain_B_088684_g128811 = weightedBlend31_g128823;
					half4 Layer_0810_g128817 = Terrain_B_088684_g128811;
					half4 Weights52_g128829 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128855) = _TerrainNormalTex9;
					SamplerState Sampler238_g128855 = SS29_g128902;
					float4 temp_output_37_0_g128855 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128855 = temp_output_37_0_g128855;
					float3 temp_output_279_0_g128855 = Input_Position9197_g128811;
					half3 WorldPosition238_g128855 = temp_output_279_0_g128855;
					half4 localSamplePlanar2D238_g128855 = SamplePlanar2D( Texture238_g128855 , Sampler238_g128855 , Coords238_g128855 , WorldPosition238_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128855) = _TerrainNormalTex9;
					SamplerState Sampler246_g128855 = SS29_g128902;
					half4 Coords246_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition246_g128855 = temp_output_279_0_g128855;
					float3 temp_output_280_0_g128855 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128855 = temp_output_280_0_g128855;
					half4 localSamplePlanar3D246_g128855 = SamplePlanar3D( Texture246_g128855 , Sampler246_g128855 , Coords246_g128855 , WorldPosition246_g128855 , WorldNormal246_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128855) = _TerrainNormalTex9;
					SamplerState Sampler234_g128855 = SS29_g128902;
					float4 Coords234_g128855 = temp_output_37_0_g128855;
					float3 WorldPosition234_g128855 = temp_output_279_0_g128855;
					float4 localSampleStochastic2D234_g128855 = SampleStochastic2D( Texture234_g128855 , Sampler234_g128855 , Coords234_g128855 , WorldPosition234_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128855) = _TerrainNormalTex9;
					SamplerState Sampler263_g128855 = SS29_g128902;
					half4 Coords263_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition263_g128855 = temp_output_279_0_g128855;
					half3 WorldNormal263_g128855 = temp_output_280_0_g128855;
					half4 localSampleStochastic3D263_g128855 = SampleStochastic3D( Texture263_g128855 , Sampler263_g128855 , Coords263_g128855 , WorldPosition263_g128855 , WorldNormal263_g128855 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8849_g128811 = localSamplePlanar3D246_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8849_g128811 = localSampleStochastic2D234_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8849_g128811 = localSampleStochastic3D263_g128855;
					#else
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#endif
					half4 Layer133_g128829 = staticSwitch8849_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128860) = _TerrainNormalTex10;
					SamplerState Sampler238_g128860 = SS29_g128902;
					float4 temp_output_37_0_g128860 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128860 = temp_output_37_0_g128860;
					float3 temp_output_279_0_g128860 = Input_Position9197_g128811;
					half3 WorldPosition238_g128860 = temp_output_279_0_g128860;
					half4 localSamplePlanar2D238_g128860 = SamplePlanar2D( Texture238_g128860 , Sampler238_g128860 , Coords238_g128860 , WorldPosition238_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128860) = _TerrainNormalTex10;
					SamplerState Sampler246_g128860 = SS29_g128902;
					half4 Coords246_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition246_g128860 = temp_output_279_0_g128860;
					float3 temp_output_280_0_g128860 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128860 = temp_output_280_0_g128860;
					half4 localSamplePlanar3D246_g128860 = SamplePlanar3D( Texture246_g128860 , Sampler246_g128860 , Coords246_g128860 , WorldPosition246_g128860 , WorldNormal246_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128860) = _TerrainNormalTex10;
					SamplerState Sampler234_g128860 = SS29_g128902;
					float4 Coords234_g128860 = temp_output_37_0_g128860;
					float3 WorldPosition234_g128860 = temp_output_279_0_g128860;
					float4 localSampleStochastic2D234_g128860 = SampleStochastic2D( Texture234_g128860 , Sampler234_g128860 , Coords234_g128860 , WorldPosition234_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128860) = _TerrainNormalTex10;
					SamplerState Sampler263_g128860 = SS29_g128902;
					half4 Coords263_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition263_g128860 = temp_output_279_0_g128860;
					half3 WorldNormal263_g128860 = temp_output_280_0_g128860;
					half4 localSampleStochastic3D263_g128860 = SampleStochastic3D( Texture263_g128860 , Sampler263_g128860 , Coords263_g128860 , WorldPosition263_g128860 , WorldNormal263_g128860 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8876_g128811 = localSamplePlanar3D246_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8876_g128811 = localSampleStochastic2D234_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8876_g128811 = localSampleStochastic3D263_g128860;
					#else
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#endif
					half4 Layer237_g128829 = staticSwitch8876_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128861) = _TerrainNormalTex11;
					SamplerState Sampler238_g128861 = SS29_g128902;
					float4 temp_output_37_0_g128861 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128861 = temp_output_37_0_g128861;
					float3 temp_output_279_0_g128861 = Input_Position9197_g128811;
					half3 WorldPosition238_g128861 = temp_output_279_0_g128861;
					half4 localSamplePlanar2D238_g128861 = SamplePlanar2D( Texture238_g128861 , Sampler238_g128861 , Coords238_g128861 , WorldPosition238_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128861) = _TerrainNormalTex11;
					SamplerState Sampler246_g128861 = SS29_g128902;
					half4 Coords246_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition246_g128861 = temp_output_279_0_g128861;
					float3 temp_output_280_0_g128861 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128861 = temp_output_280_0_g128861;
					half4 localSamplePlanar3D246_g128861 = SamplePlanar3D( Texture246_g128861 , Sampler246_g128861 , Coords246_g128861 , WorldPosition246_g128861 , WorldNormal246_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128861) = _TerrainNormalTex11;
					SamplerState Sampler234_g128861 = SS29_g128902;
					float4 Coords234_g128861 = temp_output_37_0_g128861;
					float3 WorldPosition234_g128861 = temp_output_279_0_g128861;
					float4 localSampleStochastic2D234_g128861 = SampleStochastic2D( Texture234_g128861 , Sampler234_g128861 , Coords234_g128861 , WorldPosition234_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128861) = _TerrainNormalTex11;
					SamplerState Sampler263_g128861 = SS29_g128902;
					half4 Coords263_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition263_g128861 = temp_output_279_0_g128861;
					half3 WorldNormal263_g128861 = temp_output_280_0_g128861;
					half4 localSampleStochastic3D263_g128861 = SampleStochastic3D( Texture263_g128861 , Sampler263_g128861 , Coords263_g128861 , WorldPosition263_g128861 , WorldNormal263_g128861 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8850_g128811 = localSamplePlanar3D246_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8850_g128811 = localSampleStochastic2D234_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8850_g128811 = localSampleStochastic3D263_g128861;
					#else
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#endif
					half4 Layer338_g128829 = staticSwitch8850_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128862) = _TerrainNormalTex12;
					SamplerState Sampler238_g128862 = SS29_g128902;
					float4 temp_output_37_0_g128862 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128862 = temp_output_37_0_g128862;
					float3 temp_output_279_0_g128862 = Input_Position9197_g128811;
					half3 WorldPosition238_g128862 = temp_output_279_0_g128862;
					half4 localSamplePlanar2D238_g128862 = SamplePlanar2D( Texture238_g128862 , Sampler238_g128862 , Coords238_g128862 , WorldPosition238_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128862) = _TerrainNormalTex12;
					SamplerState Sampler246_g128862 = SS29_g128902;
					half4 Coords246_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition246_g128862 = temp_output_279_0_g128862;
					float3 temp_output_280_0_g128862 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128862 = temp_output_280_0_g128862;
					half4 localSamplePlanar3D246_g128862 = SamplePlanar3D( Texture246_g128862 , Sampler246_g128862 , Coords246_g128862 , WorldPosition246_g128862 , WorldNormal246_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128862) = _TerrainNormalTex12;
					SamplerState Sampler234_g128862 = SS29_g128902;
					float4 Coords234_g128862 = temp_output_37_0_g128862;
					float3 WorldPosition234_g128862 = temp_output_279_0_g128862;
					float4 localSampleStochastic2D234_g128862 = SampleStochastic2D( Texture234_g128862 , Sampler234_g128862 , Coords234_g128862 , WorldPosition234_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128862) = _TerrainNormalTex12;
					SamplerState Sampler263_g128862 = SS29_g128902;
					half4 Coords263_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition263_g128862 = temp_output_279_0_g128862;
					half3 WorldNormal263_g128862 = temp_output_280_0_g128862;
					half4 localSampleStochastic3D263_g128862 = SampleStochastic3D( Texture263_g128862 , Sampler263_g128862 , Coords263_g128862 , WorldPosition263_g128862 , WorldNormal263_g128862 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8877_g128811 = localSamplePlanar3D246_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8877_g128811 = localSampleStochastic2D234_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8877_g128811 = localSampleStochastic3D263_g128862;
					#else
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#endif
					half4 Layer439_g128829 = staticSwitch8877_g128811;
					float4 weightedBlendVar31_g128829 = Weights52_g128829;
					float4 weightedBlend31_g128829 = ( weightedBlendVar31_g128829.x*Layer133_g128829 + weightedBlendVar31_g128829.y*Layer237_g128829 + weightedBlendVar31_g128829.z*Layer338_g128829 + weightedBlendVar31_g128829.w*Layer439_g128829 );
					half4 Terrain_B_128865_g128811 = weightedBlend31_g128829;
					half4 Layer_1243_g128817 = Terrain_B_128865_g128811;
					half4 Weights52_g128835 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128865) = _TerrainNormalTex13;
					SamplerState Sampler238_g128865 = SS29_g128902;
					float4 temp_output_37_0_g128865 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128865 = temp_output_37_0_g128865;
					float3 temp_output_279_0_g128865 = Input_Position9197_g128811;
					half3 WorldPosition238_g128865 = temp_output_279_0_g128865;
					half4 localSamplePlanar2D238_g128865 = SamplePlanar2D( Texture238_g128865 , Sampler238_g128865 , Coords238_g128865 , WorldPosition238_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128865) = _TerrainNormalTex13;
					SamplerState Sampler246_g128865 = SS29_g128902;
					half4 Coords246_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition246_g128865 = temp_output_279_0_g128865;
					float3 temp_output_280_0_g128865 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128865 = temp_output_280_0_g128865;
					half4 localSamplePlanar3D246_g128865 = SamplePlanar3D( Texture246_g128865 , Sampler246_g128865 , Coords246_g128865 , WorldPosition246_g128865 , WorldNormal246_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128865) = _TerrainNormalTex13;
					SamplerState Sampler234_g128865 = SS29_g128902;
					float4 Coords234_g128865 = temp_output_37_0_g128865;
					float3 WorldPosition234_g128865 = temp_output_279_0_g128865;
					float4 localSampleStochastic2D234_g128865 = SampleStochastic2D( Texture234_g128865 , Sampler234_g128865 , Coords234_g128865 , WorldPosition234_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128865) = _TerrainNormalTex13;
					SamplerState Sampler263_g128865 = SS29_g128902;
					half4 Coords263_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition263_g128865 = temp_output_279_0_g128865;
					half3 WorldNormal263_g128865 = temp_output_280_0_g128865;
					half4 localSampleStochastic3D263_g128865 = SampleStochastic3D( Texture263_g128865 , Sampler263_g128865 , Coords263_g128865 , WorldPosition263_g128865 , WorldNormal263_g128865 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8991_g128811 = localSamplePlanar3D246_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8991_g128811 = localSampleStochastic2D234_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8991_g128811 = localSampleStochastic3D263_g128865;
					#else
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#endif
					half4 Layer133_g128835 = staticSwitch8991_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128872) = _TerrainNormalTex14;
					SamplerState Sampler238_g128872 = SS29_g128902;
					float4 temp_output_37_0_g128872 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128872 = temp_output_37_0_g128872;
					float3 temp_output_279_0_g128872 = Input_Position9197_g128811;
					half3 WorldPosition238_g128872 = temp_output_279_0_g128872;
					half4 localSamplePlanar2D238_g128872 = SamplePlanar2D( Texture238_g128872 , Sampler238_g128872 , Coords238_g128872 , WorldPosition238_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128872) = _TerrainNormalTex14;
					SamplerState Sampler246_g128872 = SS29_g128902;
					half4 Coords246_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition246_g128872 = temp_output_279_0_g128872;
					float3 temp_output_280_0_g128872 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128872 = temp_output_280_0_g128872;
					half4 localSamplePlanar3D246_g128872 = SamplePlanar3D( Texture246_g128872 , Sampler246_g128872 , Coords246_g128872 , WorldPosition246_g128872 , WorldNormal246_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128872) = _TerrainNormalTex14;
					SamplerState Sampler234_g128872 = SS29_g128902;
					float4 Coords234_g128872 = temp_output_37_0_g128872;
					float3 WorldPosition234_g128872 = temp_output_279_0_g128872;
					float4 localSampleStochastic2D234_g128872 = SampleStochastic2D( Texture234_g128872 , Sampler234_g128872 , Coords234_g128872 , WorldPosition234_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128872) = _TerrainNormalTex14;
					SamplerState Sampler263_g128872 = SS29_g128902;
					half4 Coords263_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition263_g128872 = temp_output_279_0_g128872;
					half3 WorldNormal263_g128872 = temp_output_280_0_g128872;
					half4 localSampleStochastic3D263_g128872 = SampleStochastic3D( Texture263_g128872 , Sampler263_g128872 , Coords263_g128872 , WorldPosition263_g128872 , WorldNormal263_g128872 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8990_g128811 = localSamplePlanar3D246_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8990_g128811 = localSampleStochastic2D234_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8990_g128811 = localSampleStochastic3D263_g128872;
					#else
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#endif
					half4 Layer237_g128835 = staticSwitch8990_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128873) = _TerrainNormalTex15;
					SamplerState Sampler238_g128873 = SS29_g128902;
					float4 temp_output_37_0_g128873 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128873 = temp_output_37_0_g128873;
					float3 temp_output_279_0_g128873 = Input_Position9197_g128811;
					half3 WorldPosition238_g128873 = temp_output_279_0_g128873;
					half4 localSamplePlanar2D238_g128873 = SamplePlanar2D( Texture238_g128873 , Sampler238_g128873 , Coords238_g128873 , WorldPosition238_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128873) = _TerrainNormalTex15;
					SamplerState Sampler246_g128873 = SS29_g128902;
					half4 Coords246_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition246_g128873 = temp_output_279_0_g128873;
					float3 temp_output_280_0_g128873 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128873 = temp_output_280_0_g128873;
					half4 localSamplePlanar3D246_g128873 = SamplePlanar3D( Texture246_g128873 , Sampler246_g128873 , Coords246_g128873 , WorldPosition246_g128873 , WorldNormal246_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128873) = _TerrainNormalTex15;
					SamplerState Sampler234_g128873 = SS29_g128902;
					float4 Coords234_g128873 = temp_output_37_0_g128873;
					float3 WorldPosition234_g128873 = temp_output_279_0_g128873;
					float4 localSampleStochastic2D234_g128873 = SampleStochastic2D( Texture234_g128873 , Sampler234_g128873 , Coords234_g128873 , WorldPosition234_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128873) = _TerrainNormalTex15;
					SamplerState Sampler263_g128873 = SS29_g128902;
					half4 Coords263_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition263_g128873 = temp_output_279_0_g128873;
					half3 WorldNormal263_g128873 = temp_output_280_0_g128873;
					half4 localSampleStochastic3D263_g128873 = SampleStochastic3D( Texture263_g128873 , Sampler263_g128873 , Coords263_g128873 , WorldPosition263_g128873 , WorldNormal263_g128873 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8989_g128811 = localSamplePlanar3D246_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8989_g128811 = localSampleStochastic2D234_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8989_g128811 = localSampleStochastic3D263_g128873;
					#else
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#endif
					half4 Layer338_g128835 = staticSwitch8989_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128874) = _TerrainNormalTex16;
					SamplerState Sampler238_g128874 = SS29_g128902;
					float4 temp_output_37_0_g128874 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128874 = temp_output_37_0_g128874;
					float3 temp_output_279_0_g128874 = Input_Position9197_g128811;
					half3 WorldPosition238_g128874 = temp_output_279_0_g128874;
					half4 localSamplePlanar2D238_g128874 = SamplePlanar2D( Texture238_g128874 , Sampler238_g128874 , Coords238_g128874 , WorldPosition238_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128874) = _TerrainNormalTex16;
					SamplerState Sampler246_g128874 = SS29_g128902;
					half4 Coords246_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition246_g128874 = temp_output_279_0_g128874;
					float3 temp_output_280_0_g128874 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128874 = temp_output_280_0_g128874;
					half4 localSamplePlanar3D246_g128874 = SamplePlanar3D( Texture246_g128874 , Sampler246_g128874 , Coords246_g128874 , WorldPosition246_g128874 , WorldNormal246_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128874) = _TerrainNormalTex16;
					SamplerState Sampler234_g128874 = SS29_g128902;
					float4 Coords234_g128874 = temp_output_37_0_g128874;
					float3 WorldPosition234_g128874 = temp_output_279_0_g128874;
					float4 localSampleStochastic2D234_g128874 = SampleStochastic2D( Texture234_g128874 , Sampler234_g128874 , Coords234_g128874 , WorldPosition234_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128874) = _TerrainNormalTex16;
					SamplerState Sampler263_g128874 = SS29_g128902;
					half4 Coords263_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition263_g128874 = temp_output_279_0_g128874;
					half3 WorldNormal263_g128874 = temp_output_280_0_g128874;
					half4 localSampleStochastic3D263_g128874 = SampleStochastic3D( Texture263_g128874 , Sampler263_g128874 , Coords263_g128874 , WorldPosition263_g128874 , WorldNormal263_g128874 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8988_g128811 = localSamplePlanar3D246_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8988_g128811 = localSampleStochastic2D234_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8988_g128811 = localSampleStochastic3D263_g128874;
					#else
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#endif
					half4 Layer439_g128835 = staticSwitch8988_g128811;
					float4 weightedBlendVar31_g128835 = Weights52_g128835;
					float4 weightedBlend31_g128835 = ( weightedBlendVar31_g128835.x*Layer133_g128835 + weightedBlendVar31_g128835.y*Layer237_g128835 + weightedBlendVar31_g128835.z*Layer338_g128835 + weightedBlendVar31_g128835.w*Layer439_g128835 );
					half4 Terrain_B_168987_g128811 = weightedBlend31_g128835;
					half4 Layer_1644_g128817 = Terrain_B_168987_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 + Layer_1644_g128817 );
					#else
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#endif
					half4 Blend_Normal7512_g128811 = staticSwitch40_g128817;
					half4 Normal_Packed45_g128896 = Blend_Normal7512_g128811;
					float2 appendResult58_g128896 = (float2(( (Normal_Packed45_g128896).x * (Normal_Packed45_g128896).w ) , (Normal_Packed45_g128896).y));
					half2 Normal_Default50_g128896 = appendResult58_g128896;
					half2 Normal_ASTC41_g128896 = (Normal_Packed45_g128896).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128896 = Normal_ASTC41_g128896;
					#else
					float2 staticSwitch38_g128896 = Normal_Default50_g128896;
					#endif
					half2 Normal_NO_DTX544_g128896 = (Normal_Packed45_g128896).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128896 = Normal_NO_DTX544_g128896;
					#else
					float2 staticSwitch37_g128896 = staticSwitch38_g128896;
					#endif
					half4 Weights52_g128813 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128813 = temp_output_6970_0_g128811;
					half4 Layer237_g128813 = temp_output_6977_0_g128811;
					half4 Layer338_g128813 = temp_output_6978_0_g128811;
					half4 Layer439_g128813 = temp_output_6983_0_g128811;
					float4 weightedBlendVar31_g128813 = Weights52_g128813;
					float4 weightedBlend31_g128813 = ( weightedBlendVar31_g128813.x*Layer133_g128813 + weightedBlendVar31_g128813.y*Layer237_g128813 + weightedBlendVar31_g128813.z*Layer338_g128813 + weightedBlendVar31_g128813.w*Layer439_g128813 );
					half4 Terrain_Shaders_047203_g128811 = weightedBlend31_g128813;
					half4 Layer_045_g128819 = Terrain_Shaders_047203_g128811;
					half4 Weights52_g128825 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128825 = temp_output_8714_0_g128811;
					half4 Layer237_g128825 = temp_output_8721_0_g128811;
					half4 Layer338_g128825 = temp_output_8724_0_g128811;
					half4 Layer439_g128825 = temp_output_8727_0_g128811;
					float4 weightedBlendVar31_g128825 = Weights52_g128825;
					float4 weightedBlend31_g128825 = ( weightedBlendVar31_g128825.x*Layer133_g128825 + weightedBlendVar31_g128825.y*Layer237_g128825 + weightedBlendVar31_g128825.z*Layer338_g128825 + weightedBlendVar31_g128825.w*Layer439_g128825 );
					half4 Terrain_Shaders_088730_g128811 = weightedBlend31_g128825;
					half4 Layer_0810_g128819 = Terrain_Shaders_088730_g128811;
					half4 Weights52_g128831 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128831 = temp_output_8815_0_g128811;
					half4 Layer237_g128831 = temp_output_8818_0_g128811;
					half4 Layer338_g128831 = temp_output_8819_0_g128811;
					half4 Layer439_g128831 = temp_output_8820_0_g128811;
					float4 weightedBlendVar31_g128831 = Weights52_g128831;
					float4 weightedBlend31_g128831 = ( weightedBlendVar31_g128831.x*Layer133_g128831 + weightedBlendVar31_g128831.y*Layer237_g128831 + weightedBlendVar31_g128831.z*Layer338_g128831 + weightedBlendVar31_g128831.w*Layer439_g128831 );
					half4 Terrain_Shaders_128871_g128811 = weightedBlend31_g128831;
					half4 Layer_1243_g128819 = Terrain_Shaders_128871_g128811;
					half4 Weights52_g128837 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128837 = temp_output_8931_0_g128811;
					half4 Layer237_g128837 = temp_output_8934_0_g128811;
					half4 Layer338_g128837 = temp_output_8935_0_g128811;
					half4 Layer439_g128837 = temp_output_8936_0_g128811;
					float4 weightedBlendVar31_g128837 = Weights52_g128837;
					float4 weightedBlend31_g128837 = ( weightedBlendVar31_g128837.x*Layer133_g128837 + weightedBlendVar31_g128837.y*Layer237_g128837 + weightedBlendVar31_g128837.z*Layer338_g128837 + weightedBlendVar31_g128837.w*Layer439_g128837 );
					half4 Terrain_Shaders_169014_g128811 = weightedBlend31_g128837;
					half4 Layer_1644_g128819 = Terrain_Shaders_169014_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 + Layer_1644_g128819 );
					#else
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#endif
					half4 Blend_Shaders7420_g128811 = staticSwitch40_g128819;
					half4 Normal_Packed45_g128895 = Blend_Shaders7420_g128811;
					half2 Normal_NO_DTX544_g128895 = (Normal_Packed45_g128895).wy;
					#ifdef TVE_TERRAIN_PACKED
					float2 staticSwitch9080_g128811 = (Normal_NO_DTX544_g128895*2.0 + -1.0);
					#else
					float2 staticSwitch9080_g128811 = (staticSwitch37_g128896*2.0 + -1.0);
					#endif
					half4 Weights52_g128814 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128814 = _TerrainParams1;
					half4 Layer237_g128814 = _TerrainParams2;
					half4 Layer338_g128814 = _TerrainParams3;
					half4 Layer439_g128814 = _TerrainParams4;
					float4 weightedBlendVar31_g128814 = Weights52_g128814;
					float4 weightedBlend31_g128814 = ( weightedBlendVar31_g128814.x*Layer133_g128814 + weightedBlendVar31_g128814.y*Layer237_g128814 + weightedBlendVar31_g128814.z*Layer338_g128814 + weightedBlendVar31_g128814.w*Layer439_g128814 );
					half4 Terrain_Params_047533_g128811 = weightedBlend31_g128814;
					half4 Layer_045_g128820 = Terrain_Params_047533_g128811;
					half4 Weights52_g128826 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128826 = _TerrainParams5;
					half4 Layer237_g128826 = _TerrainParams6;
					half4 Layer338_g128826 = _TerrainParams7;
					half4 Layer439_g128826 = _TerrainParams8;
					float4 weightedBlendVar31_g128826 = Weights52_g128826;
					float4 weightedBlend31_g128826 = ( weightedBlendVar31_g128826.x*Layer133_g128826 + weightedBlendVar31_g128826.y*Layer237_g128826 + weightedBlendVar31_g128826.z*Layer338_g128826 + weightedBlendVar31_g128826.w*Layer439_g128826 );
					half4 Terrain_Params_088739_g128811 = weightedBlend31_g128826;
					half4 Layer_0810_g128820 = Terrain_Params_088739_g128811;
					half4 Weights52_g128832 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128832 = _TerrainParams9;
					half4 Layer237_g128832 = _TerrainParams10;
					half4 Layer338_g128832 = _TerrainParams11;
					half4 Layer439_g128832 = _TerrainParams12;
					float4 weightedBlendVar31_g128832 = Weights52_g128832;
					float4 weightedBlend31_g128832 = ( weightedBlendVar31_g128832.x*Layer133_g128832 + weightedBlendVar31_g128832.y*Layer237_g128832 + weightedBlendVar31_g128832.z*Layer338_g128832 + weightedBlendVar31_g128832.w*Layer439_g128832 );
					half4 Terrain_Params_128867_g128811 = weightedBlend31_g128832;
					half4 Layer_1243_g128820 = Terrain_Params_128867_g128811;
					half4 Weights52_g128838 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128838 = _TerrainParams13;
					half4 Layer237_g128838 = _TerrainParams14;
					half4 Layer338_g128838 = _TerrainParams15;
					half4 Layer439_g128838 = _TerrainParams16;
					float4 weightedBlendVar31_g128838 = Weights52_g128838;
					float4 weightedBlend31_g128838 = ( weightedBlendVar31_g128838.x*Layer133_g128838 + weightedBlendVar31_g128838.y*Layer237_g128838 + weightedBlendVar31_g128838.z*Layer338_g128838 + weightedBlendVar31_g128838.w*Layer439_g128838 );
					half4 Terrain_Params_169017_g128811 = weightedBlend31_g128838;
					half4 Layer_1644_g128820 = Terrain_Params_169017_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 + Layer_1644_g128820 );
					#else
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#endif
					half4 Blend_Params7547_g128811 = staticSwitch40_g128820;
					half2 Normal_Planar45_g128897 = ( ( staticSwitch9080_g128811 * (Blend_Params7547_g128811).z ) * _TerrainNormalValue );
					float2 break71_g128897 = Normal_Planar45_g128897;
					float3 appendResult72_g128897 = (float3(break71_g128897.x , 0.0 , break71_g128897.y));
					half2 Final_NormalTS9145_g128811 = (mul( ase_worldToTangent, appendResult72_g128897 )).xy;
					half2 Local_Normal9200_g128810 = Final_NormalTS9145_g128811;
					float2 In_NormalTS3_g128923 = Local_Normal9200_g128810;
					float3 appendResult68_g128921 = (float3(Local_Normal9200_g128810 , 1.0));
					float3 tanToWorld0 = float3( ase_tangentWS.x, ase_bitangentWS.x, ase_normalWS.x );
					float3 tanToWorld1 = float3( ase_tangentWS.y, ase_bitangentWS.y, ase_normalWS.y );
					float3 tanToWorld2 = float3( ase_tangentWS.z, ase_bitangentWS.z, ase_normalWS.z );
					float3 tanNormal74_g128921 = appendResult68_g128921;
					float3 worldNormal74_g128921 = normalize( float3( dot( tanToWorld0, tanNormal74_g128921 ), dot( tanToWorld1, tanNormal74_g128921 ), dot( tanToWorld2, tanNormal74_g128921 ) ) );
					float3 In_NormalWS3_g128923 = worldNormal74_g128921;
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9139_g128811 = 0.0;
					#else
					float staticSwitch9139_g128811 = ( (Blend_Shaders7420_g128811).x * (Blend_Params7547_g128811).x * _TerrainMetallicValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9097_g128811 = 1.0;
					#else
					float staticSwitch9097_g128811 = ( (Blend_Shaders7420_g128811).y * _TerrainOcclusionValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).x;
					#else
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).w;
					#endif
					float4 appendResult9147_g128811 = (float4(staticSwitch9139_g128811 , staticSwitch9097_g128811 , (Blend_Shaders7420_g128811).z , ( staticSwitch9105_g128811 * (Blend_Params7547_g128811).w * _TerrainSmoothnessValue )));
					half4 Final_Shaders9146_g128811 = appendResult9147_g128811;
					half4 Local_Shader9201_g128810 = Final_Shaders9146_g128811;
					float4 In_Shader3_g128923 = Local_Shader9201_g128810;
					half4 Weights52_g128888 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128888 = _TerrainSpecular1;
					half4 Layer237_g128888 = _TerrainSpecular2;
					half4 Layer338_g128888 = _TerrainSpecular3;
					half4 Layer439_g128888 = _TerrainSpecular4;
					float4 weightedBlendVar31_g128888 = Weights52_g128888;
					float4 weightedBlend31_g128888 = ( weightedBlendVar31_g128888.x*Layer133_g128888 + weightedBlendVar31_g128888.y*Layer237_g128888 + weightedBlendVar31_g128888.z*Layer338_g128888 + weightedBlendVar31_g128888.w*Layer439_g128888 );
					half4 Terrain_Specular_047390_g128811 = weightedBlend31_g128888;
					half4 Layer_045_g128893 = Terrain_Specular_047390_g128811;
					half4 Weights52_g128827 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128827 = _TerrainSpecular5;
					half4 Layer237_g128827 = _TerrainSpecular6;
					half4 Layer338_g128827 = _TerrainSpecular7;
					half4 Layer439_g128827 = _TerrainSpecular8;
					float4 weightedBlendVar31_g128827 = Weights52_g128827;
					float4 weightedBlend31_g128827 = ( weightedBlendVar31_g128827.x*Layer133_g128827 + weightedBlendVar31_g128827.y*Layer237_g128827 + weightedBlendVar31_g128827.z*Layer338_g128827 + weightedBlendVar31_g128827.w*Layer439_g128827 );
					half4 Terrain_Specular_088745_g128811 = weightedBlend31_g128827;
					half4 Layer_0810_g128893 = Terrain_Specular_088745_g128811;
					half4 Weights52_g128833 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128833 = _TerrainSpecular9;
					half4 Layer237_g128833 = _TerrainSpecular10;
					half4 Layer338_g128833 = _TerrainSpecular11;
					half4 Layer439_g128833 = _TerrainSpecular12;
					float4 weightedBlendVar31_g128833 = Weights52_g128833;
					float4 weightedBlend31_g128833 = ( weightedBlendVar31_g128833.x*Layer133_g128833 + weightedBlendVar31_g128833.y*Layer237_g128833 + weightedBlendVar31_g128833.z*Layer338_g128833 + weightedBlendVar31_g128833.w*Layer439_g128833 );
					half4 Terrain_Specular_128869_g128811 = weightedBlend31_g128833;
					half4 Layer_1243_g128893 = Terrain_Specular_128869_g128811;
					half4 Weights52_g128839 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128839 = _TerrainSpecular13;
					half4 Layer237_g128839 = _TerrainSpecular14;
					half4 Layer338_g128839 = _TerrainSpecular15;
					half4 Layer439_g128839 = _TerrainSpecular16;
					float4 weightedBlendVar31_g128839 = Weights52_g128839;
					float4 weightedBlend31_g128839 = ( weightedBlendVar31_g128839.x*Layer133_g128839 + weightedBlendVar31_g128839.y*Layer237_g128839 + weightedBlendVar31_g128839.z*Layer338_g128839 + weightedBlendVar31_g128839.w*Layer439_g128839 );
					half4 Terrain_Specular_169019_g128811 = weightedBlend31_g128839;
					half4 Layer_1644_g128893 = Terrain_Specular_169019_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 + Layer_1644_g128893 );
					#else
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#endif
					half4 Blend_TerrainSpecular7446_g128811 = staticSwitch40_g128893;
					float3 temp_output_9088_0_g128811 = (Blend_TerrainSpecular7446_g128811).rgb;
					float4 appendResult9189_g128811 = (float4(temp_output_9088_0_g128811 , 1.0));
					half4 Final_Emissive9151_g128811 = appendResult9189_g128811;
					half4 Local_EmissiveLDR9202_g128810 = Final_Emissive9151_g128811;
					float4 In_Emissive3_g128923 = Local_EmissiveLDR9202_g128810;
					float3 temp_output_3_0_g128922 = Local_Albedo9199_g128810;
					float dotResult20_g128922 = dot( temp_output_3_0_g128922 , float3( 0.2126, 0.7152, 0.0722 ) );
					float temp_output_9165_0_g128810 = dotResult20_g128922;
					float In_Grayscale3_g128923 = temp_output_9165_0_g128810;
					float clampResult9168_g128810 = clamp( saturate( ( temp_output_9165_0_g128810 * 5.0 ) ) , 0.2 , 1.0 );
					float In_Luminosity3_g128923 = clampResult9168_g128810;
					half Final_MultiShader9150_g128811 = ( (Blend_TerrainSpecular7446_g128811).a * (Blend_Albedo7468_g128811).w );
					half Local_MultiMask9203_g128810 = Final_MultiShader9150_g128811;
					float In_MultiMask3_g128923 = Local_MultiMask9203_g128810;
					float4 temp_output_35_0_g128904 = appendResult9125_g128811;
					float2 InputScale48_g128904 = (temp_output_35_0_g128904).zw;
					half2 FinalScale53_g128904 = ( 1.0 / InputScale48_g128904 );
					float2 InputPosition52_g128904 = (temp_output_35_0_g128904).xy;
					half2 FinalPosition58_g128904 = -( FinalScale53_g128904 * InputPosition52_g128904 );
					float2 temp_output_65_0_g128904 = ( ( (ase_positionWS).xz * FinalScale53_g128904 ) + FinalPosition58_g128904 );
					float2 Terrain_Holes_UV9406_g128811 = temp_output_65_0_g128904;
					#ifdef TVE_ALPHA_CLIP
					float staticSwitch9188_g128811 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g128811 ).r;
					#else
					float staticSwitch9188_g128811 = 1.0;
					#endif
					half Terrain_Holes7437_g128811 = staticSwitch9188_g128811;
					half Local_HoleMask9204_g128810 = Terrain_Holes7437_g128811;
					float In_AlphaClip3_g128923 = Local_HoleMask9204_g128810;
					float In_AlphaFade3_g128923 = 1.0;
					float3 temp_cast_9 = (1.0).xxx;
					float3 In_Translucency3_g128923 = temp_cast_9;
					float In_Transmission3_g128923 = 1.0;
					float In_Thickness3_g128923 = 0.0;
					float In_Diffusion3_g128923 = 0.0;
					float In_Depth3_g128923 = 0.0;
					{
					Data3_g128923.Dummy = In_Dummy3_g128923;
					Data3_g128923.Albedo = In_Albedo3_g128923;
					Data3_g128923.AlbedoRaw = In_AlbedoRaw3_g128923;
					Data3_g128923.NormalTS = In_NormalTS3_g128923;
					Data3_g128923.NormalWS = In_NormalWS3_g128923;
					Data3_g128923.Shader = In_Shader3_g128923;
					Data3_g128923.Emissive= In_Emissive3_g128923;
					Data3_g128923.MultiMask = In_MultiMask3_g128923;
					Data3_g128923.Grayscale = In_Grayscale3_g128923;
					Data3_g128923.Luminosity = In_Luminosity3_g128923;
					Data3_g128923.AlphaClip = In_AlphaClip3_g128923;
					Data3_g128923.AlphaFade = In_AlphaFade3_g128923;
					Data3_g128923.Translucency = In_Translucency3_g128923;
					Data3_g128923.Transmission = In_Transmission3_g128923;
					Data3_g128923.Thickness = In_Thickness3_g128923;
					Data3_g128923.Diffusion = In_Diffusion3_g128923;
					Data3_g128923.Depth = In_Depth3_g128923;
					}
					TVEVisualData Data4_g128928 = Data3_g128923;
					float Out_Dummy4_g128928 = 0;
					float3 Out_Albedo4_g128928 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128928 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128928 = float2( 0,0 );
					float3 Out_NormalWS4_g128928 = float3( 0,0,0 );
					float4 Out_Shader4_g128928 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128928 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128928 = 0;
					float Out_Grayscale4_g128928 = 0;
					float Out_Luminosity4_g128928 = 0;
					float Out_AlphaClip4_g128928 = 0;
					float Out_AlphaFade4_g128928 = 0;
					float3 Out_Translucency4_g128928 = float3( 0,0,0 );
					float Out_Transmission4_g128928 = 0;
					float Out_Thickness4_g128928 = 0;
					float Out_Diffusion4_g128928 = 0;
					float Out_Depth4_g128928 = 0;
					{
					Out_Dummy4_g128928 = Data4_g128928.Dummy;
					Out_Albedo4_g128928 = Data4_g128928.Albedo;
					Out_AlbedoRaw4_g128928 = Data4_g128928.AlbedoRaw;
					Out_NormalTS4_g128928 = Data4_g128928.NormalTS;
					Out_NormalWS4_g128928 = Data4_g128928.NormalWS;
					Out_Shader4_g128928 = Data4_g128928.Shader;
					Out_Emissive4_g128928= Data4_g128928.Emissive;
					Out_MultiMask4_g128928 = Data4_g128928.MultiMask;
					Out_Grayscale4_g128928 = Data4_g128928.Grayscale;
					Out_Luminosity4_g128928= Data4_g128928.Luminosity;
					Out_AlphaClip4_g128928 = Data4_g128928.AlphaClip;
					Out_AlphaFade4_g128928 = Data4_g128928.AlphaFade;
					Out_Translucency4_g128928 = Data4_g128928.Translucency;
					Out_Transmission4_g128928 = Data4_g128928.Transmission;
					Out_Thickness4_g128928 = Data4_g128928.Thickness;
					Out_Diffusion4_g128928 = Data4_g128928.Diffusion;
					Out_Depth4_g128928= Data4_g128928.Depth;
					}
					half3 Visual_Albedo139_g128924 = Out_Albedo4_g128928;
					float temp_output_200_12_g128924 = Out_Grayscale4_g128928;
					half Visual_Grayscale150_g128924 = temp_output_200_12_g128924;
					float3 temp_cast_10 = (Visual_Grayscale150_g128924).xxx;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 vertexToFrag73_g114306 = IN.ase_texcoord7.xyz;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = IN.ase_color;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g128925 = Data204_g128736;
					float Out_Dummy15_g128925 = 0;
					float4 Out_CoatDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128925 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128925 = Data15_g128925.Dummy;
					Out_CoatDataRT15_g128925 = Data15_g128925.CoatDataRT;
					Out_PaintDataRT15_g128925 = Data15_g128925.PaintDataRT;
					Out_GlowDataRT15_g128925= Data15_g128925.GlowDataRT;
					Out_AtmoDataRT15_g128925= Data15_g128925.AtmoDataRT;
					Out_FadeDataRT15_g128925= Data15_g128925.FadeDataRT;
					Out_FormDataRT15_g128925 = Data15_g128925.FormDataRT;
					Out_FlowDataRT15_g128925 = Data15_g128925.FlowDataRT;
					}
					half4 Global_PaintParams209_g128924 = Out_PaintDataRT15_g128925;
					float4 temp_output_6_0_g128942 = Global_PaintParams209_g128924;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128942 = ( temp_output_6_0_g128942 + _TintingElementMode );
					#else
					float4 staticSwitch14_g128942 = temp_output_6_0_g128942;
					#endif
					#ifdef TVE_TINTING_ELEMENT
					float4 staticSwitch283_g128924 = staticSwitch14_g128942;
					#else
					float4 staticSwitch283_g128924 = TVE_PaintParams;
					#endif
					float4 lerpResult412_g128924 = lerp( float4( 1,1,1,1 ) , staticSwitch283_g128924 , ( _TintingGlobalValue * TVE_IsEnabled ));
					half Tinting_GlobalValue285_g128924 = saturate( (lerpResult412_g128924).w );
					float3 lerpResult368_g128924 = lerp( Visual_Albedo139_g128924 , temp_cast_10 , ( Tinting_GlobalValue285_g128924 * _TintingGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128948 = 2.0;
					#else
					float staticSwitch1_g128948 = 4.594794;
					#endif
					half3 Tinting_GlobalColor290_g128924 = (lerpResult412_g128924).xyz;
					float temp_output_200_11_g128924 = Out_MultiMask4_g128928;
					half Visual_MultiMask181_g128924 = temp_output_200_11_g128924;
					float lerpResult147_g128924 = lerp( 1.0 , Visual_MultiMask181_g128924 , _TintingMultiValue);
					half Tinting_MutiMask121_g128924 = lerpResult147_g128924;
					half Tinting_TexMask385_g128924 = 1.0;
					float temp_output_200_15_g128924 = Out_Luminosity4_g128928;
					half Visual_Luminosity257_g128924 = temp_output_200_15_g128924;
					float clampResult17_g128935 = clamp( Visual_Luminosity257_g128924 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128939 = _TintingLumaRemap.x;
					float temp_output_9_0_g128939 = ( clampResult17_g128935 - temp_output_7_0_g128939 );
					float lerpResult228_g128924 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128939 * _TintingLumaRemap.z ) + 0.0001 ) ) , _TintingLumaValue);
					half Tinting_LumaMask153_g128924 = lerpResult228_g128924;
					half Tinting_VertMask309_g128924 = 1.0;
					half Tinting_NoiseMask213_g128924 = 1.0;
					half Custom_Mask345_g128924 = 1.0;
					half Tinting_CoreMasks433_g128924 = ( Tinting_MutiMask121_g128924 * Tinting_TexMask385_g128924 * Tinting_LumaMask153_g128924 * Tinting_VertMask309_g128924 * Tinting_NoiseMask213_g128924 * Custom_Mask345_g128924 );
					float temp_output_7_0_g128946 = _TintingBlendRemap.x;
					float temp_output_9_0_g128946 = ( ( _TintingIntensityValue * Tinting_CoreMasks433_g128924 * Tinting_GlobalValue285_g128924 ) - temp_output_7_0_g128946 );
					half Tinting_Mask242_g128924 = ( saturate( ( ( temp_output_9_0_g128946 * _TintingBlendRemap.z ) + 0.0001 ) ) * TVE_IsEnabled );
					float3 lerpResult90_g128924 = lerp( Visual_Albedo139_g128924 , ( lerpResult368_g128924 * staticSwitch1_g128948 * Tinting_GlobalColor290_g128924 * (_TintingColor).rgb ) , Tinting_Mask242_g128924);
					#ifdef TVE_TINTING
					float3 staticSwitch286_g128924 = lerpResult90_g128924;
					#else
					float3 staticSwitch286_g128924 = Visual_Albedo139_g128924;
					#endif
					half3 Final_Albedo97_g128924 = staticSwitch286_g128924;
					float3 In_Albedo3_g128944 = Final_Albedo97_g128924;
					float3 In_AlbedoRaw3_g128944 = Out_AlbedoRaw4_g128928;
					float2 In_NormalTS3_g128944 = Out_NormalTS4_g128928;
					float3 In_NormalWS3_g128944 = Out_NormalWS4_g128928;
					float4 In_Shader3_g128944 = Out_Shader4_g128928;
					float4 In_Emissive3_g128944 = Out_Emissive4_g128928;
					float In_Grayscale3_g128944 = temp_output_200_12_g128924;
					float In_Luminosity3_g128944 = temp_output_200_15_g128924;
					float In_MultiMask3_g128944 = temp_output_200_11_g128924;
					float In_AlphaClip3_g128944 = Out_AlphaClip4_g128928;
					float In_AlphaFade3_g128944 = Out_AlphaFade4_g128928;
					float3 In_Translucency3_g128944 = Out_Translucency4_g128928;
					float In_Transmission3_g128944 = Out_Transmission4_g128928;
					float In_Thickness3_g128944 = Out_Thickness4_g128928;
					float In_Diffusion3_g128944 = Out_Diffusion4_g128928;
					float In_Depth3_g128944 = Out_Depth4_g128928;
					{
					Data3_g128944.Dummy = In_Dummy3_g128944;
					Data3_g128944.Albedo = In_Albedo3_g128944;
					Data3_g128944.AlbedoRaw = In_AlbedoRaw3_g128944;
					Data3_g128944.NormalTS = In_NormalTS3_g128944;
					Data3_g128944.NormalWS = In_NormalWS3_g128944;
					Data3_g128944.Shader = In_Shader3_g128944;
					Data3_g128944.Emissive= In_Emissive3_g128944;
					Data3_g128944.MultiMask = In_MultiMask3_g128944;
					Data3_g128944.Grayscale = In_Grayscale3_g128944;
					Data3_g128944.Luminosity = In_Luminosity3_g128944;
					Data3_g128944.AlphaClip = In_AlphaClip3_g128944;
					Data3_g128944.AlphaFade = In_AlphaFade3_g128944;
					Data3_g128944.Translucency = In_Translucency3_g128944;
					Data3_g128944.Transmission = In_Transmission3_g128944;
					Data3_g128944.Thickness = In_Thickness3_g128944;
					Data3_g128944.Diffusion = In_Diffusion3_g128944;
					Data3_g128944.Depth = In_Depth3_g128944;
					}
					TVEVisualData Data4_g128951 = Data3_g128944;
					float Out_Dummy4_g128951 = 0;
					float3 Out_Albedo4_g128951 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128951 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128951 = float2( 0,0 );
					float3 Out_NormalWS4_g128951 = float3( 0,0,0 );
					float4 Out_Shader4_g128951 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128951 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128951 = 0;
					float Out_Grayscale4_g128951 = 0;
					float Out_Luminosity4_g128951 = 0;
					float Out_AlphaClip4_g128951 = 0;
					float Out_AlphaFade4_g128951 = 0;
					float3 Out_Translucency4_g128951 = float3( 0,0,0 );
					float Out_Transmission4_g128951 = 0;
					float Out_Thickness4_g128951 = 0;
					float Out_Diffusion4_g128951 = 0;
					float Out_Depth4_g128951 = 0;
					{
					Out_Dummy4_g128951 = Data4_g128951.Dummy;
					Out_Albedo4_g128951 = Data4_g128951.Albedo;
					Out_AlbedoRaw4_g128951 = Data4_g128951.AlbedoRaw;
					Out_NormalTS4_g128951 = Data4_g128951.NormalTS;
					Out_NormalWS4_g128951 = Data4_g128951.NormalWS;
					Out_Shader4_g128951 = Data4_g128951.Shader;
					Out_Emissive4_g128951= Data4_g128951.Emissive;
					Out_MultiMask4_g128951 = Data4_g128951.MultiMask;
					Out_Grayscale4_g128951 = Data4_g128951.Grayscale;
					Out_Luminosity4_g128951= Data4_g128951.Luminosity;
					Out_AlphaClip4_g128951 = Data4_g128951.AlphaClip;
					Out_AlphaFade4_g128951 = Data4_g128951.AlphaFade;
					Out_Translucency4_g128951 = Data4_g128951.Translucency;
					Out_Transmission4_g128951 = Data4_g128951.Transmission;
					Out_Thickness4_g128951 = Data4_g128951.Thickness;
					Out_Diffusion4_g128951 = Data4_g128951.Diffusion;
					Out_Depth4_g128951= Data4_g128951.Depth;
					}
					half3 Visual_Albedo292_g128949 = Out_Albedo4_g128951;
					float temp_output_280_12_g128949 = Out_Grayscale4_g128951;
					half Visual_Grayscale308_g128949 = temp_output_280_12_g128949;
					float3 temp_cast_32 = (Visual_Grayscale308_g128949).xxx;
					TVEGlobalData Data15_g128950 = Data204_g128736;
					float Out_Dummy15_g128950 = 0;
					float4 Out_CoatDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128950 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128950 = Data15_g128950.Dummy;
					Out_CoatDataRT15_g128950 = Data15_g128950.CoatDataRT;
					Out_PaintDataRT15_g128950 = Data15_g128950.PaintDataRT;
					Out_GlowDataRT15_g128950= Data15_g128950.GlowDataRT;
					Out_AtmoDataRT15_g128950= Data15_g128950.AtmoDataRT;
					Out_FadeDataRT15_g128950= Data15_g128950.FadeDataRT;
					Out_FormDataRT15_g128950 = Data15_g128950.FormDataRT;
					Out_FlowDataRT15_g128950 = Data15_g128950.FlowDataRT;
					}
					half4 Global_AtmoParams314_g128949 = Out_AtmoDataRT15_g128950;
					float temp_output_6_0_g128968 = (Global_AtmoParams314_g128949).x;
					#ifdef TVE_DUMMY
					float staticSwitch14_g128968 = ( temp_output_6_0_g128968 + _DrynessElementMode );
					#else
					float staticSwitch14_g128968 = temp_output_6_0_g128968;
					#endif
					#ifdef TVE_DRYNESS_ELEMENT
					float staticSwitch351_g128949 = staticSwitch14_g128968;
					#else
					float staticSwitch351_g128949 = TVE_AtmoParams.x;
					#endif
					float lerpResult505_g128949 = lerp( 1.0 , ( staticSwitch351_g128949 * TVE_IsEnabled ) , _DrynessGlobalValue);
					half Dryness_GlobalValue352_g128949 = lerpResult505_g128949;
					float3 lerpResult485_g128949 = lerp( Visual_Albedo292_g128949 , temp_cast_32 , ( Dryness_GlobalValue352_g128949 * _DrynessGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128972 = 2.0;
					#else
					float staticSwitch1_g128972 = 4.594794;
					#endif
					half Dryness_TexMask478_g128949 = 1.0;
					float temp_output_280_11_g128949 = Out_MultiMask4_g128951;
					half Visual_MultiMask310_g128949 = temp_output_280_11_g128949;
					float lerpResult283_g128949 = lerp( 1.0 , Visual_MultiMask310_g128949 , _DrynessMultiValue);
					half Dryness_MultiMask302_g128949 = lerpResult283_g128949;
					float temp_output_280_15_g128949 = Out_Luminosity4_g128951;
					half Visual_Luminosity309_g128949 = temp_output_280_15_g128949;
					float clampResult17_g128961 = clamp( Visual_Luminosity309_g128949 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128965 = _DrynessLumaRemap.x;
					float temp_output_9_0_g128965 = ( clampResult17_g128961 - temp_output_7_0_g128965 );
					float lerpResult295_g128949 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128965 * _DrynessLumaRemap.z ) + 0.0001 ) ) , _DrynessLumaValue);
					half Dryness_LumaMask301_g128949 = lerpResult295_g128949;
					half Dryness_VertMask378_g128949 = 1.0;
					half Dryness_MaskNoise291_g128949 = 1.0;
					half Custom_Mask411_g128949 = 1.0;
					float temp_output_7_0_g128970 = _DrynessBlendRemap.x;
					float temp_output_9_0_g128970 = ( ( _DrynessIntensityValue * Dryness_TexMask478_g128949 * Dryness_MultiMask302_g128949 * Dryness_LumaMask301_g128949 * Dryness_VertMask378_g128949 * Dryness_MaskNoise291_g128949 * Dryness_GlobalValue352_g128949 * Custom_Mask411_g128949 ) - temp_output_7_0_g128970 );
					half Dryness_Mask329_g128949 = saturate( ( ( temp_output_9_0_g128970 * _DrynessBlendRemap.z ) + 0.0001 ) );
					float3 lerpResult336_g128949 = lerp( Visual_Albedo292_g128949 , ( lerpResult485_g128949 * staticSwitch1_g128972 * (_DrynessColor).rgb ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float3 staticSwitch356_g128949 = lerpResult336_g128949;
					#else
					float3 staticSwitch356_g128949 = Visual_Albedo292_g128949;
					#endif
					half3 Final_Albedo331_g128949 = staticSwitch356_g128949;
					float3 In_Albedo3_g128952 = Final_Albedo331_g128949;
					float3 In_AlbedoRaw3_g128952 = Out_AlbedoRaw4_g128951;
					float2 In_NormalTS3_g128952 = Out_NormalTS4_g128951;
					float3 In_NormalWS3_g128952 = Out_NormalWS4_g128951;
					half4 Visual_Shader415_g128949 = Out_Shader4_g128951;
					float4 break438_g128949 = Visual_Shader415_g128949;
					float4 appendResult439_g128949 = (float4(break438_g128949.x , break438_g128949.y , break438_g128949.z , ( break438_g128949.w * _DrynessSmoothnessValue )));
					float4 lerpResult427_g128949 = lerp( Visual_Shader415_g128949 , appendResult439_g128949 , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float4 staticSwitch426_g128949 = lerpResult427_g128949;
					#else
					float4 staticSwitch426_g128949 = Visual_Shader415_g128949;
					#endif
					half4 Final_Shader433_g128949 = staticSwitch426_g128949;
					float4 In_Shader3_g128952 = Final_Shader433_g128949;
					float4 In_Emissive3_g128952 = Out_Emissive4_g128951;
					float In_Grayscale3_g128952 = temp_output_280_12_g128949;
					float In_Luminosity3_g128952 = temp_output_280_15_g128949;
					float In_MultiMask3_g128952 = temp_output_280_11_g128949;
					float In_AlphaClip3_g128952 = Out_AlphaClip4_g128951;
					float In_AlphaFade3_g128952 = Out_AlphaFade4_g128951;
					float3 In_Translucency3_g128952 = Out_Translucency4_g128951;
					half Visual_Transmission416_g128949 = Out_Transmission4_g128951;
					float lerpResult421_g128949 = lerp( Visual_Transmission416_g128949 , ( Visual_Transmission416_g128949 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float staticSwitch418_g128949 = lerpResult421_g128949;
					#else
					float staticSwitch418_g128949 = Visual_Transmission416_g128949;
					#endif
					half Final_Transmission425_g128949 = staticSwitch418_g128949;
					float In_Transmission3_g128952 = Final_Transmission425_g128949;
					float In_Thickness3_g128952 = Out_Thickness4_g128951;
					float In_Diffusion3_g128952 = Out_Diffusion4_g128951;
					float In_Depth3_g128952 = Out_Depth4_g128951;
					{
					Data3_g128952.Dummy = In_Dummy3_g128952;
					Data3_g128952.Albedo = In_Albedo3_g128952;
					Data3_g128952.AlbedoRaw = In_AlbedoRaw3_g128952;
					Data3_g128952.NormalTS = In_NormalTS3_g128952;
					Data3_g128952.NormalWS = In_NormalWS3_g128952;
					Data3_g128952.Shader = In_Shader3_g128952;
					Data3_g128952.Emissive= In_Emissive3_g128952;
					Data3_g128952.MultiMask = In_MultiMask3_g128952;
					Data3_g128952.Grayscale = In_Grayscale3_g128952;
					Data3_g128952.Luminosity = In_Luminosity3_g128952;
					Data3_g128952.AlphaClip = In_AlphaClip3_g128952;
					Data3_g128952.AlphaFade = In_AlphaFade3_g128952;
					Data3_g128952.Translucency = In_Translucency3_g128952;
					Data3_g128952.Transmission = In_Transmission3_g128952;
					Data3_g128952.Thickness = In_Thickness3_g128952;
					Data3_g128952.Diffusion = In_Diffusion3_g128952;
					Data3_g128952.Depth = In_Depth3_g128952;
					}
					TVEVisualData Data4_g128974 = Data3_g128952;
					float Out_Dummy4_g128974 = 0;
					float3 Out_Albedo4_g128974 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128974 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128974 = float2( 0,0 );
					float3 Out_NormalWS4_g128974 = float3( 0,0,0 );
					float4 Out_Shader4_g128974 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128974 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128974 = 0;
					float Out_Grayscale4_g128974 = 0;
					float Out_Luminosity4_g128974 = 0;
					float Out_AlphaClip4_g128974 = 0;
					float Out_AlphaFade4_g128974 = 0;
					float3 Out_Translucency4_g128974 = float3( 0,0,0 );
					float Out_Transmission4_g128974 = 0;
					float Out_Thickness4_g128974 = 0;
					float Out_Diffusion4_g128974 = 0;
					float Out_Depth4_g128974 = 0;
					{
					Out_Dummy4_g128974 = Data4_g128974.Dummy;
					Out_Albedo4_g128974 = Data4_g128974.Albedo;
					Out_AlbedoRaw4_g128974 = Data4_g128974.AlbedoRaw;
					Out_NormalTS4_g128974 = Data4_g128974.NormalTS;
					Out_NormalWS4_g128974 = Data4_g128974.NormalWS;
					Out_Shader4_g128974 = Data4_g128974.Shader;
					Out_Emissive4_g128974= Data4_g128974.Emissive;
					Out_MultiMask4_g128974 = Data4_g128974.MultiMask;
					Out_Grayscale4_g128974 = Data4_g128974.Grayscale;
					Out_Luminosity4_g128974= Data4_g128974.Luminosity;
					Out_AlphaClip4_g128974 = Data4_g128974.AlphaClip;
					Out_AlphaFade4_g128974 = Data4_g128974.AlphaFade;
					Out_Translucency4_g128974 = Data4_g128974.Translucency;
					Out_Transmission4_g128974 = Data4_g128974.Transmission;
					Out_Thickness4_g128974 = Data4_g128974.Thickness;
					Out_Diffusion4_g128974 = Data4_g128974.Diffusion;
					Out_Depth4_g128974= Data4_g128974.Depth;
					}
					half3 Visual_Albedo127_g128973 = Out_Albedo4_g128974;
					float3 temp_output_622_0_g128973 = (_OverlayColor).rgb;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128977) = _OverlayAlbedoTex;
					float localFilterTexture19_g128988 = ( 0.0 );
					SamplerState SS19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128988 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128988 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128988 = SamplerDefault19_g128988;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128988 = SamplerDefault19_g128988;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128988 = SamplerPoint19_g128988;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128988 = SamplerLow19_g128988;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128988 = SamplerMedium19_g128988;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128988 = SamplerHigh19_g128988;
					#endif
					}
					SamplerState Sampler238_g128977 = SS19_g128988;
					float4 temp_output_6_0_g128978 = _overlay_coord_value;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128978 = ( temp_output_6_0_g128978 + ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) );
					#else
					float4 staticSwitch14_g128978 = temp_output_6_0_g128978;
					#endif
					half4 Overlay_Coords639_g128973 = staticSwitch14_g128978;
					float4 temp_output_37_0_g128977 = Overlay_Coords639_g128973;
					half4 Coords238_g128977 = temp_output_37_0_g128977;
					TVEModelData Data15_g128990 = Data16_g114311;
					float Out_Dummy15_g128990 = 0;
					float3 Out_PositionWS15_g128990 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128990 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128990 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128990 = float3( 0,0,0 );
					float4 Out_VertexData15_g128990 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128990 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128990 = Data15_g128990.Dummy;
					Out_PositionWS15_g128990 = Data15_g128990.PositionWS;
					Out_PositionWO15_g128990 = Data15_g128990.PositionWO;
					Out_PivotWS15_g128990 = Data15_g128990.PivotWS;
					Out_PivotWO15_g128990 = Data15_g128990.PivotWO;
					Out_NormalWS15_g128990 = Data15_g128990.NormalWS;
					Out_ViewDirWS15_g128990 = Data15_g128990.ViewDirWS;
					Out_VertexData15_g128990 = Data15_g128990.VertexData;
					Out_BoundsData15_g128990 = Data15_g128990.BoundsData;
					}
					half3 Model_PositionWO602_g128973 = Out_PositionWO15_g128990;
					float3 temp_output_279_0_g128977 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128977 = temp_output_279_0_g128977;
					half4 localSamplePlanar2D238_g128977 = SamplePlanar2D( Texture238_g128977 , Sampler238_g128977 , Coords238_g128977 , WorldPosition238_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler246_g128977 = SS19_g128988;
					half4 Coords246_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition246_g128977 = temp_output_279_0_g128977;
					half3 Model_NormalWS712_g128973 = Out_NormalWS15_g128990;
					float3 temp_output_280_0_g128977 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128977 = temp_output_280_0_g128977;
					half4 localSamplePlanar3D246_g128977 = SamplePlanar3D( Texture246_g128977 , Sampler246_g128977 , Coords246_g128977 , WorldPosition246_g128977 , WorldNormal246_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler234_g128977 = SS19_g128988;
					float4 Coords234_g128977 = temp_output_37_0_g128977;
					float3 WorldPosition234_g128977 = temp_output_279_0_g128977;
					float4 localSampleStochastic2D234_g128977 = SampleStochastic2D( Texture234_g128977 , Sampler234_g128977 , Coords234_g128977 , WorldPosition234_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler263_g128977 = SS19_g128988;
					half4 Coords263_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition263_g128977 = temp_output_279_0_g128977;
					half3 WorldNormal263_g128977 = temp_output_280_0_g128977;
					half4 localSampleStochastic3D263_g128977 = SampleStochastic3D( Texture263_g128977 , Sampler263_g128977 , Coords263_g128977 , WorldPosition263_g128977 , WorldNormal263_g128977 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch676_g128973 = localSamplePlanar3D246_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch676_g128973 = localSampleStochastic2D234_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch676_g128973 = localSampleStochastic3D263_g128977;
					#else
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#endif
					half3 Overlay_Albedo526_g128973 = (staticSwitch676_g128973).xyz;
					#ifdef TVE_OVERLAY_TEX
					float3 staticSwitch578_g128973 = ( temp_output_622_0_g128973 * Overlay_Albedo526_g128973 );
					#else
					float3 staticSwitch578_g128973 = temp_output_622_0_g128973;
					#endif
					float3 temp_output_6_0_g128991 = staticSwitch578_g128973;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g128991 = ( temp_output_6_0_g128991 + _OverlayTextureMode );
					#else
					float3 staticSwitch14_g128991 = temp_output_6_0_g128991;
					#endif
					float3 temp_cast_33 = (0.0).xxx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128981) = _OverlayGlitterTexRT;
					SamplerState Sampler246_g128981 = sampler_Linear_Repeat;
					float4 appendResult863_g128973 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g128981 = appendResult863_g128973;
					half4 Coords246_g128981 = temp_output_37_0_g128981;
					float3 temp_output_279_0_g128981 = Model_PositionWO602_g128973;
					half3 WorldPosition246_g128981 = temp_output_279_0_g128981;
					float3 temp_output_280_0_g128981 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128981 = temp_output_280_0_g128981;
					half4 localSamplePlanar3D246_g128981 = SamplePlanar3D( Texture246_g128981 , Sampler246_g128981 , Coords246_g128981 , WorldPosition246_g128981 , WorldNormal246_g128981 );
					half Overlay_GlitterTex854_g128973 = (localSamplePlanar3D246_g128981).x;
					half3 Model_PositionWS879_g128973 = Out_PositionWS15_g128990;
					#ifdef TVE_OVERLAY_GLITTER
					float3 staticSwitch868_g128973 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g128973 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g128973 ) / _OverlayGlitterDistValue ) ) ) );
					#else
					float3 staticSwitch868_g128973 = temp_cast_33;
					#endif
					half3 Overlay_GlitterColor865_g128973 = staticSwitch868_g128973;
					half Overlay_TexMask908_g128973 = 1.0;
					float3 temp_output_739_21_g128973 = Out_NormalWS4_g128974;
					half3 Visual_NormalWS749_g128973 = temp_output_739_21_g128973;
					float clampResult17_g128997 = clamp( saturate( (Visual_NormalWS749_g128973).y ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129001 = _OverlayProjRemap.x;
					float temp_output_9_0_g129001 = ( clampResult17_g128997 - temp_output_7_0_g129001 );
					float lerpResult842_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129001 * _OverlayProjRemap.z ) + 0.0001 ) ) , _OverlayProjValue);
					half Overlay_MaskProj457_g128973 = lerpResult842_g128973;
					float temp_output_739_15_g128973 = Out_Luminosity4_g128974;
					half Visual_Luminosity654_g128973 = temp_output_739_15_g128973;
					float clampResult17_g129005 = clamp( Visual_Luminosity654_g128973 , 0.0001 , 0.9999 );
					float temp_output_7_0_g129006 = _OverlayLumaRemap.x;
					float temp_output_9_0_g129006 = ( clampResult17_g129005 - temp_output_7_0_g129006 );
					float lerpResult587_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129006 * _OverlayLumaRemap.z ) + 0.0001 ) ) , _OverlayLumaValue);
					half Overlay_MaskLuma438_g128973 = lerpResult587_g128973;
					half Overlay_VertMask801_g128973 = 1.0;
					half Overlay_MaskNoise427_g128973 = 1.0;
					TVEGlobalData Data15_g128975 = Data204_g128736;
					float Out_Dummy15_g128975 = 0;
					float4 Out_CoatDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128975 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128975 = Data15_g128975.Dummy;
					Out_CoatDataRT15_g128975 = Data15_g128975.CoatDataRT;
					Out_PaintDataRT15_g128975 = Data15_g128975.PaintDataRT;
					Out_GlowDataRT15_g128975= Data15_g128975.GlowDataRT;
					Out_AtmoDataRT15_g128975= Data15_g128975.AtmoDataRT;
					Out_FadeDataRT15_g128975= Data15_g128975.FadeDataRT;
					Out_FormDataRT15_g128975 = Data15_g128975.FormDataRT;
					Out_FlowDataRT15_g128975 = Data15_g128975.FlowDataRT;
					}
					half4 Global_AtmoParams516_g128973 = Out_AtmoDataRT15_g128975;
					float temp_output_6_0_g129007 = (Global_AtmoParams516_g128973).z;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129007 = ( temp_output_6_0_g129007 + _OverlayElementMode );
					#else
					float staticSwitch14_g129007 = temp_output_6_0_g129007;
					#endif
					#ifdef TVE_OVERLAY_ELEMENT
					float staticSwitch705_g128973 = staticSwitch14_g129007;
					#else
					float staticSwitch705_g128973 = TVE_AtmoParams.z;
					#endif
					float lerpResult937_g128973 = lerp( 1.0 , ( staticSwitch705_g128973 * TVE_IsEnabled ) , _OverlayGlobalValue);
					half Overlay_MaskGlobal429_g128973 = lerpResult937_g128973;
					half Custom_Mask646_g128973 = 1.0;
					float temp_output_7_0_g129004 = _OverlayBlendRemap.x;
					float temp_output_9_0_g129004 = ( ( _OverlayIntensityValue * Overlay_TexMask908_g128973 * Overlay_MaskProj457_g128973 * Overlay_MaskLuma438_g128973 * Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 * Custom_Mask646_g128973 ) - temp_output_7_0_g129004 );
					half Overlay_Mask494_g128973 = saturate( ( ( temp_output_9_0_g129004 / ( _OverlayBlendRemap.y - temp_output_7_0_g129004 ) ) + 0.0001 ) );
					float3 lerpResult467_g128973 = lerp( Visual_Albedo127_g128973 , ( staticSwitch14_g128991 + Overlay_GlitterColor865_g128973 ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float3 staticSwitch577_g128973 = lerpResult467_g128973;
					#else
					float3 staticSwitch577_g128973 = Visual_Albedo127_g128973;
					#endif
					half3 Final_Albedo493_g128973 = staticSwitch577_g128973;
					float3 In_Albedo3_g128976 = Final_Albedo493_g128973;
					float3 In_AlbedoRaw3_g128976 = Out_AlbedoRaw4_g128974;
					half2 Visual_NormalTS535_g128973 = Out_NormalTS4_g128974;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128979) = _OverlayNormalTex;
					float localFilterTexture29_g128989 = ( 0.0 );
					SamplerState SS29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128989 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128989 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128989 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128989 = SamplerDefault29_g128989;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128989 = SamplerDefault29_g128989;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128989 = SamplerPoint29_g128989;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128989 = SamplerLow29_g128989;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128989 = SamplerMedium29_g128989;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128989 = SamplerHigh29_g128989;
					#endif
					}
					SamplerState Sampler238_g128979 = SS29_g128989;
					float4 temp_output_37_0_g128979 = Overlay_Coords639_g128973;
					half4 Coords238_g128979 = temp_output_37_0_g128979;
					float3 temp_output_279_0_g128979 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128979 = temp_output_279_0_g128979;
					half4 localSamplePlanar2D238_g128979 = SamplePlanar2D( Texture238_g128979 , Sampler238_g128979 , Coords238_g128979 , WorldPosition238_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128979) = _OverlayNormalTex;
					SamplerState Sampler246_g128979 = SS29_g128989;
					half4 Coords246_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition246_g128979 = temp_output_279_0_g128979;
					float3 temp_output_280_0_g128979 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128979 = temp_output_280_0_g128979;
					half4 localSamplePlanar3D246_g128979 = SamplePlanar3D( Texture246_g128979 , Sampler246_g128979 , Coords246_g128979 , WorldPosition246_g128979 , WorldNormal246_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128979) = _OverlayNormalTex;
					SamplerState Sampler234_g128979 = SS29_g128989;
					float4 Coords234_g128979 = temp_output_37_0_g128979;
					float3 WorldPosition234_g128979 = temp_output_279_0_g128979;
					float4 localSampleStochastic2D234_g128979 = SampleStochastic2D( Texture234_g128979 , Sampler234_g128979 , Coords234_g128979 , WorldPosition234_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128979) = _OverlayNormalTex;
					SamplerState Sampler263_g128979 = SS29_g128989;
					half4 Coords263_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition263_g128979 = temp_output_279_0_g128979;
					half3 WorldNormal263_g128979 = temp_output_280_0_g128979;
					half4 localSampleStochastic3D263_g128979 = SampleStochastic3D( Texture263_g128979 , Sampler263_g128979 , Coords263_g128979 , WorldPosition263_g128979 , WorldNormal263_g128979 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch686_g128973 = localSamplePlanar3D246_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch686_g128973 = localSampleStochastic2D234_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch686_g128973 = localSampleStochastic3D263_g128979;
					#else
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#endif
					half4 Normal_Packed45_g128982 = staticSwitch686_g128973;
					float2 appendResult58_g128982 = (float2(( (Normal_Packed45_g128982).x * (Normal_Packed45_g128982).w ) , (Normal_Packed45_g128982).y));
					half2 Normal_Default50_g128982 = appendResult58_g128982;
					half2 Normal_ASTC41_g128982 = (Normal_Packed45_g128982).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128982 = Normal_ASTC41_g128982;
					#else
					float2 staticSwitch38_g128982 = Normal_Default50_g128982;
					#endif
					half2 Normal_NO_DTX544_g128982 = (Normal_Packed45_g128982).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128982 = Normal_NO_DTX544_g128982;
					#else
					float2 staticSwitch37_g128982 = staticSwitch38_g128982;
					#endif
					float2 temp_output_623_0_g128973 = (staticSwitch37_g128982*2.0 + -1.0);
					half2 Overlay_Normal528_g128973 = temp_output_623_0_g128973;
					#ifdef TVE_OVERLAY_TEX
					float2 staticSwitch579_g128973 = Overlay_Normal528_g128973;
					#else
					float2 staticSwitch579_g128973 = Visual_NormalTS535_g128973;
					#endif
					float2 lerpResult551_g128973 = lerp( Visual_NormalTS535_g128973 , ( staticSwitch579_g128973 * _OverlayNormalValue ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float2 staticSwitch583_g128973 = lerpResult551_g128973;
					#else
					float2 staticSwitch583_g128973 = Visual_NormalTS535_g128973;
					#endif
					half2 Final_NormalTS499_g128973 = staticSwitch583_g128973;
					float2 In_NormalTS3_g128976 = Final_NormalTS499_g128973;
					float3 In_NormalWS3_g128976 = temp_output_739_21_g128973;
					half4 Visual_Masks536_g128973 = Out_Shader4_g128974;
					float4 appendResult585_g128973 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
					float4 lerpResult584_g128973 = lerp( Visual_Masks536_g128973 , appendResult585_g128973 , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float4 staticSwitch586_g128973 = lerpResult584_g128973;
					#else
					float4 staticSwitch586_g128973 = Visual_Masks536_g128973;
					#endif
					half4 Final_Masks482_g128973 = staticSwitch586_g128973;
					float4 In_Shader3_g128976 = Final_Masks482_g128973;
					float4 In_Emissive3_g128976 = Out_Emissive4_g128974;
					float temp_output_739_12_g128973 = Out_Grayscale4_g128974;
					float In_Grayscale3_g128976 = temp_output_739_12_g128973;
					float In_Luminosity3_g128976 = temp_output_739_15_g128973;
					float In_MultiMask3_g128976 = Out_MultiMask4_g128974;
					float In_AlphaClip3_g128976 = Out_AlphaClip4_g128974;
					float In_AlphaFade3_g128976 = Out_AlphaFade4_g128974;
					float3 In_Translucency3_g128976 = Out_Translucency4_g128974;
					half Visual_Transmission699_g128973 = Out_Transmission4_g128974;
					float lerpResult746_g128973 = lerp( Visual_Transmission699_g128973 , ( Visual_Transmission699_g128973 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 ));
					#ifdef TVE_OVERLAY
					float staticSwitch703_g128973 = lerpResult746_g128973;
					#else
					float staticSwitch703_g128973 = Visual_Transmission699_g128973;
					#endif
					half Final_Transmission702_g128973 = staticSwitch703_g128973;
					float In_Transmission3_g128976 = Final_Transmission702_g128973;
					float In_Thickness3_g128976 = Out_Thickness4_g128974;
					float In_Diffusion3_g128976 = Out_Diffusion4_g128974;
					float In_Depth3_g128976 = Out_Depth4_g128974;
					{
					Data3_g128976.Dummy = In_Dummy3_g128976;
					Data3_g128976.Albedo = In_Albedo3_g128976;
					Data3_g128976.AlbedoRaw = In_AlbedoRaw3_g128976;
					Data3_g128976.NormalTS = In_NormalTS3_g128976;
					Data3_g128976.NormalWS = In_NormalWS3_g128976;
					Data3_g128976.Shader = In_Shader3_g128976;
					Data3_g128976.Emissive= In_Emissive3_g128976;
					Data3_g128976.MultiMask = In_MultiMask3_g128976;
					Data3_g128976.Grayscale = In_Grayscale3_g128976;
					Data3_g128976.Luminosity = In_Luminosity3_g128976;
					Data3_g128976.AlphaClip = In_AlphaClip3_g128976;
					Data3_g128976.AlphaFade = In_AlphaFade3_g128976;
					Data3_g128976.Translucency = In_Translucency3_g128976;
					Data3_g128976.Transmission = In_Transmission3_g128976;
					Data3_g128976.Thickness = In_Thickness3_g128976;
					Data3_g128976.Diffusion = In_Diffusion3_g128976;
					Data3_g128976.Depth = In_Depth3_g128976;
					}
					TVEVisualData Data4_g129011 = Data3_g128976;
					float Out_Dummy4_g129011 = 0;
					float3 Out_Albedo4_g129011 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129011 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129011 = float2( 0,0 );
					float3 Out_NormalWS4_g129011 = float3( 0,0,0 );
					float4 Out_Shader4_g129011 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129011 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129011 = 0;
					float Out_Grayscale4_g129011 = 0;
					float Out_Luminosity4_g129011 = 0;
					float Out_AlphaClip4_g129011 = 0;
					float Out_AlphaFade4_g129011 = 0;
					float3 Out_Translucency4_g129011 = float3( 0,0,0 );
					float Out_Transmission4_g129011 = 0;
					float Out_Thickness4_g129011 = 0;
					float Out_Diffusion4_g129011 = 0;
					float Out_Depth4_g129011 = 0;
					{
					Out_Dummy4_g129011 = Data4_g129011.Dummy;
					Out_Albedo4_g129011 = Data4_g129011.Albedo;
					Out_AlbedoRaw4_g129011 = Data4_g129011.AlbedoRaw;
					Out_NormalTS4_g129011 = Data4_g129011.NormalTS;
					Out_NormalWS4_g129011 = Data4_g129011.NormalWS;
					Out_Shader4_g129011 = Data4_g129011.Shader;
					Out_Emissive4_g129011= Data4_g129011.Emissive;
					Out_MultiMask4_g129011 = Data4_g129011.MultiMask;
					Out_Grayscale4_g129011 = Data4_g129011.Grayscale;
					Out_Luminosity4_g129011= Data4_g129011.Luminosity;
					Out_AlphaClip4_g129011 = Data4_g129011.AlphaClip;
					Out_AlphaFade4_g129011 = Data4_g129011.AlphaFade;
					Out_Translucency4_g129011 = Data4_g129011.Translucency;
					Out_Transmission4_g129011 = Data4_g129011.Transmission;
					Out_Thickness4_g129011 = Data4_g129011.Thickness;
					Out_Diffusion4_g129011 = Data4_g129011.Diffusion;
					Out_Depth4_g129011= Data4_g129011.Depth;
					}
					half3 Visual_Albedo127_g129010 = Out_Albedo4_g129011;
					TVEGlobalData Data15_g129016 = Data204_g128736;
					float Out_Dummy15_g129016 = 0;
					float4 Out_CoatDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129016 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129016 = Data15_g129016.Dummy;
					Out_CoatDataRT15_g129016 = Data15_g129016.CoatDataRT;
					Out_PaintDataRT15_g129016 = Data15_g129016.PaintDataRT;
					Out_GlowDataRT15_g129016= Data15_g129016.GlowDataRT;
					Out_AtmoDataRT15_g129016= Data15_g129016.AtmoDataRT;
					Out_FadeDataRT15_g129016= Data15_g129016.FadeDataRT;
					Out_FormDataRT15_g129016 = Data15_g129016.FormDataRT;
					Out_FlowDataRT15_g129016 = Data15_g129016.FlowDataRT;
					}
					half4 Global_AtmoParams516_g129010 = Out_AtmoDataRT15_g129016;
					float4 temp_output_6_0_g129037 = Global_AtmoParams516_g129010;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129037 = ( temp_output_6_0_g129037 + _WetnessElementMode );
					#else
					float4 staticSwitch14_g129037 = temp_output_6_0_g129037;
					#endif
					#ifdef TVE_WETNESS_ELEMENT
					float4 staticSwitch663_g129010 = staticSwitch14_g129037;
					#else
					float4 staticSwitch663_g129010 = TVE_AtmoParams;
					#endif
					float2 lerpResult1121_g129010 = lerp( float2( 1,1 ) , (( staticSwitch663_g129010 * TVE_IsEnabled )).yw , _WetnessGlobalValue);
					float2 break1123_g129010 = lerpResult1121_g129010;
					half Global_Wetness429_g129010 = break1123_g129010.x;
					half Wetness_Value1042_g129010 = ( _WetnessIntensityValue * Global_Wetness429_g129010 );
					half Wetness_VertMask1024_g129010 = 1.0;
					float temp_output_1043_0_g129010 = ( Wetness_Value1042_g129010 * Wetness_VertMask1024_g129010 );
					half Wetness_Mask866_g129010 = temp_output_1043_0_g129010;
					half Water_VertMask1094_g129010 = 1.0;
					half4 Visual_Masks536_g129010 = Out_Shader4_g129011;
					float lerpResult1013_g129010 = lerp( 1.0 , (Visual_Masks536_g129010).z , _WetnessWaterBaseValue);
					half Water_HeightMask782_g129010 = lerpResult1013_g129010;
					float clampResult17_g129023 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g129010 * Water_VertMask1094_g129010 ) - Water_HeightMask782_g129010 ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129036 = _WetnessWaterBlendRemap.x;
					float temp_output_9_0_g129036 = ( clampResult17_g129023 - temp_output_7_0_g129036 );
					TVEModelData Data15_g129022 = Data16_g114311;
					float Out_Dummy15_g129022 = 0;
					float3 Out_PositionWS15_g129022 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129022 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129022 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g129022 = float3( 0,0,0 );
					float4 Out_VertexData15_g129022 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129022 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129022 = Data15_g129022.Dummy;
					Out_PositionWS15_g129022 = Data15_g129022.PositionWS;
					Out_PositionWO15_g129022 = Data15_g129022.PositionWO;
					Out_PivotWS15_g129022 = Data15_g129022.PivotWS;
					Out_PivotWO15_g129022 = Data15_g129022.PivotWO;
					Out_NormalWS15_g129022 = Data15_g129022.NormalWS;
					Out_ViewDirWS15_g129022 = Data15_g129022.ViewDirWS;
					Out_VertexData15_g129022 = Data15_g129022.VertexData;
					Out_BoundsData15_g129022 = Data15_g129022.BoundsData;
					}
					half3 Model_NormalWS798_g129010 = Out_NormalWS15_g129022;
					float temp_output_786_0_g129010 = saturate( (Model_NormalWS798_g129010).y );
					half Wetness_ProjMask790_g129010 = temp_output_786_0_g129010;
					half Water_Mask760_g129010 = ( saturate( ( ( temp_output_9_0_g129036 * _WetnessWaterBlendRemap.z ) + 0.0001 ) ) * Wetness_ProjMask790_g129010 );
					float3 lerpResult918_g129010 = lerp( Visual_Albedo127_g129010 , ( Visual_Albedo127_g129010 * (_WetnessWaterColor).rgb ) , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float3 staticSwitch946_g129010 = lerpResult918_g129010;
					#else
					float3 staticSwitch946_g129010 = Visual_Albedo127_g129010;
					#endif
					float3 lerpResult768_g129010 = lerp( staticSwitch946_g129010 , ( staticSwitch946_g129010 * staticSwitch946_g129010 ) , _WetnessContrastValue);
					float3 lerpResult651_g129010 = lerp( Visual_Albedo127_g129010 , lerpResult768_g129010 , Wetness_Mask866_g129010);
					#ifdef TVE_WETNESS
					float3 staticSwitch577_g129010 = lerpResult651_g129010;
					#else
					float3 staticSwitch577_g129010 = Visual_Albedo127_g129010;
					#endif
					half3 Final_Albedo493_g129010 = staticSwitch577_g129010;
					float3 In_Albedo3_g129012 = Final_Albedo493_g129010;
					float3 In_AlbedoRaw3_g129012 = Out_AlbedoRaw4_g129011;
					half2 Visual_Normal535_g129010 = Out_NormalTS4_g129011;
					float lerpResult877_g129010 = lerp( 1.0 , 0.0 , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch957_g129010 = ( Visual_Normal535_g129010 * lerpResult877_g129010 );
					#else
					float2 staticSwitch957_g129010 = Visual_Normal535_g129010;
					#endif
					float2 temp_cast_34 = (0.0).xx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g129020) = _WetnessDropsTexRT;
					SamplerState Sampler238_g129020 = sampler_Linear_Repeat_Aniso8;
					float4 appendResult924_g129010 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g129020 = appendResult924_g129010;
					half4 Coords238_g129020 = temp_output_37_0_g129020;
					half3 Model_PositionWO602_g129010 = Out_PositionWO15_g129022;
					float3 temp_output_279_0_g129020 = Model_PositionWO602_g129010;
					half3 WorldPosition238_g129020 = temp_output_279_0_g129020;
					half4 localSamplePlanar2D238_g129020 = SamplePlanar2D( Texture238_g129020 , Sampler238_g129020 , Coords238_g129020 , WorldPosition238_g129020 );
					float4 temp_output_1010_0_g129010 = localSamplePlanar2D238_g129020;
					half2 Rain_DropsNormal919_g129010 = (temp_output_1010_0_g129010).zw;
					float2 temp_output_903_0_g129010 = (Rain_DropsNormal919_g129010*2.0 + -1.0);
					half2 Rain_RingsNormal713_g129010 = (temp_output_1010_0_g129010).xy;
					float2 lerpResult904_g129010 = lerp( temp_output_903_0_g129010 , (Rain_RingsNormal713_g129010*2.0 + -1.0) , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch960_g129010 = lerpResult904_g129010;
					#else
					float2 staticSwitch960_g129010 = temp_output_903_0_g129010;
					#endif
					half2 Rain_Drops1002_g129010 = ( staticSwitch960_g129010 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
					half3 Model_PositionWS823_g129010 = Out_PositionWS15_g129022;
					half Global_Rain955_g129010 = break1123_g129010.y;
					half Rain_Value1067_g129010 = Global_Rain955_g129010;
					half Rain_VertMask1108_g129010 = 1.0;
					half Rain_Mask999_g129010 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g129010 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g129010 * Rain_VertMask1108_g129010 );
					half2 Normal_Planar45_g129019 = ( Rain_Drops1002_g129010 * Rain_Mask999_g129010 * Wetness_ProjMask790_g129010 );
					float2 break71_g129019 = Normal_Planar45_g129019;
					float3 appendResult72_g129019 = (float3(break71_g129019.x , 0.0 , break71_g129019.y));
					half2 Wetness_Normal526_g129010 = (mul( ase_worldToTangent, appendResult72_g129019 )).xy;
					#ifdef TVE_WETNESS_DROPS
					float2 staticSwitch583_g129010 = Wetness_Normal526_g129010;
					#else
					float2 staticSwitch583_g129010 = temp_cast_34;
					#endif
					#ifdef TVE_WETNESS
					float2 staticSwitch774_g129010 = ( staticSwitch957_g129010 + staticSwitch583_g129010 );
					#else
					float2 staticSwitch774_g129010 = Visual_Normal535_g129010;
					#endif
					half2 Final_Normal499_g129010 = staticSwitch774_g129010;
					float2 In_NormalTS3_g129012 = Final_Normal499_g129010;
					float3 In_NormalWS3_g129012 = Out_NormalWS4_g129011;
					float4 break658_g129010 = Visual_Masks536_g129010;
					float temp_output_935_0_g129010 = ( Wetness_Mask866_g129010 * _WetnessSmoothnessValue );
					float lerpResult941_g129010 = lerp( temp_output_935_0_g129010 , 2.0 , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float staticSwitch959_g129010 = lerpResult941_g129010;
					#else
					float staticSwitch959_g129010 = temp_output_935_0_g129010;
					#endif
					float4 appendResult661_g129010 = (float4(break658_g129010.x , break658_g129010.y , break658_g129010.z , saturate( ( break658_g129010.w + staticSwitch959_g129010 ) )));
					#ifdef TVE_WETNESS
					float4 staticSwitch586_g129010 = appendResult661_g129010;
					#else
					float4 staticSwitch586_g129010 = Visual_Masks536_g129010;
					#endif
					half4 Final_Masks482_g129010 = staticSwitch586_g129010;
					float4 In_Shader3_g129012 = Final_Masks482_g129010;
					float4 In_Emissive3_g129012 = Out_Emissive4_g129011;
					float In_Grayscale3_g129012 = Out_Grayscale4_g129011;
					float In_Luminosity3_g129012 = Out_Luminosity4_g129011;
					float In_MultiMask3_g129012 = Out_MultiMask4_g129011;
					float In_AlphaClip3_g129012 = Out_AlphaClip4_g129011;
					float In_AlphaFade3_g129012 = Out_AlphaFade4_g129011;
					float3 In_Translucency3_g129012 = Out_Translucency4_g129011;
					float In_Transmission3_g129012 = Out_Transmission4_g129011;
					float In_Thickness3_g129012 = Out_Thickness4_g129011;
					float In_Diffusion3_g129012 = Out_Diffusion4_g129011;
					float In_Depth3_g129012 = Out_Depth4_g129011;
					{
					Data3_g129012.Dummy = In_Dummy3_g129012;
					Data3_g129012.Albedo = In_Albedo3_g129012;
					Data3_g129012.AlbedoRaw = In_AlbedoRaw3_g129012;
					Data3_g129012.NormalTS = In_NormalTS3_g129012;
					Data3_g129012.NormalWS = In_NormalWS3_g129012;
					Data3_g129012.Shader = In_Shader3_g129012;
					Data3_g129012.Emissive= In_Emissive3_g129012;
					Data3_g129012.MultiMask = In_MultiMask3_g129012;
					Data3_g129012.Grayscale = In_Grayscale3_g129012;
					Data3_g129012.Luminosity = In_Luminosity3_g129012;
					Data3_g129012.AlphaClip = In_AlphaClip3_g129012;
					Data3_g129012.AlphaFade = In_AlphaFade3_g129012;
					Data3_g129012.Translucency = In_Translucency3_g129012;
					Data3_g129012.Transmission = In_Transmission3_g129012;
					Data3_g129012.Thickness = In_Thickness3_g129012;
					Data3_g129012.Diffusion = In_Diffusion3_g129012;
					Data3_g129012.Depth = In_Depth3_g129012;
					}
					TVEVisualData Data4_g129043 = Data3_g129012;
					float Out_Dummy4_g129043 = 0;
					float3 Out_Albedo4_g129043 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129043 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129043 = float2( 0,0 );
					float3 Out_NormalWS4_g129043 = float3( 0,0,0 );
					float4 Out_Shader4_g129043 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129043 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129043 = 0;
					float Out_Grayscale4_g129043 = 0;
					float Out_Luminosity4_g129043 = 0;
					float Out_AlphaClip4_g129043 = 0;
					float Out_AlphaFade4_g129043 = 0;
					float3 Out_Translucency4_g129043 = float3( 0,0,0 );
					float Out_Transmission4_g129043 = 0;
					float Out_Thickness4_g129043 = 0;
					float Out_Diffusion4_g129043 = 0;
					float Out_Depth4_g129043 = 0;
					{
					Out_Dummy4_g129043 = Data4_g129043.Dummy;
					Out_Albedo4_g129043 = Data4_g129043.Albedo;
					Out_AlbedoRaw4_g129043 = Data4_g129043.AlbedoRaw;
					Out_NormalTS4_g129043 = Data4_g129043.NormalTS;
					Out_NormalWS4_g129043 = Data4_g129043.NormalWS;
					Out_Shader4_g129043 = Data4_g129043.Shader;
					Out_Emissive4_g129043= Data4_g129043.Emissive;
					Out_MultiMask4_g129043 = Data4_g129043.MultiMask;
					Out_Grayscale4_g129043 = Data4_g129043.Grayscale;
					Out_Luminosity4_g129043= Data4_g129043.Luminosity;
					Out_AlphaClip4_g129043 = Data4_g129043.AlphaClip;
					Out_AlphaFade4_g129043 = Data4_g129043.AlphaFade;
					Out_Translucency4_g129043 = Data4_g129043.Translucency;
					Out_Transmission4_g129043 = Data4_g129043.Transmission;
					Out_Thickness4_g129043 = Data4_g129043.Thickness;
					Out_Diffusion4_g129043 = Data4_g129043.Diffusion;
					Out_Depth4_g129043= Data4_g129043.Depth;
					}
					float3 temp_output_297_0_g129039 = Out_Albedo4_g129043;
					float3 In_Albedo3_g129054 = temp_output_297_0_g129039;
					float3 temp_output_297_23_g129039 = Out_AlbedoRaw4_g129043;
					float3 In_AlbedoRaw3_g129054 = temp_output_297_23_g129039;
					float2 In_NormalTS3_g129054 = Out_NormalTS4_g129043;
					float3 In_NormalWS3_g129054 = Out_NormalWS4_g129043;
					float4 In_Shader3_g129054 = Out_Shader4_g129043;
					float4 temp_cast_35 = (0.0).xxxx;
					half4 Visual_Emissive255_g129039 = Out_Emissive4_g129043;
					half Emissive_MeshMask221_g129039 = 1.0;
					half Emissive_Mask103_g129039 = 1.0;
					float temp_output_279_0_g129039 = ( Emissive_MeshMask221_g129039 * Emissive_Mask103_g129039 );
					float3 appendResult293_g129039 = (float3(temp_output_279_0_g129039 , temp_output_279_0_g129039 , temp_output_279_0_g129039));
					half3 Local_EmissiveColor278_g129039 = appendResult293_g129039;
					float3 temp_output_316_0_g129039 = (TVE_GlowParams).xyz;
					TVEGlobalData Data15_g129040 = Data204_g128736;
					float Out_Dummy15_g129040 = 0;
					float4 Out_CoatDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129040 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129040 = Data15_g129040.Dummy;
					Out_CoatDataRT15_g129040 = Data15_g129040.CoatDataRT;
					Out_PaintDataRT15_g129040 = Data15_g129040.PaintDataRT;
					Out_GlowDataRT15_g129040= Data15_g129040.GlowDataRT;
					Out_AtmoDataRT15_g129040= Data15_g129040.AtmoDataRT;
					Out_FadeDataRT15_g129040= Data15_g129040.FadeDataRT;
					Out_FormDataRT15_g129040 = Data15_g129040.FormDataRT;
					Out_FlowDataRT15_g129040 = Data15_g129040.FlowDataRT;
					}
					half4 Global_GlowParams179_g129039 = Out_GlowDataRT15_g129040;
					float3 temp_output_6_0_g129046 = (Global_GlowParams179_g129039).xyz;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g129046 = ( temp_output_6_0_g129046 + _EmissiveElementMode );
					#else
					float3 staticSwitch14_g129046 = temp_output_6_0_g129046;
					#endif
					#ifdef TVE_EMISSIVE_ELEMENT
					float3 staticSwitch228_g129039 = staticSwitch14_g129046;
					#else
					float3 staticSwitch228_g129039 = temp_output_316_0_g129039;
					#endif
					float3 lerpResult299_g129039 = lerp( float3( 1,1,1 ) , staticSwitch228_g129039 , ( _EmissiveGlobalValue * TVE_IsEnabled ));
					half3 Emissive_GlobalMask248_g129039 = lerpResult299_g129039;
					half3 Visual_AlbedoRaw306_g129039 = temp_output_297_23_g129039;
					float3 lerpResult307_g129039 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g129039 , _EmissiveColorMode);
					half3 Local_EmissiveValue88_g129039 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g129039 * lerpResult307_g129039 );
					half3 Emissive_Blend260_g129039 = ( ( (Visual_Emissive255_g129039).xyz * Local_EmissiveColor278_g129039 ) * Local_EmissiveValue88_g129039 );
					float3 temp_output_3_0_g129045 = Emissive_Blend260_g129039;
					float temp_output_15_0_g129045 = _emissive_power_value;
					float3 temp_output_23_0_g129045 = ( temp_output_3_0_g129045 * temp_output_15_0_g129045 );
					half Local_EmissiveMask294_g129039 = temp_output_279_0_g129039;
					float4 appendResult295_g129039 = (float4(temp_output_23_0_g129045 , Local_EmissiveMask294_g129039));
					#ifdef TVE_EMISSIVE
					float4 staticSwitch129_g129039 = appendResult295_g129039;
					#else
					float4 staticSwitch129_g129039 = temp_cast_35;
					#endif
					half4 Final_Emissive184_g129039 = staticSwitch129_g129039;
					float4 In_Emissive3_g129054 = Final_Emissive184_g129039;
					float In_Grayscale3_g129054 = Out_Grayscale4_g129043;
					float In_Luminosity3_g129054 = Out_Luminosity4_g129043;
					float temp_output_297_11_g129039 = Out_MultiMask4_g129043;
					float In_MultiMask3_g129054 = temp_output_297_11_g129039;
					float In_AlphaClip3_g129054 = Out_AlphaClip4_g129043;
					float In_AlphaFade3_g129054 = Out_AlphaFade4_g129043;
					float3 In_Translucency3_g129054 = Out_Translucency4_g129043;
					float In_Transmission3_g129054 = Out_Transmission4_g129043;
					float In_Thickness3_g129054 = Out_Thickness4_g129043;
					float In_Diffusion3_g129054 = Out_Diffusion4_g129043;
					float In_Depth3_g129054 = Out_Depth4_g129043;
					{
					Data3_g129054.Dummy = In_Dummy3_g129054;
					Data3_g129054.Albedo = In_Albedo3_g129054;
					Data3_g129054.AlbedoRaw = In_AlbedoRaw3_g129054;
					Data3_g129054.NormalTS = In_NormalTS3_g129054;
					Data3_g129054.NormalWS = In_NormalWS3_g129054;
					Data3_g129054.Shader = In_Shader3_g129054;
					Data3_g129054.Emissive= In_Emissive3_g129054;
					Data3_g129054.MultiMask = In_MultiMask3_g129054;
					Data3_g129054.Grayscale = In_Grayscale3_g129054;
					Data3_g129054.Luminosity = In_Luminosity3_g129054;
					Data3_g129054.AlphaClip = In_AlphaClip3_g129054;
					Data3_g129054.AlphaFade = In_AlphaFade3_g129054;
					Data3_g129054.Translucency = In_Translucency3_g129054;
					Data3_g129054.Transmission = In_Transmission3_g129054;
					Data3_g129054.Thickness = In_Thickness3_g129054;
					Data3_g129054.Diffusion = In_Diffusion3_g129054;
					Data3_g129054.Depth = In_Depth3_g129054;
					}
					TVEVisualData Data4_g129058 = Data3_g129054;
					float Out_Dummy4_g129058 = 0;
					float3 Out_Albedo4_g129058 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129058 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129058 = float2( 0,0 );
					float3 Out_NormalWS4_g129058 = float3( 0,0,0 );
					float4 Out_Shader4_g129058 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129058 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129058 = 0;
					float Out_Grayscale4_g129058 = 0;
					float Out_Luminosity4_g129058 = 0;
					float Out_AlphaClip4_g129058 = 0;
					float Out_AlphaFade4_g129058 = 0;
					float3 Out_Translucency4_g129058 = float3( 0,0,0 );
					float Out_Transmission4_g129058 = 0;
					float Out_Thickness4_g129058 = 0;
					float Out_Diffusion4_g129058 = 0;
					float Out_Depth4_g129058 = 0;
					{
					Out_Dummy4_g129058 = Data4_g129058.Dummy;
					Out_Albedo4_g129058 = Data4_g129058.Albedo;
					Out_AlbedoRaw4_g129058 = Data4_g129058.AlbedoRaw;
					Out_NormalTS4_g129058 = Data4_g129058.NormalTS;
					Out_NormalWS4_g129058 = Data4_g129058.NormalWS;
					Out_Shader4_g129058 = Data4_g129058.Shader;
					Out_Emissive4_g129058= Data4_g129058.Emissive;
					Out_MultiMask4_g129058 = Data4_g129058.MultiMask;
					Out_Grayscale4_g129058 = Data4_g129058.Grayscale;
					Out_Luminosity4_g129058= Data4_g129058.Luminosity;
					Out_AlphaClip4_g129058 = Data4_g129058.AlphaClip;
					Out_AlphaFade4_g129058 = Data4_g129058.AlphaFade;
					Out_Translucency4_g129058 = Data4_g129058.Translucency;
					Out_Transmission4_g129058 = Data4_g129058.Transmission;
					Out_Thickness4_g129058 = Data4_g129058.Thickness;
					Out_Diffusion4_g129058 = Data4_g129058.Diffusion;
					Out_Depth4_g129058= Data4_g129058.Depth;
					}
					float3 In_Albedo3_g129056 = Out_Albedo4_g129058;
					float3 In_AlbedoRaw3_g129056 = Out_AlbedoRaw4_g129058;
					float2 In_NormalTS3_g129056 = Out_NormalTS4_g129058;
					float3 In_NormalWS3_g129056 = Out_NormalWS4_g129058;
					float4 In_Shader3_g129056 = Out_Shader4_g129058;
					float4 In_Emissive3_g129056 = Out_Emissive4_g129058;
					float In_Grayscale3_g129056 = Out_Grayscale4_g129058;
					float In_Luminosity3_g129056 = Out_Luminosity4_g129058;
					float temp_output_836_11_g129055 = Out_MultiMask4_g129058;
					float In_MultiMask3_g129056 = temp_output_836_11_g129055;
					half Visual_AlphaClip667_g129055 = Out_AlphaClip4_g129058;
					TVEGlobalData Data15_g129057 = Data204_g128736;
					float Out_Dummy15_g129057 = 0;
					float4 Out_CoatDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129057 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129057 = Data15_g129057.Dummy;
					Out_CoatDataRT15_g129057 = Data15_g129057.CoatDataRT;
					Out_PaintDataRT15_g129057 = Data15_g129057.PaintDataRT;
					Out_GlowDataRT15_g129057= Data15_g129057.GlowDataRT;
					Out_AtmoDataRT15_g129057= Data15_g129057.AtmoDataRT;
					Out_FadeDataRT15_g129057= Data15_g129057.FadeDataRT;
					Out_FormDataRT15_g129057 = Data15_g129057.FormDataRT;
					Out_FlowDataRT15_g129057 = Data15_g129057.FlowDataRT;
					}
					half4 Global_FadeParams516_g129055 = Out_FadeDataRT15_g129057;
					float temp_output_6_0_g129064 = saturate( (Global_FadeParams516_g129055).w );
					#ifdef TVE_DUMMY
					float staticSwitch14_g129064 = ( temp_output_6_0_g129064 + _CutoutElementMode );
					#else
					float staticSwitch14_g129064 = temp_output_6_0_g129064;
					#endif
					#ifdef TVE_CUTOUT_ELEMENT
					float staticSwitch663_g129055 = staticSwitch14_g129064;
					#else
					float staticSwitch663_g129055 = TVE_FadeParams.w;
					#endif
					float lerpResult843_g129055 = lerp( 1.0 , ( staticSwitch663_g129055 * TVE_IsEnabled ) , _CutoutGlobalValue);
					half Local_GlobalMask429_g129055 = lerpResult843_g129055;
					half Local_AlphaMask814_g129055 = 1.0;
					half Local_NoiseMask678_g129055 = 1.0;
					half Local_VertMask766_g129055 = 1.0;
					half Local_MultiMask685_g129055 = 1.0;
					float lerpResult728_g129055 = lerp( Visual_AlphaClip667_g129055 , min( Visual_AlphaClip667_g129055 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g129055 ) - ( Local_AlphaMask814_g129055 * Local_NoiseMask678_g129055 * Local_VertMask766_g129055 ) ) ) ) , Local_MultiMask685_g129055);
					half Local_AlphaClip784_g129055 = lerpResult728_g129055;
					#ifdef TVE_CUTOUT
					float staticSwitch577_g129055 = Local_AlphaClip784_g129055;
					#else
					float staticSwitch577_g129055 = Visual_AlphaClip667_g129055;
					#endif
					half Final_AlphaClip795_g129055 = staticSwitch577_g129055;
					float In_AlphaClip3_g129056 = Final_AlphaClip795_g129055;
					float In_AlphaFade3_g129056 = Out_AlphaFade4_g129058;
					float3 In_Translucency3_g129056 = Out_Translucency4_g129058;
					float In_Transmission3_g129056 = Out_Transmission4_g129058;
					float In_Thickness3_g129056 = Out_Thickness4_g129058;
					float In_Diffusion3_g129056 = Out_Diffusion4_g129058;
					float In_Depth3_g129056 = Out_Depth4_g129058;
					{
					Data3_g129056.Dummy = In_Dummy3_g129056;
					Data3_g129056.Albedo = In_Albedo3_g129056;
					Data3_g129056.AlbedoRaw = In_AlbedoRaw3_g129056;
					Data3_g129056.NormalTS = In_NormalTS3_g129056;
					Data3_g129056.NormalWS = In_NormalWS3_g129056;
					Data3_g129056.Shader = In_Shader3_g129056;
					Data3_g129056.Emissive= In_Emissive3_g129056;
					Data3_g129056.MultiMask = In_MultiMask3_g129056;
					Data3_g129056.Grayscale = In_Grayscale3_g129056;
					Data3_g129056.Luminosity = In_Luminosity3_g129056;
					Data3_g129056.AlphaClip = In_AlphaClip3_g129056;
					Data3_g129056.AlphaFade = In_AlphaFade3_g129056;
					Data3_g129056.Translucency = In_Translucency3_g129056;
					Data3_g129056.Transmission = In_Transmission3_g129056;
					Data3_g129056.Thickness = In_Thickness3_g129056;
					Data3_g129056.Diffusion = In_Diffusion3_g129056;
					Data3_g129056.Depth = In_Depth3_g129056;
					}
					TVEVisualData Data4_g129098 = Data3_g129056;
					float Out_Dummy4_g129098 = 0;
					float3 Out_Albedo4_g129098 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129098 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129098 = float2( 0,0 );
					float3 Out_NormalWS4_g129098 = float3( 0,0,0 );
					float4 Out_Shader4_g129098 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129098 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129098 = 0;
					float Out_Grayscale4_g129098 = 0;
					float Out_Luminosity4_g129098 = 0;
					float Out_AlphaClip4_g129098 = 0;
					float Out_AlphaFade4_g129098 = 0;
					float3 Out_Translucency4_g129098 = float3( 0,0,0 );
					float Out_Transmission4_g129098 = 0;
					float Out_Thickness4_g129098 = 0;
					float Out_Diffusion4_g129098 = 0;
					float Out_Depth4_g129098 = 0;
					{
					Out_Dummy4_g129098 = Data4_g129098.Dummy;
					Out_Albedo4_g129098 = Data4_g129098.Albedo;
					Out_AlbedoRaw4_g129098 = Data4_g129098.AlbedoRaw;
					Out_NormalTS4_g129098 = Data4_g129098.NormalTS;
					Out_NormalWS4_g129098 = Data4_g129098.NormalWS;
					Out_Shader4_g129098 = Data4_g129098.Shader;
					Out_Emissive4_g129098= Data4_g129098.Emissive;
					Out_MultiMask4_g129098 = Data4_g129098.MultiMask;
					Out_Grayscale4_g129098 = Data4_g129098.Grayscale;
					Out_Luminosity4_g129098= Data4_g129098.Luminosity;
					Out_AlphaClip4_g129098 = Data4_g129098.AlphaClip;
					Out_AlphaFade4_g129098 = Data4_g129098.AlphaFade;
					Out_Translucency4_g129098 = Data4_g129098.Translucency;
					Out_Transmission4_g129098 = Data4_g129098.Transmission;
					Out_Thickness4_g129098 = Data4_g129098.Thickness;
					Out_Diffusion4_g129098 = Data4_g129098.Diffusion;
					Out_Depth4_g129098= Data4_g129098.Depth;
					}
					half3 Input_Albedo24_g129097 = Out_Albedo4_g129098;
					#ifdef UNITY_COLORSPACE_GAMMA
					float4 staticSwitch22_g129097 = half4( 0.2209163, 0.2209163, 0.2209163, 0.7790837 );
					#else
					float4 staticSwitch22_g129097 = half4( 0.04, 0.04, 0.04, 0.96 );
					#endif
					half4 ColorSpaceDielectricSpec23_g129097 = staticSwitch22_g129097;
					float4 break24_g129094 = Out_Shader4_g129098;
					half Metallic95_g129094 = break24_g129094.x;
					half Input_Metallic25_g129097 = Metallic95_g129094;
					half OneMinusReflectivity31_g129097 = ( (ColorSpaceDielectricSpec23_g129097).w - ( (ColorSpaceDielectricSpec23_g129097).w * Input_Metallic25_g129097 ) );
					
					float localCustomAlphaClip20_g129100 = ( 0.0 );
					float temp_output_3_0_g129100 = Out_AlphaClip4_g129098;
					float Alpha20_g129100 = temp_output_3_0_g129100;
					float temp_output_15_0_g129100 = 0.5;
					float Treshold20_g129100 = temp_output_15_0_g129100;
					{
					#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_GLANCING) || defined (TVE_DITHER)
					clip(Alpha20_g129100 - Treshold20_g129100);
					#endif
					}
					

					o.Albedo = ( Input_Albedo24_g129097 * OneMinusReflectivity31_g129097 );
					o.Normal = half3( 0, 0, 1 );
					o.Emission = (Out_Emissive4_g129098).xyz;
					o.Alpha = Alpha20_g129100;

					#ifdef _ALPHATEST_ON
						clip( o.Alpha - AlphaClipThreshold );
					#endif

					UnityMetaInput metaIN;
					UNITY_INITIALIZE_OUTPUT(UnityMetaInput, metaIN);
					metaIN.Albedo = o.Albedo;
					metaIN.Emission = o.Emission;
					#ifdef EDITOR_VISUALIZATION
						metaIN.VizUV = IN.vizUV;
						metaIN.LightCoord = IN.lightCoord;
					#endif
					return UnityMetaFragment(metaIN);
				}
				ENDCG
			}

			UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
	UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"

			Pass
			{
				
				Name "ShadowCaster"
				Tags { "LightMode"="ShadowCaster" }
				ZWrite On
				ZTest LEqual
				AlphaToMask Off

				CGPROGRAM
				#define ASE_FRAGMENT_NORMAL 0
				#define ASE_NEEDS_FRAG_SHADOWCOORDS
				#pragma multi_compile __ LOD_FADE_CROSSFADE
				#pragma multi_compile_fog
				#define ASE_ABSOLUTE_VERTEX_POS 1
				#define ASE_TERRAIN 1
				#define _SPECULAR_SETUP 1
				#define ASE_LIGHTING_SIMPLE 1
				#define _ENVIRONMENTREFLECTIONS_OFF 1
				#define ASE_VERSION 19802
				#define ASE_USING_SAMPLING_MACROS 1

				#pragma vertex vert
				#pragma fragment frag
				#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
				#pragma multi_compile_shadowcaster
				#ifndef UNITY_PASS_SHADOWCASTER
					#define UNITY_PASS_SHADOWCASTER
				#endif
				#include "HLSLSupport.cginc"
				#ifdef ASE_GEOMETRY
					#ifndef UNITY_INSTANCED_LOD_FADE
						#define UNITY_INSTANCED_LOD_FADE
					#endif
					#ifndef UNITY_INSTANCED_SH
						#define UNITY_INSTANCED_SH
					#endif
					#ifndef UNITY_INSTANCED_LIGHTMAPSTS
						#define UNITY_INSTANCED_LIGHTMAPSTS
					#endif
				#endif
				#if ( SHADER_API_D3D11 || SHADER_API_GLCORE || SHADER_API_GLES || SHADER_API_GLES3 || SHADER_API_METAL || SHADER_API_VULKAN )
					#define CAN_SKIP_VPOS
				#endif
				#include "UnityShaderVariables.cginc"
				#include "UnityCG.cginc"
				#include "Lighting.cginc"
				#include "UnityPBSLighting.cginc"

				#define ASE_NEEDS_VERT_POSITION
				#define ASE_NEEDS_VERT_NORMAL
				#define ASE_NEEDS_VERT_TANGENT
				#define ASE_NEEDS_TEXTURE_COORDINATES0
				#pragma shader_feature_local_fragment TVE_FILTER_DEFAULT TVE_FILTER_POINT TVE_FILTER_LOW TVE_FILTER_MEDIUM TVE_FILTER_HIGH
				#pragma shader_feature_local_vertex TVE_CONFORM
				#pragma shader_feature_local_fragment TVE_WETNESS
				#pragma shader_feature_local_fragment TVE_OVERLAY
				#pragma shader_feature_local_fragment TVE_DRYNESS
				#pragma shader_feature_local_fragment TVE_TINTING
				#pragma shader_feature_local_fragment TVE_TERRAIN_04 TVE_TERRAIN_08 TVE_TERRAIN_12 TVE_TERRAIN_16
				#pragma shader_feature_local_fragment TVE_TERRAIN_BLEND
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_01_PLANAR_2D TVE_TERRAIN_SAMPLE_01_PLANAR_3D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_02_PLANAR_2D TVE_TERRAIN_SAMPLE_02_PLANAR_3D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_03_PLANAR_2D TVE_TERRAIN_SAMPLE_03_PLANAR_3D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_04_PLANAR_2D TVE_TERRAIN_SAMPLE_04_PLANAR_3D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_05_PLANAR_2D TVE_TERRAIN_SAMPLE_05_PLANAR_3D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_06_PLANAR_2D TVE_TERRAIN_SAMPLE_06_PLANAR_3D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_07_PLANAR_2D TVE_TERRAIN_SAMPLE_07_PLANAR_3D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_08_PLANAR_2D TVE_TERRAIN_SAMPLE_08_PLANAR_3D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_09_PLANAR_2D TVE_TERRAIN_SAMPLE_09_PLANAR_3D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_10_PLANAR_2D TVE_TERRAIN_SAMPLE_10_PLANAR_3D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_11_PLANAR_2D TVE_TERRAIN_SAMPLE_11_PLANAR_3D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_12_PLANAR_2D TVE_TERRAIN_SAMPLE_12_PLANAR_3D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_13_PLANAR_2D TVE_TERRAIN_SAMPLE_13_PLANAR_3D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_14_PLANAR_2D TVE_TERRAIN_SAMPLE_14_PLANAR_3D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_15_PLANAR_2D TVE_TERRAIN_SAMPLE_15_PLANAR_3D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_SAMPLE_16_PLANAR_2D TVE_TERRAIN_SAMPLE_16_PLANAR_3D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_TERRAIN_PACKED
				#pragma shader_feature_local_fragment TVE_ALPHA_CLIP
				#pragma shader_feature_local_fragment TVE_TINTING_ELEMENT
				#pragma shader_feature_local_fragment TVE_DRYNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_OVERLAY_TEX
				#pragma shader_feature_local_fragment TVE_OVERLAY_SAMPLE_PLANAR_2D TVE_OVERLAY_SAMPLE_PLANAR_3D TVE_OVERLAY_SAMPLE_STOCHASTIC_2D TVE_OVERLAY_SAMPLE_STOCHASTIC_3D
				#pragma shader_feature_local_fragment TVE_OVERLAY_GLITTER
				#pragma shader_feature_local_fragment TVE_OVERLAY_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_WATER
				#pragma shader_feature_local_fragment TVE_WETNESS_ELEMENT
				#pragma shader_feature_local_fragment TVE_WETNESS_DROPS
				#pragma shader_feature_local_fragment TVE_EMISSIVE
				#pragma shader_feature_local_fragment TVE_EMISSIVE_ELEMENT
				#pragma shader_feature_local_fragment TVE_CUTOUT
				#pragma shader_feature_local_fragment TVE_CUTOUT_ELEMENT
				#pragma multi_compile_instancing
				#pragma instancing_options assumeuniformscaling nomatrices nolightprobe nolightmap forwardadd
				  
				struct TVEVisualData
				{  
					half Dummy;  
					half3 Albedo;
					half3 AlbedoRaw;
					half2 NormalTS;
					half3 NormalWS; 
					half4 Shader;
					half4 Emissive;
					half AlphaClip;
					half AlphaFade;
					half MultiMask;
					half Grayscale;
					half Luminosity;
					half3 Translucency;
					half Transmission;
					half Thickness;
					float Diffusion;
					float Depth;
				};  
				    
				struct TVEModelData
				{    
					half Dummy;    
					half3 PositionOS;
					half3 PositionWS;
					half3 PositionWO;
					half3 PositionRawOS;
					half3 PositionAddOS;
					half3 PivotOS;
					half3 PivotWS;
					half3 PivotWO;
					half3 NormalOS;
					half3 NormalWS;
					half3 NormalRawOS;
					half3 NormalRawWS;
					half4 TangentOS;
					half3 ViewDirWS;
					half4 VertexData;
					half4 PhaseData;
					half4 BoundsData;
					half4 RotationData;
				};    
				      
				struct TVEGlobalData
				{      
					half Dummy;      
					half4 CoatDataRT;
					half4 PaintDataRT;
					half4 GlowDataRT;
					half4 AtmoDataRT;
					half4 FadeDataRT;
					half4 FormDataRT;
					half4 FlowDataRT;
				};      
				        
				struct TVEMasksData
				{        
					half4 Mask0;
					half4 Mask1;
					half4 Mask2;
					half4 Mask3;
				};        
				#define TVE_TERRAIN_SHADER
				//#pragma editor_sync_compilation
				#ifndef ASE_NEEDS_TEXTURE_COORDINATES2 //Needed for ASE 1.9.8.1
					#define ASE_NEEDS_TEXTURE_COORDINATES2
				#endif
				#if defined(SHADER_API_D3D11) || defined(SHADER_API_XBOXONE) || defined(UNITY_COMPILER_HLSLCC) || defined(SHADER_API_PSSL) || (defined(SHADER_TARGET_SURFACE_ANALYSIS) && !defined(SHADER_TARGET_SURFACE_ANALYSIS_MOJOSHADER))//ASE Sampler Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex.Sample(samplerTex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex.SampleBias(samplerTex,coord,bias)
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex.SampleGrad(samplerTex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplerTex,coord,lod) tex.SampleLevel(samplerTex,coord, lod)
				#else//ASE Sampling Macros
				#define SAMPLE_TEXTURE2D(tex,samplerTex,coord) tex2D(tex,coord)
				#define SAMPLE_TEXTURE2D_LOD(tex,samplerTex,coord,lod) tex2Dlod(tex,float4(coord,0,lod))
				#define SAMPLE_TEXTURE2D_BIAS(tex,samplerTex,coord,bias) tex2Dbias(tex,float4(coord,0,bias))
				#define SAMPLE_TEXTURE2D_GRAD(tex,samplerTex,coord,ddx,ddy) tex2Dgrad(tex,coord,ddx,ddy)
				#define SAMPLE_TEXTURE2D_ARRAY_LOD(tex,samplertex,coord,lod) tex2DArraylod(tex, float4(coord,lod))
				#endif//ASE Sampling Macros
				


				struct appdata
				{
					float4 vertex : POSITION;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;
					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct v2f
				{
					V2F_SHADOW_CASTER;
					float4 ase_texcoord1 : TEXCOORD1;
					float4 ase_texcoord2 : TEXCOORD2;
					float4 ase_texcoord3 : TEXCOORD3;
					float4 ase_texcoord4 : TEXCOORD4;
					float4 ase_texcoord5 : TEXCOORD5;
					float4 ase_color : COLOR;
					float4 ase_texcoord6 : TEXCOORD6;
					UNITY_VERTEX_INPUT_INSTANCE_ID
					UNITY_VERTEX_OUTPUT_STEREO
				};

				#ifdef UNITY_STANDARD_USE_DITHER_MASK
					sampler3D _DitherMaskLOD;
				#endif
				#ifdef ASE_TESSELLATION
					float _TessPhongStrength;
					float _TessValue;
					float _TessMin;
					float _TessMax;
					float _TessEdgeLength;
					float _TessMaxDisp;
				#endif

				uniform half _TerrainLayersMode;
				uniform half _TerrainSampleMode1;
				uniform half _TerrainSampleMode2;
				uniform half _TerrainSampleMode3;
				uniform half _TerrainSampleMode4;
				uniform half _TerrainSampleMode5;
				uniform half _TerrainSampleMode6;
				uniform half _TerrainSampleMode7;
				uniform half _TerrainSampleMode8;
				uniform half _TerrainSampleMode9;
				uniform half _TerrainSampleMode10;
				uniform half _TerrainSampleMode11;
				uniform half _TerrainSampleMode12;
				uniform half _TerrainSampleMode13;
				uniform half _TerrainSampleMode14;
				uniform half _TerrainSampleMode15;
				uniform half _TerrainSampleMode16;
				uniform half _TerrainTextureMode;
				uniform half _IsTerrainShader;
				uniform half _IsSimpleShader;
				uniform half _RenderCategory;
				uniform half _RenderEnd;
				uniform half _IsTVEShader;
				uniform half _IsCustomShader;
				uniform half _IsShared;
				uniform half _IsCollected;
				uniform half _IsConverted;
				uniform half _IsIdentifier;
				uniform half _RenderDecals;
				uniform half _RenderSSR;
				uniform half _RenderClip;
				uniform half _IsVersion;
				uniform half _RenderShadow;
				uniform half _RenderFilter;
				UNITY_DECLARE_TEX3D_NOSAMPLER(_NoiseTex3D);
				SamplerState sampler_NoiseTex3D;
				uniform half _ConformCategory;
				uniform half _ConformEnd;
				uniform half _ConformInfo;
				uniform float3 TVE_WorldOrigin;
				uniform half4 TVE_TimeParams;
				uniform half4 _object_phase_mode;
				uniform half _GlobalCategory;
				uniform half _GlobalEnd;
				uniform half4 TVE_CoatParams;
				uniform half _GlobalPaintLayerValue;
				uniform float TVE_PaintLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintBaseTex);
				uniform half4 TVE_RenderBaseCoords;
				SamplerState sampler_Linear_Clamp;
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_PaintNearTex);
				uniform half4 TVE_RenderNearCoords;
				SamplerState sampler_Linear_Repeat;
				uniform float4 TVE_RenderNearPositionR;
				uniform half TVE_RenderNearFadeValue;
				uniform half4 TVE_PaintParams;
				uniform half _GlobalGlowLayerValue;
				uniform float TVE_GlowLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_GlowNearTex);
				uniform half4 TVE_GlowParams;
				uniform half _GlobalAtmoLayerValue;
				uniform float TVE_AtmoLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_AtmoNearTex);
				uniform half4 TVE_AtmoParams;
				uniform half _GlobalFadeLayerValue;
				uniform float TVE_FadeLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FadeNearTex);
				uniform half4 TVE_FadeParams;
				uniform half _GlobalFormLayerValue;
				uniform float TVE_FormLayers[10];
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormBaseTex);
				UNITY_DECLARE_TEX2DARRAY_NOSAMPLER(TVE_FormNearTex);
				uniform half4 TVE_FormParams;
				uniform half4 TVE_FlowParams;
				uniform half _ConformHeightMode;
				uniform half _ConformHeightValue;
				uniform half TVE_IsEnabled;
				uniform half _CutoutCategory;
				uniform half _CutoutEnd;
				uniform half _CutoutSpace;
				uniform half _CutoutBakeInfo;
				uniform half _EmissiveCategory;
				uniform half _EmissiveEnd;
				uniform half _EmissivePowerMode;
				uniform half _EmissivePowerValue;
				uniform half _EmissiveFlagMode;
				uniform half _WetnessCategory;
				uniform half _WetnessEnd;
				uniform half _WetnessBakeInfo;
				uniform half _OverlayCategory;
				uniform half _OverlayEnd;
				uniform half _OverlaySpace;
				uniform half _OverlayBakeInfo;
				uniform half _DrynessCategory;
				uniform half _DrynessEnd;
				uniform half _DrynessSpace;
				uniform half _DrynessBakeInfo;
				uniform half _TintingCategory;
				uniform half _TintingEnd;
				uniform half _TintingSpace;
				uniform half _TintingBakeInfo;
				uniform half _CategoryTerrain;
				uniform half _EndTerrain;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex1);
				uniform half4 _TerrainPosition;
				uniform half4 _TerrainSize;
				float4 _TerrainControlTex1_TexelSize;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainControlTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex1);
				SamplerState sampler_Point_Repeat;
				SamplerState sampler_Linear_Repeat_Aniso8;
				uniform half4 _TerrainCoord1;
				uniform half4 _TerrainShaderMin1;
				uniform half4 _TerrainShaderRcp1;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex2);
				uniform half4 _TerrainCoord2;
				uniform half4 _TerrainShaderMin2;
				uniform half4 _TerrainShaderRcp2;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex3);
				uniform half4 _TerrainCoord3;
				uniform half4 _TerrainShaderMin3;
				uniform half4 _TerrainShaderRcp3;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex4);
				uniform half4 _TerrainCoord4;
				uniform half4 _TerrainShaderMin4;
				uniform half4 _TerrainShaderRcp4;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex5);
				uniform half4 _TerrainCoord5;
				uniform half4 _TerrainShaderMin5;
				uniform half4 _TerrainShaderRcp5;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex6);
				uniform half4 _TerrainCoord6;
				uniform half4 _TerrainShaderMin6;
				uniform half4 _TerrainShaderRcp6;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex7);
				uniform half4 _TerrainCoord7;
				uniform half4 _TerrainShaderMin7;
				uniform half4 _TerrainShaderRcp7;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex8);
				uniform half4 _TerrainCoord8;
				uniform half4 _TerrainShaderMin8;
				uniform half4 _TerrainShaderRcp8;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex9);
				uniform half4 _TerrainCoord9;
				uniform half4 _TerrainShaderMin9;
				uniform half4 _TerrainShaderRcp9;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex10);
				uniform half4 _TerrainCoord10;
				uniform half4 _TerrainShaderMin10;
				uniform half4 _TerrainShaderRcp10;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex11);
				uniform half4 _TerrainCoord11;
				uniform half4 _TerrainShaderMin11;
				uniform half4 _TerrainShaderRcp11;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex12);
				uniform half4 _TerrainCoord12;
				uniform half4 _TerrainShaderMin12;
				uniform half4 _TerrainShaderRcp12;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex13);
				uniform half4 _TerrainCoord13;
				uniform half4 _TerrainShaderMin13;
				uniform half4 _TerrainShaderRcp13;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex14);
				uniform half4 _TerrainCoord14;
				uniform half4 _TerrainShaderMin14;
				uniform half4 _TerrainShaderRcp14;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex15);
				uniform half4 _TerrainCoord15;
				uniform half4 _TerrainShaderMin15;
				uniform half4 _TerrainShaderRcp15;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainShaderTex16);
				uniform half4 _TerrainCoord16;
				uniform half4 _TerrainShaderMin16;
				uniform half4 _TerrainShaderRcp16;
				uniform half _TerrainHeightBlendValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainAlbedoTex16);
				uniform half4 _TerrainColor1;
				uniform half4 _TerrainColor2;
				uniform half4 _TerrainColor3;
				uniform half4 _TerrainColor4;
				uniform half4 _TerrainColor5;
				uniform half4 _TerrainColor6;
				uniform half4 _TerrainColor7;
				uniform half4 _TerrainColor8;
				uniform half4 _TerrainColor9;
				uniform half4 _TerrainColor10;
				uniform half4 _TerrainColor11;
				uniform half4 _TerrainColor12;
				uniform half4 _TerrainColor13;
				uniform half4 _TerrainColor14;
				uniform half4 _TerrainColor15;
				uniform half4 _TerrainColor16;
				uniform half4 _TerrainColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex1);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex2);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex3);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex4);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex5);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex6);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex7);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex8);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex9);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex10);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex11);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex12);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex13);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex14);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex15);
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainNormalTex16);
				uniform half4 _TerrainParams1;
				uniform half4 _TerrainParams2;
				uniform half4 _TerrainParams3;
				uniform half4 _TerrainParams4;
				uniform half4 _TerrainParams5;
				uniform half4 _TerrainParams6;
				uniform half4 _TerrainParams7;
				uniform half4 _TerrainParams8;
				uniform half4 _TerrainParams9;
				uniform half4 _TerrainParams10;
				uniform half4 _TerrainParams11;
				uniform half4 _TerrainParams12;
				uniform half4 _TerrainParams13;
				uniform half4 _TerrainParams14;
				uniform half4 _TerrainParams15;
				uniform half4 _TerrainParams16;
				uniform half _TerrainNormalValue;
				uniform half _TerrainMetallicValue;
				uniform half _TerrainOcclusionValue;
				uniform half _TerrainSmoothnessValue;
				uniform half4 _TerrainSpecular1;
				uniform half4 _TerrainSpecular2;
				uniform half4 _TerrainSpecular3;
				uniform half4 _TerrainSpecular4;
				uniform half4 _TerrainSpecular5;
				uniform half4 _TerrainSpecular6;
				uniform half4 _TerrainSpecular7;
				uniform half4 _TerrainSpecular8;
				uniform half4 _TerrainSpecular9;
				uniform half4 _TerrainSpecular10;
				uniform half4 _TerrainSpecular11;
				uniform half4 _TerrainSpecular12;
				uniform half4 _TerrainSpecular13;
				uniform half4 _TerrainSpecular14;
				uniform half4 _TerrainSpecular15;
				uniform half4 _TerrainSpecular16;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_TerrainHolesTex);
				uniform half _TintingElementMode;
				uniform half _TintingGlobalValue;
				uniform half _TintingGrayValue;
				uniform float4 _TintingColor;
				uniform half _TintingIntensityValue;
				uniform half _TintingMultiValue;
				uniform half4 _TintingLumaRemap;
				uniform half _TintingLumaValue;
				uniform half4 _TintingBlendRemap;
				uniform half _DrynessElementMode;
				uniform half _DrynessGlobalValue;
				uniform half _DrynessGrayValue;
				uniform float4 _DrynessColor;
				uniform half _DrynessIntensityValue;
				uniform half _DrynessMultiValue;
				uniform half4 _DrynessLumaRemap;
				uniform half _DrynessLumaValue;
				uniform half4 _DrynessBlendRemap;
				uniform half _DrynessSmoothnessValue;
				uniform half _DrynessSubsurfaceValue;
				uniform half4 _OverlayColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayAlbedoTex);
				uniform half4 _overlay_coord_value;
				uniform half _OverlaySampleMode;
				uniform half _OverlayCoordMode;
				uniform half4 _OverlayCoordValue;
				uniform half _OverlayTextureMode;
				uniform half _OverlayGlitterIntensityValue;
				uniform half4 _OverlayGlitterColor;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayGlitterTexRT);
				uniform half _OverlayGlitterTillingValue;
				uniform half _OverlayGlitterDistValue;
				uniform half _OverlayIntensityValue;
				uniform half4 _OverlayProjRemap;
				uniform half _OverlayProjValue;
				uniform half4 _OverlayLumaRemap;
				uniform half _OverlayLumaValue;
				uniform half _OverlayElementMode;
				uniform half _OverlayGlobalValue;
				uniform half4 _OverlayBlendRemap;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_OverlayNormalTex);
				uniform half _OverlayNormalValue;
				uniform half _OverlaySmoothnessValue;
				uniform half _OverlaySubsurfaceValue;
				uniform half4 _WetnessWaterColor;
				uniform half _WetnessWaterIntensityValue;
				uniform half _WetnessIntensityValue;
				uniform half _WetnessElementMode;
				uniform half _WetnessGlobalValue;
				uniform half _WetnessWaterBaseValue;
				uniform half4 _WetnessWaterBlendRemap;
				uniform half _WetnessContrastValue;
				UNITY_DECLARE_TEX2D_NOSAMPLER(_WetnessDropsTexRT);
				uniform half _WetnessDropsTillingValue;
				uniform half _WetnessDropsIntensityValue;
				uniform half _WetnessDropsNormalValue;
				uniform half _WetnessDropsDistValue;
				uniform half _WetnessSmoothnessValue;
				uniform half _EmissiveIntensityValue;
				uniform half4 _EmissiveColor;
				uniform half _EmissiveElementMode;
				uniform half _EmissiveGlobalValue;
				uniform half _EmissiveColorMode;
				uniform float _emissive_power_value;
				uniform half _CutoutIntensityValue;
				uniform half _CutoutElementMode;
				uniform half _CutoutGlobalValue;
				#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
					sampler2D _TerrainHeightmapTexture;//ASE Terrain Instancing
					sampler2D _TerrainNormalmapTexture;//ASE Terrain Instancing
				#endif//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_START( Terrain )//ASE Terrain Instancing
					UNITY_DEFINE_INSTANCED_PROP( float4, _TerrainPatchInstanceData )//ASE Terrain Instancing
				UNITY_INSTANCING_BUFFER_END( Terrain)//ASE Terrain Instancing
				CBUFFER_START( UnityTerrain)//ASE Terrain Instancing
					#ifdef UNITY_INSTANCING_ENABLED//ASE Terrain Instancing
						float4 _TerrainHeightmapRecipSize;//ASE Terrain Instancing
						float4 _TerrainHeightmapScale;//ASE Terrain Instancing
					#endif//ASE Terrain Instancing
				CBUFFER_END//ASE Terrain Instancing


				float4 mod289( float4 x )
				{
					return x - floor(x * 0.00346020761) * 289.0;
				}
				
				float4 perm( float4 x )
				{
					    return mod289((x * 34.0 + 1.0) * x);
				}
				
				float SimpleNoise3D( float3 p )
				{
					    // Compute integer and fractional parts.
					    float3 i = floor(p);
					    float3 f = p - i;
					    // Cubic interpolation (smoothstep)
					    f = f * f * (3.0 - 2.0 * f);
					    // Build 4-component vectors using swizzling.
					    // a = (i.x, i.x+1, i.y, i.y+1)
					    float4 a = float4(i.x, i.x, i.y, i.y) + float4(0.0, 1.0, 0.0, 1.0);
					    // Permutations along the x and y axes.
					    float4 k1 = perm(a.xyxy);
					    float4 k2 = perm(k1.xyxy + a.zzww);
					    // Incorporate the z component.
					    float4 c  = k2 + float4(i.z, i.z, i.z, i.z);
					    float4 k3 = perm(c);
					    float4 k4 = perm(c + 1.0);
					    // Map results to the [0,1] range.
					    float4 o1 = frac(k3 * 0.0243902439);
					    float4 o2 = frac(k4 * 0.0243902439);
					    // Interpolate along z, then x, then y.
					    float4 o3 = lerp(o1, o2, f.z);           // f.z blends between layers.
					    float2 o4 = lerp(o3.xz, o3.yw, f.x);       // f.x blends between pairs.
					    return lerp(o4.x, o4.y, f.y); 
				}
				
				void ComputeWorldCoords( half4 Coords, half3 WorldPosition, out half2 ZX, out half2 ZY, out half2 XY )
				{
					ZX = WorldPosition.xz * Coords.xx - Coords.zz;
					ZY = WorldPosition.yz * Coords.yx - Coords.wz; 
					XY = WorldPosition.xy * Coords.xy - Coords.zw;
				}
				
				half4 SamplePlanar2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half4 tex = SAMPLE_TEXTURE2D( Texture, Sampler, UV);
					return tex;
				}
				
				void ComputeTriplanarWeights( half3 WorldNormal, out half T1, out half T2, out half T3 )
				{
					half3 powNormal = abs( WorldNormal.xyz );
					half3 weights = max( powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal * powNormal, 0.000001 );
					weights /= ( weights.x + weights.y + weights.z ).xxx;
					T1 = weights.y;
					T2 = weights.x;
					T3 = weights.z;
				}
				
				half4 SamplePlanar3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					half4 tex1 = SAMPLE_TEXTURE2D( Texture, Sampler, ZX);
					half4 tex2 = SAMPLE_TEXTURE2D( Texture, Sampler, ZY);
					half4 tex3 = SAMPLE_TEXTURE2D( Texture, Sampler, XY);
					return tex1 * T1 + tex2 * T2 + tex3 * T3;
				}
				
				void ComputeStochasticCoords( float2 UV, out float2 UV1, out float2 UV2, out float2 UV3, out float W1, out float W2, out float W3 )
				{
					half2 vertex1, vertex2, vertex3;
					// Scaling of the input
					half2 uv = UV * 3.464; // 2 * sqrt (3)
					// Skew input space into simplex triangle grid
					const float2x2 gridToSkewedGrid = float2x2( 1.0, 0.0, -0.57735027, 1.15470054 );
					half2 skewedCoord = mul( gridToSkewedGrid, uv );
					// Compute local triangle vertex IDs and local barycentric coordinates
					int2 baseId = int2( floor( skewedCoord ) );
					half3 temp = half3( frac( skewedCoord ), 0 );
					temp.z = 1.0 - temp.x - temp.y;
					if ( temp.z > 0.0 )
					{
						W1 = temp.z;
						W2 = temp.y;
						W3 = temp.x;
						vertex1 = baseId;
						vertex2 = baseId + int2( 0, 1 );
						vertex3 = baseId + int2( 1, 0 );
					}
					else
					{
						W1 = -temp.z;
						W2 = 1.0 - temp.y;
						W3 = 1.0 - temp.x;
						vertex1 = baseId + int2( 1, 1 );
						vertex2 = baseId + int2( 1, 0 );
						vertex3 = baseId + int2( 0, 1 );
					}
					UV1 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex1 ) ) * 43758.5453 );
					UV2 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex2 ) ) * 43758.5453 );
					UV3 = UV + frac( sin( mul( float2x2( 127.1, 311.7, 269.5, 183.3 ), vertex3 ) ) * 43758.5453 );
					return;
				}
				
				float4 SampleStochastic2D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition )
				{
					half2 UV = WorldPosition.xz * Coords.xy + Coords.zw;
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					ComputeStochasticCoords(UV, UV1, UV2, UV3, W1, W2, W3 );
					half4 tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(UV), ddy(UV));
					half4 tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(UV), ddy(UV));
					half4 tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(UV), ddy(UV));
					return tex1 * W1 + tex2 * W2 + tex3 * W3;
				}
				
				half4 SampleStochastic3D( UNITY_DECLARE_TEX2D_NOSAMPLER(Texture), SamplerState Sampler, half4 Coords, float3 WorldPosition, half3 WorldNormal )
				{
					half2 ZX, ZY, XY;
					ComputeWorldCoords(Coords, WorldPosition, ZX, ZY, XY);
					half2 UV1, UV2, UV3;
					half W1, W2, W3;
					half4 tex1, tex2, tex3;
					ComputeStochasticCoords(ZX, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZX), ddy(ZX));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZX), ddy(ZX));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZX), ddy(ZX));
					half4 texZX = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(ZY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(ZY), ddy(ZY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(ZY), ddy(ZY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(ZY), ddy(ZY));
					half4 texZY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					ComputeStochasticCoords(XY, UV1, UV2, UV3, W1, W2, W3 );
					tex1 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV1, ddx(XY), ddy(XY));
					tex2 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV2, ddx(XY), ddy(XY));
					tex3 = SAMPLE_TEXTURE2D_GRAD( Texture, Sampler, UV3, ddx(XY), ddy(XY));
					half4 texXY = tex1 * W1 + tex2 * W2 + tex3 * W3;
					half T1, T2, T3;
					ComputeTriplanarWeights(WorldNormal, T1, T2, T3);
					return texZX * T1 + texZY * T2 + texXY * T3;
				}
				
				appdata ApplyMeshModification( appdata v ){
				#ifdef UNITY_INSTANCING_ENABLED
					float2 patchVertex = v.vertex.xy;
					float4 instanceData = UNITY_ACCESS_INSTANCED_PROP( Terrain, _TerrainPatchInstanceData );
					float4 uvscale = instanceData.z * _TerrainHeightmapRecipSize;
					float4 uvoffset = instanceData.xyxy * uvscale;
					uvoffset.xy += 0.5f * _TerrainHeightmapRecipSize.xy;
					float2 sampleCoords = (patchVertex.xy * uvscale.xy + uvoffset.xy);
					v.ase_texcoord = float4(patchVertex.xy * uvscale.zw + uvoffset.zw, 0, 0);
					float height = UnpackHeightmap( tex2Dlod( _TerrainHeightmapTexture, float4(sampleCoords, 0, 0) ) );
					v.vertex.xz = (patchVertex.xy + instanceData.xy) * _TerrainHeightmapScale.xz * instanceData.z;
					v.vertex.y = height * _TerrainHeightmapScale.y;
					v.normal = tex2Dlod( _TerrainNormalmapTexture, v.ase_texcoord ).rgb * 2 - 1;
				#endif
				return v;
				}
				

				v2f VertexFunction( appdata v  )
				{
					UNITY_SETUP_INSTANCE_ID(v);
					v2f o;
					UNITY_INITIALIZE_OUTPUT(v2f,o);
					UNITY_TRANSFER_INSTANCE_ID(v,o);
					UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);

					v = ApplyMeshModification(v);
					TVEModelData Data16_g129074 = (TVEModelData)0;
					half Dummy181_g129072 = ( _ConformCategory + _ConformEnd + _ConformInfo );
					float In_Dummy16_g129074 = Dummy181_g129072;
					TVEModelData Data16_g114310 = (TVEModelData)0;
					half Dummy207_g114306 = 0.0;
					float In_Dummy16_g114310 = Dummy207_g114306;
					half3 PositionOS131_g114306 = v.vertex.xyz;
					float3 In_PositionOS16_g114310 = PositionOS131_g114306;
					float3 ase_positionWS = mul( unity_ObjectToWorld, float4( ( v.vertex ).xyz, 1 ) ).xyz;
					float3 vertexToFrag73_g114306 = ase_positionWS;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114310 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114310 = PositionWO132_g114306;
					float3 In_PositionRawOS16_g114310 = PositionOS131_g114306;
					float3 In_PositionAddOS16_g114310 = float3( 0,0,0 );
					float3 _Vector0 = float3(0,0,0);
					half3 PivotOS149_g114306 = _Vector0;
					float3 In_PivotOS16_g114310 = PivotOS149_g114306;
					float3 In_PivotWS16_g114310 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114310 = PivotWO133_g114306;
					half3 NormalOS134_g114306 = v.normal;
					float3 In_NormalOS16_g114310 = NormalOS134_g114306;
					float3 ase_normalWS = UnityObjectToWorldNormal( v.normal );
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114310 = Normal_WS95_g114306;
					float3 In_NormalRawOS16_g114310 = NormalOS134_g114306;
					float3 objToWorldDir298_g114306 = normalize( mul( unity_ObjectToWorld, float4( v.normal, 0.0 ) ).xyz );
					half3 Normal_RawWS136_g114306 = objToWorldDir298_g114306;
					float3 In_NormalRawWS16_g114310 = Normal_RawWS136_g114306;
					half4 TangentlOS153_g114306 = v.tangent;
					float4 In_TangentOS16_g114310 = TangentlOS153_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114310 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = v.ase_color;
					float4 In_VertexData16_g114310 = VertexMasks171_g114306;
					float mulTime113_g128352 = _Time.y * 0.52;
					float lerpResult128_g128352 = lerp( mulTime113_g128352 , ( ( mulTime113_g128352 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float3 break319_g114306 = PivotWO133_g114306;
					half Pivot_Position322_g114306 = ( break319_g114306.x + break319_g114306.z );
					float mulTime113_g128351 = _Time.y * 0.27;
					float lerpResult128_g128351 = lerp( mulTime113_g128351 , ( ( mulTime113_g128351 * TVE_TimeParams.x ) + TVE_TimeParams.y ) , TVE_TimeParams.w);
					float4 break33_g128354 = _object_phase_mode;
					float temp_output_30_0_g128354 = ( v.ase_color.r * break33_g128354.x );
					float temp_output_29_0_g128354 = ( v.ase_color.g * break33_g128354.y );
					float temp_output_31_0_g128354 = ( v.ase_color.b * break33_g128354.z );
					float temp_output_28_0_g128354 = ( temp_output_30_0_g128354 + temp_output_29_0_g128354 + temp_output_31_0_g128354 + ( v.ase_color.a * break33_g128354.w ) );
					float temp_output_315_0_g114306 = (frac( ( temp_output_28_0_g128354 + Pivot_Position322_g114306 ) )*2.0 + -1.0);
					float4 appendResult177_g114306 = (float4(sin( ( lerpResult128_g128352 + Pivot_Position322_g114306 ) ) , sin( ( lerpResult128_g128351 + Pivot_Position322_g114306 ) ) , temp_output_315_0_g114306 , 1.0));
					half4 MotionMasks176_g114306 = appendResult177_g114306;
					float4 In_PhaseData16_g114310 = MotionMasks176_g114306;
					half4 BoundsData254_g114306 = float4( 0,0,0,0 );
					float4 In_BoundsData16_g114310 = BoundsData254_g114306;
					float4 In_RotationData16_g114310 = float4( 0,0,0,0 );
					{
					Data16_g114310.Dummy = In_Dummy16_g114310;
					Data16_g114310.PositionOS = In_PositionOS16_g114310;
					Data16_g114310.PositionWS = In_PositionWS16_g114310;
					Data16_g114310.PositionWO = In_PositionWO16_g114310;
					Data16_g114310.PositionRawOS = In_PositionRawOS16_g114310;
					Data16_g114310.PositionAddOS = In_PositionAddOS16_g114310;
					Data16_g114310.PivotOS = In_PivotOS16_g114310;
					Data16_g114310.PivotWS = In_PivotWS16_g114310;
					Data16_g114310.PivotWO = In_PivotWO16_g114310;
					Data16_g114310.NormalOS = In_NormalOS16_g114310;
					Data16_g114310.NormalWS = In_NormalWS16_g114310;
					Data16_g114310.NormalRawOS = In_NormalRawOS16_g114310;
					Data16_g114310.NormalRawWS = In_NormalRawWS16_g114310;
					Data16_g114310.TangentOS = In_TangentOS16_g114310;
					Data16_g114310.ViewDirWS = In_ViewDirWS16_g114310;
					Data16_g114310.VertexData = In_VertexData16_g114310;
					Data16_g114310.PhaseData = In_PhaseData16_g114310;
					Data16_g114310.BoundsData = In_BoundsData16_g114310;
					Data16_g114310.RotationData = In_RotationData16_g114310;
					}
					TVEModelData Data15_g129073 = Data16_g114310;
					float Out_Dummy15_g129073 = 0;
					float3 Out_PositionOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129073 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129073 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129073 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129073 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129073 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129073 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129073 = float3( 0,0,0 );
					float4 Out_VertexData15_g129073 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129073 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129073 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129073 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129073 = Data15_g129073.Dummy;
					Out_PositionOS15_g129073 = Data15_g129073.PositionOS;
					Out_PositionWS15_g129073 = Data15_g129073.PositionWS;
					Out_PositionWO15_g129073 = Data15_g129073.PositionWO;
					Out_PositionRawOS15_g129073 = Data15_g129073.PositionRawOS;
					Out_PositionAddOS15_g129073 = Data15_g129073.PositionAddOS;
					Out_PivotOS15_g129073 = Data15_g129073.PivotOS;
					Out_PivotWS15_g129073 = Data15_g129073.PivotWS;
					Out_PivotWO15_g129073 = Data15_g129073.PivotWO;
					Out_NormalOS15_g129073 = Data15_g129073.NormalOS;
					Out_NormalWS15_g129073 = Data15_g129073.NormalWS;
					Out_NormalRawOS15_g129073 = Data15_g129073.NormalRawOS;
					Out_NormalRawWS15_g129073 = Data15_g129073.NormalRawWS;
					Out_TangentOS15_g129073 = Data15_g129073.TangentOS;
					Out_ViewDirWS15_g129073 = Data15_g129073.ViewDirWS;
					Out_VertexData15_g129073 = Data15_g129073.VertexData;
					Out_PhaseData15_g129073 = Data15_g129073.PhaseData;
					Out_BoundsData15_g129073 = Data15_g129073.BoundsData;
					Out_RotationData15_g129073 = Data15_g129073.RotationData;
					}
					half3 Input_PositionOS147_g129072 = Out_PositionOS15_g129073;
					float3 break592_g129072 = Input_PositionOS147_g129072;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g129077 = Data204_g128736;
					float Out_Dummy15_g129077 = 0;
					float4 Out_CoatDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129077 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129077 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129077 = Data15_g129077.Dummy;
					Out_CoatDataRT15_g129077 = Data15_g129077.CoatDataRT;
					Out_PaintDataRT15_g129077 = Data15_g129077.PaintDataRT;
					Out_GlowDataRT15_g129077= Data15_g129077.GlowDataRT;
					Out_AtmoDataRT15_g129077= Data15_g129077.AtmoDataRT;
					Out_FadeDataRT15_g129077= Data15_g129077.FadeDataRT;
					Out_FormDataRT15_g129077 = Data15_g129077.FormDataRT;
					Out_FlowDataRT15_g129077 = Data15_g129077.FlowDataRT;
					}
					half4 Input_FormParams214_g129072 = Out_FormDataRT15_g129077;
					float temp_output_642_0_g129072 = ( (Input_FormParams214_g129072).z + (TVE_WorldOrigin).y );
					float3 temp_output_481_19_g129072 = Out_PivotWO15_g129073;
					half3 Model_PivotWO602_g129072 = temp_output_481_19_g129072;
					float lerpResult594_g129072 = lerp( ( break592_g129072.y + temp_output_642_0_g129072 ) , ( temp_output_642_0_g129072 - (Model_PivotWO602_g129072).y ) , _ConformHeightMode);
					float lerpResult604_g129072 = lerp( break592_g129072.y , lerpResult594_g129072 , ( _ConformHeightValue * TVE_IsEnabled ));
					float3 appendResult593_g129072 = (float3(break592_g129072.x , lerpResult604_g129072 , break592_g129072.z));
					#ifdef TVE_CONFORM
					float3 staticSwitch575_g129072 = appendResult593_g129072;
					#else
					float3 staticSwitch575_g129072 = Input_PositionOS147_g129072;
					#endif
					half3 Final_PositionOS580_g129072 = staticSwitch575_g129072;
					float3 In_PositionOS16_g129074 = Final_PositionOS580_g129072;
					float3 In_PositionWS16_g129074 = Out_PositionWS15_g129073;
					float3 In_PositionWO16_g129074 = Out_PositionWO15_g129073;
					float3 In_PositionRawOS16_g129074 = Out_PositionRawOS15_g129073;
					float3 In_PositionAddOS16_g129074 = Out_PositionAddOS15_g129073;
					float3 In_PivotOS16_g129074 = Out_PivotOS15_g129073;
					float3 In_PivotWS16_g129074 = Out_PivotWS15_g129073;
					float3 In_PivotWO16_g129074 = temp_output_481_19_g129072;
					float3 temp_output_481_20_g129072 = Out_NormalOS15_g129073;
					float3 In_NormalOS16_g129074 = temp_output_481_20_g129072;
					float3 In_NormalWS16_g129074 = Out_NormalWS15_g129073;
					float3 In_NormalRawOS16_g129074 = Out_NormalRawOS15_g129073;
					float3 In_NormalRawWS16_g129074 = Out_NormalRawWS15_g129073;
					float4 In_TangentOS16_g129074 = Out_TangentOS15_g129073;
					float3 In_ViewDirWS16_g129074 = Out_ViewDirWS15_g129073;
					float4 In_VertexData16_g129074 = Out_VertexData15_g129073;
					float4 In_PhaseData16_g129074 = Out_PhaseData15_g129073;
					float4 In_BoundsData16_g129074 = Out_BoundsData15_g129073;
					float4 In_RotationData16_g129074 = Out_RotationData15_g129073;
					{
					Data16_g129074.Dummy = In_Dummy16_g129074;
					Data16_g129074.PositionOS = In_PositionOS16_g129074;
					Data16_g129074.PositionWS = In_PositionWS16_g129074;
					Data16_g129074.PositionWO = In_PositionWO16_g129074;
					Data16_g129074.PositionRawOS = In_PositionRawOS16_g129074;
					Data16_g129074.PositionAddOS = In_PositionAddOS16_g129074;
					Data16_g129074.PivotOS = In_PivotOS16_g129074;
					Data16_g129074.PivotWS = In_PivotWS16_g129074;
					Data16_g129074.PivotWO = In_PivotWO16_g129074;
					Data16_g129074.NormalOS = In_NormalOS16_g129074;
					Data16_g129074.NormalWS = In_NormalWS16_g129074;
					Data16_g129074.NormalRawOS = In_NormalRawOS16_g129074;
					Data16_g129074.NormalRawWS = In_NormalRawWS16_g129074;
					Data16_g129074.TangentOS = In_TangentOS16_g129074;
					Data16_g129074.ViewDirWS = In_ViewDirWS16_g129074;
					Data16_g129074.VertexData = In_VertexData16_g129074;
					Data16_g129074.PhaseData = In_PhaseData16_g129074;
					Data16_g129074.BoundsData = In_BoundsData16_g129074;
					Data16_g129074.RotationData = In_RotationData16_g129074;
					}
					TVEModelData Data15_g129096 = Data16_g129074;
					float Out_Dummy15_g129096 = 0;
					float3 Out_PositionOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129096 = float3( 0,0,0 );
					float3 Out_PositionRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_PositionAddOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotOS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129096 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129096 = float3( 0,0,0 );
					float3 Out_NormalOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawOS15_g129096 = float3( 0,0,0 );
					float3 Out_NormalRawWS15_g129096 = float3( 0,0,0 );
					float4 Out_TangentOS15_g129096 = float4( 0,0,0,0 );
					float3 Out_ViewDirWS15_g129096 = float3( 0,0,0 );
					float4 Out_VertexData15_g129096 = float4( 0,0,0,0 );
					float4 Out_PhaseData15_g129096 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129096 = float4( 0,0,0,0 );
					float4 Out_RotationData15_g129096 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129096 = Data15_g129096.Dummy;
					Out_PositionOS15_g129096 = Data15_g129096.PositionOS;
					Out_PositionWS15_g129096 = Data15_g129096.PositionWS;
					Out_PositionWO15_g129096 = Data15_g129096.PositionWO;
					Out_PositionRawOS15_g129096 = Data15_g129096.PositionRawOS;
					Out_PositionAddOS15_g129096 = Data15_g129096.PositionAddOS;
					Out_PivotOS15_g129096 = Data15_g129096.PivotOS;
					Out_PivotWS15_g129096 = Data15_g129096.PivotWS;
					Out_PivotWO15_g129096 = Data15_g129096.PivotWO;
					Out_NormalOS15_g129096 = Data15_g129096.NormalOS;
					Out_NormalWS15_g129096 = Data15_g129096.NormalWS;
					Out_NormalRawOS15_g129096 = Data15_g129096.NormalRawOS;
					Out_NormalRawWS15_g129096 = Data15_g129096.NormalRawWS;
					Out_TangentOS15_g129096 = Data15_g129096.TangentOS;
					Out_ViewDirWS15_g129096 = Data15_g129096.ViewDirWS;
					Out_VertexData15_g129096 = Data15_g129096.VertexData;
					Out_PhaseData15_g129096 = Data15_g129096.PhaseData;
					Out_BoundsData15_g129096 = Data15_g129096.BoundsData;
					Out_RotationData15_g129096 = Data15_g129096.RotationData;
					}
					float3 temp_output_31_0_g129094 = Out_PositionOS15_g129096;
					
					float3 temp_output_31_20_g129094 = Out_NormalOS15_g129096;
					
					float4 appendResult120_g129094 = (float4(cross( temp_output_31_20_g129094 , float3( 0, 0, 1 ) ) , -1.0));
					float4 temp_output_6_0_g129107 = appendResult120_g129094;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129107 = ( temp_output_6_0_g129107 + 0.0 );
					#else
					float4 staticSwitch14_g129107 = temp_output_6_0_g129107;
					#endif
					
					o.ase_texcoord1.xyz = ase_positionWS;
					o.ase_texcoord2.xyz = ase_normalWS;
					float3 ase_tangentWS = UnityObjectToWorldDir( v.tangent );
					o.ase_texcoord3.xyz = ase_tangentWS;
					float ase_tangentSign = v.tangent.w * ( unity_WorldTransformParams.w >= 0.0 ? 1.0 : -1.0 );
					float3 ase_bitangentWS = cross( ase_normalWS, ase_tangentWS ) * ase_tangentSign;
					o.ase_texcoord4.xyz = ase_bitangentWS;
					o.ase_texcoord5.xyz = vertexToFrag73_g114306;
					
					o.ase_color = v.ase_color;
					o.ase_texcoord6 = v.ase_texcoord;
					
					//setting value to unused interpolator channels and avoid initialization warnings
					o.ase_texcoord1.w = 0;
					o.ase_texcoord2.w = 0;
					o.ase_texcoord3.w = 0;
					o.ase_texcoord4.w = 0;
					o.ase_texcoord5.w = 0;

					#ifdef ASE_ABSOLUTE_VERTEX_POS
						float3 defaultVertexValue = v.vertex.xyz;
					#else
						float3 defaultVertexValue = float3(0, 0, 0);
					#endif
					float3 vertexValue = temp_output_31_0_g129094;
					#ifdef ASE_ABSOLUTE_VERTEX_POS
						v.vertex.xyz = vertexValue;
					#else
						v.vertex.xyz += vertexValue;
					#endif
					v.vertex.w = 1;
					v.normal = temp_output_31_20_g129094;
					v.tangent = staticSwitch14_g129107;

					TRANSFER_SHADOW_CASTER_NORMALOFFSET(o)
					return o;
				}

				#if defined(ASE_TESSELLATION)
				struct VertexControl
				{
					float4 vertex : INTERNALTESSPOS;
					float4 tangent : TANGENT;
					float3 normal : NORMAL;
					float4 texcoord1 : TEXCOORD1;
					float4 texcoord2 : TEXCOORD2;
					float4 ase_color : COLOR;
					float4 ase_texcoord : TEXCOORD0;

					UNITY_VERTEX_INPUT_INSTANCE_ID
				};

				struct TessellationFactors
				{
					float edge[3] : SV_TessFactor;
					float inside : SV_InsideTessFactor;
				};

				VertexControl vert ( appdata v )
				{
					VertexControl o;
					UNITY_SETUP_INSTANCE_ID(v);
					UNITY_TRANSFER_INSTANCE_ID(v, o);
					o.vertex = v.vertex;
					o.tangent = v.tangent;
					o.normal = v.normal;
					o.texcoord1 = v.texcoord1;
					o.texcoord2 = v.texcoord2;
					o.ase_color = v.ase_color;
					o.ase_texcoord = v.ase_texcoord;
					return o;
				}

				TessellationFactors TessellationFunction (InputPatch<VertexControl,3> v)
				{
					TessellationFactors o;
					float4 tf = 1;
					float tessValue = _TessValue; float tessMin = _TessMin; float tessMax = _TessMax;
					float edgeLength = _TessEdgeLength; float tessMaxDisp = _TessMaxDisp;
					#if defined(ASE_FIXED_TESSELLATION)
					tf = FixedTess( tessValue );
					#elif defined(ASE_DISTANCE_TESSELLATION)
					tf = DistanceBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, tessValue, tessMin, tessMax, UNITY_MATRIX_M, _WorldSpaceCameraPos );
					#elif defined(ASE_LENGTH_TESSELLATION)
					tf = EdgeLengthBasedTess(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams );
					#elif defined(ASE_LENGTH_CULL_TESSELLATION)
					tf = EdgeLengthBasedTessCull(v[0].vertex, v[1].vertex, v[2].vertex, edgeLength, tessMaxDisp, UNITY_MATRIX_M, _WorldSpaceCameraPos, _ScreenParams, unity_CameraWorldClipPlanes );
					#endif
					o.edge[0] = tf.x; o.edge[1] = tf.y; o.edge[2] = tf.z; o.inside = tf.w;
					return o;
				}

				[domain("tri")]
				[partitioning("fractional_odd")]
				[outputtopology("triangle_cw")]
				[patchconstantfunc("TessellationFunction")]
				[outputcontrolpoints(3)]
				VertexControl HullFunction(InputPatch<VertexControl, 3> patch, uint id : SV_OutputControlPointID)
				{
				   return patch[id];
				}

				[domain("tri")]
				v2f DomainFunction(TessellationFactors factors, OutputPatch<VertexControl, 3> patch, float3 bary : SV_DomainLocation)
				{
					appdata o = (appdata) 0;
					o.vertex = patch[0].vertex * bary.x + patch[1].vertex * bary.y + patch[2].vertex * bary.z;
					o.tangent = patch[0].tangent * bary.x + patch[1].tangent * bary.y + patch[2].tangent * bary.z;
					o.normal = patch[0].normal * bary.x + patch[1].normal * bary.y + patch[2].normal * bary.z;
					o.texcoord1 = patch[0].texcoord1 * bary.x + patch[1].texcoord1 * bary.y + patch[2].texcoord1 * bary.z;
					o.texcoord2 = patch[0].texcoord2 * bary.x + patch[1].texcoord2 * bary.y + patch[2].texcoord2 * bary.z;
					o.ase_color = patch[0].ase_color * bary.x + patch[1].ase_color * bary.y + patch[2].ase_color * bary.z;
					o.ase_texcoord = patch[0].ase_texcoord * bary.x + patch[1].ase_texcoord * bary.y + patch[2].ase_texcoord * bary.z;
					#if defined(ASE_PHONG_TESSELLATION)
					float3 pp[3];
					for (int i = 0; i < 3; ++i)
						pp[i] = o.vertex.xyz - patch[i].normal * (dot(o.vertex.xyz, patch[i].normal) - dot(patch[i].vertex.xyz, patch[i].normal));
					float phongStrength = _TessPhongStrength;
					o.vertex.xyz = phongStrength * (pp[0]*bary.x + pp[1]*bary.y + pp[2]*bary.z) + (1.0f-phongStrength) * o.vertex.xyz;
					#endif
					UNITY_TRANSFER_INSTANCE_ID(patch[0], o);
					return VertexFunction(o);
				}
				#else
				v2f vert( appdata v )
				{
					return VertexFunction( v );
				}
				#endif

				half4 frag( v2f IN 
					#if defined( ASE_DEPTH_WRITE_ON )
					, out float outputDepth : SV_Depth
					#endif
					#if !defined( CAN_SKIP_VPOS )
					, UNITY_VPOS_TYPE vpos : VPOS
					#endif
					) : SV_Target
				{
					UNITY_SETUP_INSTANCE_ID(IN);

					#ifdef LOD_FADE_CROSSFADE
						UNITY_APPLY_DITHER_CROSSFADE(IN.pos.xy);
					#endif

					#if defined(ASE_LIGHTING_SIMPLE)
						SurfaceOutput o = (SurfaceOutput)0;
					#else
						#if defined(_SPECULAR_SETUP)
							SurfaceOutputStandardSpecular o = (SurfaceOutputStandardSpecular)0;
						#else
							SurfaceOutputStandard o = (SurfaceOutputStandard)0;
						#endif
					#endif

					float localCustomAlphaClip20_g129100 = ( 0.0 );
					float localBreakData4_g129098 = ( 0.0 );
					float localCompData3_g129056 = ( 0.0 );
					TVEVisualData Data3_g129056 = (TVEVisualData)0;
					half Dummy594_g129055 = ( _CutoutCategory + _CutoutEnd + _CutoutSpace + _CutoutBakeInfo );
					float In_Dummy3_g129056 = Dummy594_g129055;
					float localBreakData4_g129058 = ( 0.0 );
					float localCompData3_g129054 = ( 0.0 );
					TVEVisualData Data3_g129054 = (TVEVisualData)0;
					half Dummy145_g129039 = ( _EmissiveCategory + _EmissiveEnd + ( _EmissivePowerMode + _EmissivePowerValue ) + _EmissiveFlagMode );
					float In_Dummy3_g129054 = Dummy145_g129039;
					float localBreakData4_g129043 = ( 0.0 );
					float localCompData3_g129012 = ( 0.0 );
					TVEVisualData Data3_g129012 = (TVEVisualData)0;
					half Dummy594_g129010 = ( _WetnessCategory + _WetnessEnd + _WetnessBakeInfo );
					float In_Dummy3_g129012 = Dummy594_g129010;
					float localBreakData4_g129011 = ( 0.0 );
					float localCompData3_g128976 = ( 0.0 );
					TVEVisualData Data3_g128976 = (TVEVisualData)0;
					half Dummy594_g128973 = ( _OverlayCategory + _OverlayEnd + _OverlaySpace + _OverlayBakeInfo );
					float In_Dummy3_g128976 = Dummy594_g128973;
					float localBreakData4_g128974 = ( 0.0 );
					float localCompData3_g128952 = ( 0.0 );
					TVEVisualData Data3_g128952 = (TVEVisualData)0;
					half Dummy205_g128949 = ( _DrynessCategory + _DrynessEnd + _DrynessSpace + _DrynessBakeInfo );
					float In_Dummy3_g128952 = Dummy205_g128949;
					float localBreakData4_g128951 = ( 0.0 );
					float localCompData3_g128944 = ( 0.0 );
					TVEVisualData Data3_g128944 = (TVEVisualData)0;
					half Dummy205_g128924 = ( _TintingCategory + _TintingEnd + _TintingSpace + _TintingBakeInfo );
					float In_Dummy3_g128944 = Dummy205_g128924;
					float localBreakData4_g128928 = ( 0.0 );
					float localCompData3_g128923 = ( 0.0 );
					TVEVisualData Data3_g128923 = (TVEVisualData)0;
					half Dummy9163_g128810 = ( _CategoryTerrain + _EndTerrain );
					float In_Dummy3_g128923 = Dummy9163_g128810;
					float localHeightBasedBlending7362_g128811 = ( 0.0 );
					float3 ase_positionWS = IN.ase_texcoord1.xyz;
					float4 appendResult9125_g128811 = (float4(_TerrainPosition.x , _TerrainPosition.z , _TerrainSize.x , _TerrainSize.z));
					float4 temp_output_35_0_g128903 = appendResult9125_g128811;
					float2 InputScale48_g128903 = (temp_output_35_0_g128903).zw;
					half2 FinalScale53_g128903 = ( 1.0 / InputScale48_g128903 );
					float2 InputPosition52_g128903 = (temp_output_35_0_g128903).xy;
					half2 FinalPosition58_g128903 = -( FinalScale53_g128903 * InputPosition52_g128903 );
					float2 temp_output_65_0_g128903 = ( ( (ase_positionWS).xz * FinalScale53_g128903 ) + FinalPosition58_g128903 );
					float4 temp_output_70_0_g128903 = _TerrainControlTex1_TexelSize;
					float2 InputTexelSize68_g128903 = (temp_output_70_0_g128903).zw;
					float2 temp_cast_0 = (1.0).xx;
					float2 InputTexelRecip69_g128903 = (temp_output_70_0_g128903).xy;
					float2 Terrain_Control_UV7873_g128811 = ( ( ( temp_output_65_0_g128903 / ( 1.0 / ( InputTexelSize68_g128903 - temp_cast_0 ) ) ) + 0.5 ) * InputTexelRecip69_g128903 );
					half4 Terrain_Control_047365_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex1, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_047362_g128811 = Terrain_Control_047365_g128811;
					half4 Terrain_Control_087366_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex2, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_087362_g128811 = Terrain_Control_087366_g128811;
					half4 Terrain_Control_127712_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex3, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_127362_g128811 = Terrain_Control_127712_g128811;
					half4 Terrain_Control_167711_g128811 = SAMPLE_TEXTURE2D( _TerrainControlTex4, sampler_Linear_Clamp, Terrain_Control_UV7873_g128811 );
					float4 control_167362_g128811 = Terrain_Control_167711_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128840) = _TerrainShaderTex1;
					float localFilterTexture30_g128901 = ( 0.0 );
					SamplerState SS30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerDefault30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerPoint30_g128901 = sampler_Point_Repeat;
					SamplerState SamplerLow30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerMedium30_g128901 = sampler_Linear_Repeat;
					SamplerState SamplerHigh30_g128901 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS30_g128901 = SamplerDefault30_g128901;
					#if defined (TVE_FILTER_DEFAULT)
					    SS30_g128901 = SamplerDefault30_g128901;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS30_g128901 = SamplerPoint30_g128901;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS30_g128901 = SamplerLow30_g128901;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS30_g128901 = SamplerMedium30_g128901;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS30_g128901 = SamplerHigh30_g128901;
					#endif
					}
					SamplerState Sampler238_g128840 = SS30_g128901;
					half4 Input_Terrain_Coords_016785_g128811 = _TerrainCoord1;
					float4 temp_output_37_0_g128840 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128840 = temp_output_37_0_g128840;
					half3 Input_Position9197_g128811 = ase_positionWS;
					float3 temp_output_279_0_g128840 = Input_Position9197_g128811;
					half3 WorldPosition238_g128840 = temp_output_279_0_g128840;
					half4 localSamplePlanar2D238_g128840 = SamplePlanar2D( Texture238_g128840 , Sampler238_g128840 , Coords238_g128840 , WorldPosition238_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128840) = _TerrainShaderTex1;
					SamplerState Sampler246_g128840 = SS30_g128901;
					half4 Coords246_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition246_g128840 = temp_output_279_0_g128840;
					float3 ase_normalWS = IN.ase_texcoord2.xyz;
					half3 Input_Normal9199_g128811 = ase_normalWS;
					float3 temp_output_280_0_g128840 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128840 = temp_output_280_0_g128840;
					half4 localSamplePlanar3D246_g128840 = SamplePlanar3D( Texture246_g128840 , Sampler246_g128840 , Coords246_g128840 , WorldPosition246_g128840 , WorldNormal246_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128840) = _TerrainShaderTex1;
					SamplerState Sampler234_g128840 = SS30_g128901;
					float4 Coords234_g128840 = temp_output_37_0_g128840;
					float3 WorldPosition234_g128840 = temp_output_279_0_g128840;
					float4 localSampleStochastic2D234_g128840 = SampleStochastic2D( Texture234_g128840 , Sampler234_g128840 , Coords234_g128840 , WorldPosition234_g128840 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128840) = _TerrainShaderTex1;
					SamplerState Sampler263_g128840 = SS30_g128901;
					half4 Coords263_g128840 = temp_output_37_0_g128840;
					half3 WorldPosition263_g128840 = temp_output_279_0_g128840;
					half3 WorldNormal263_g128840 = temp_output_280_0_g128840;
					half4 localSampleStochastic3D263_g128840 = SampleStochastic3D( Texture263_g128840 , Sampler263_g128840 , Coords263_g128840 , WorldPosition263_g128840 , WorldNormal263_g128840 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8639_g128811 = localSamplePlanar3D246_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8639_g128811 = localSampleStochastic2D234_g128840;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8639_g128811 = localSampleStochastic3D263_g128840;
					#else
					float4 staticSwitch8639_g128811 = localSamplePlanar2D238_g128840;
					#endif
					float4 temp_output_7_0_g128905 = _TerrainShaderMin1;
					float4 temp_output_9_0_g128905 = ( staticSwitch8639_g128811 - temp_output_7_0_g128905 );
					float4 temp_output_6970_0_g128811 = saturate( ( ( temp_output_9_0_g128905 * _TerrainShaderRcp1 ) + 0.0001 ) );
					half4 Masks_015_g128816 = temp_output_6970_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128844) = _TerrainShaderTex2;
					SamplerState Sampler238_g128844 = SS30_g128901;
					half4 Input_Terrain_Coords_026787_g128811 = _TerrainCoord2;
					float4 temp_output_37_0_g128844 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128844 = temp_output_37_0_g128844;
					float3 temp_output_279_0_g128844 = Input_Position9197_g128811;
					half3 WorldPosition238_g128844 = temp_output_279_0_g128844;
					half4 localSamplePlanar2D238_g128844 = SamplePlanar2D( Texture238_g128844 , Sampler238_g128844 , Coords238_g128844 , WorldPosition238_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128844) = _TerrainShaderTex2;
					SamplerState Sampler246_g128844 = SS30_g128901;
					half4 Coords246_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition246_g128844 = temp_output_279_0_g128844;
					float3 temp_output_280_0_g128844 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128844 = temp_output_280_0_g128844;
					half4 localSamplePlanar3D246_g128844 = SamplePlanar3D( Texture246_g128844 , Sampler246_g128844 , Coords246_g128844 , WorldPosition246_g128844 , WorldNormal246_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128844) = _TerrainShaderTex2;
					SamplerState Sampler234_g128844 = SS30_g128901;
					float4 Coords234_g128844 = temp_output_37_0_g128844;
					float3 WorldPosition234_g128844 = temp_output_279_0_g128844;
					float4 localSampleStochastic2D234_g128844 = SampleStochastic2D( Texture234_g128844 , Sampler234_g128844 , Coords234_g128844 , WorldPosition234_g128844 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128844) = _TerrainShaderTex2;
					SamplerState Sampler263_g128844 = SS30_g128901;
					half4 Coords263_g128844 = temp_output_37_0_g128844;
					half3 WorldPosition263_g128844 = temp_output_279_0_g128844;
					half3 WorldNormal263_g128844 = temp_output_280_0_g128844;
					half4 localSampleStochastic3D263_g128844 = SampleStochastic3D( Texture263_g128844 , Sampler263_g128844 , Coords263_g128844 , WorldPosition263_g128844 , WorldNormal263_g128844 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8640_g128811 = localSamplePlanar3D246_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8640_g128811 = localSampleStochastic2D234_g128844;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8640_g128811 = localSampleStochastic3D263_g128844;
					#else
					float4 staticSwitch8640_g128811 = localSamplePlanar2D238_g128844;
					#endif
					float4 temp_output_7_0_g128906 = _TerrainShaderMin2;
					float4 temp_output_9_0_g128906 = ( staticSwitch8640_g128811 - temp_output_7_0_g128906 );
					float4 temp_output_6977_0_g128811 = saturate( ( ( temp_output_9_0_g128906 * _TerrainShaderRcp2 ) + 0.0001 ) );
					half4 Masks_0210_g128816 = temp_output_6977_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128849) = _TerrainShaderTex3;
					SamplerState Sampler238_g128849 = SS30_g128901;
					half4 Input_Terrain_Coords_036789_g128811 = _TerrainCoord3;
					float4 temp_output_37_0_g128849 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128849 = temp_output_37_0_g128849;
					float3 temp_output_279_0_g128849 = Input_Position9197_g128811;
					half3 WorldPosition238_g128849 = temp_output_279_0_g128849;
					half4 localSamplePlanar2D238_g128849 = SamplePlanar2D( Texture238_g128849 , Sampler238_g128849 , Coords238_g128849 , WorldPosition238_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128849) = _TerrainShaderTex3;
					SamplerState Sampler246_g128849 = SS30_g128901;
					half4 Coords246_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition246_g128849 = temp_output_279_0_g128849;
					float3 temp_output_280_0_g128849 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128849 = temp_output_280_0_g128849;
					half4 localSamplePlanar3D246_g128849 = SamplePlanar3D( Texture246_g128849 , Sampler246_g128849 , Coords246_g128849 , WorldPosition246_g128849 , WorldNormal246_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128849) = _TerrainShaderTex3;
					SamplerState Sampler234_g128849 = SS30_g128901;
					float4 Coords234_g128849 = temp_output_37_0_g128849;
					float3 WorldPosition234_g128849 = temp_output_279_0_g128849;
					float4 localSampleStochastic2D234_g128849 = SampleStochastic2D( Texture234_g128849 , Sampler234_g128849 , Coords234_g128849 , WorldPosition234_g128849 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128849) = _TerrainShaderTex3;
					SamplerState Sampler263_g128849 = SS30_g128901;
					half4 Coords263_g128849 = temp_output_37_0_g128849;
					half3 WorldPosition263_g128849 = temp_output_279_0_g128849;
					half3 WorldNormal263_g128849 = temp_output_280_0_g128849;
					half4 localSampleStochastic3D263_g128849 = SampleStochastic3D( Texture263_g128849 , Sampler263_g128849 , Coords263_g128849 , WorldPosition263_g128849 , WorldNormal263_g128849 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8641_g128811 = localSamplePlanar3D246_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8641_g128811 = localSampleStochastic2D234_g128849;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8641_g128811 = localSampleStochastic3D263_g128849;
					#else
					float4 staticSwitch8641_g128811 = localSamplePlanar2D238_g128849;
					#endif
					float4 temp_output_7_0_g128907 = _TerrainShaderMin3;
					float4 temp_output_9_0_g128907 = ( staticSwitch8641_g128811 - temp_output_7_0_g128907 );
					float4 temp_output_6978_0_g128811 = saturate( ( ( temp_output_9_0_g128907 * _TerrainShaderRcp3 ) + 0.0001 ) );
					half4 Masks_0312_g128816 = temp_output_6978_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128850) = _TerrainShaderTex4;
					SamplerState Sampler238_g128850 = SS30_g128901;
					half4 Input_Terrain_Coords_046791_g128811 = _TerrainCoord4;
					float4 temp_output_37_0_g128850 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128850 = temp_output_37_0_g128850;
					float3 temp_output_279_0_g128850 = Input_Position9197_g128811;
					half3 WorldPosition238_g128850 = temp_output_279_0_g128850;
					half4 localSamplePlanar2D238_g128850 = SamplePlanar2D( Texture238_g128850 , Sampler238_g128850 , Coords238_g128850 , WorldPosition238_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128850) = _TerrainShaderTex4;
					SamplerState Sampler246_g128850 = SS30_g128901;
					half4 Coords246_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition246_g128850 = temp_output_279_0_g128850;
					float3 temp_output_280_0_g128850 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128850 = temp_output_280_0_g128850;
					half4 localSamplePlanar3D246_g128850 = SamplePlanar3D( Texture246_g128850 , Sampler246_g128850 , Coords246_g128850 , WorldPosition246_g128850 , WorldNormal246_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128850) = _TerrainShaderTex4;
					SamplerState Sampler234_g128850 = SS30_g128901;
					float4 Coords234_g128850 = temp_output_37_0_g128850;
					float3 WorldPosition234_g128850 = temp_output_279_0_g128850;
					float4 localSampleStochastic2D234_g128850 = SampleStochastic2D( Texture234_g128850 , Sampler234_g128850 , Coords234_g128850 , WorldPosition234_g128850 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128850) = _TerrainShaderTex4;
					SamplerState Sampler263_g128850 = SS30_g128901;
					half4 Coords263_g128850 = temp_output_37_0_g128850;
					half3 WorldPosition263_g128850 = temp_output_279_0_g128850;
					half3 WorldNormal263_g128850 = temp_output_280_0_g128850;
					half4 localSampleStochastic3D263_g128850 = SampleStochastic3D( Texture263_g128850 , Sampler263_g128850 , Coords263_g128850 , WorldPosition263_g128850 , WorldNormal263_g128850 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8642_g128811 = localSamplePlanar3D246_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8642_g128811 = localSampleStochastic2D234_g128850;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8642_g128811 = localSampleStochastic3D263_g128850;
					#else
					float4 staticSwitch8642_g128811 = localSamplePlanar2D238_g128850;
					#endif
					float4 temp_output_7_0_g128908 = _TerrainShaderMin4;
					float4 temp_output_9_0_g128908 = ( staticSwitch8642_g128811 - temp_output_7_0_g128908 );
					float4 temp_output_6983_0_g128811 = saturate( ( ( temp_output_9_0_g128908 * _TerrainShaderRcp4 ) + 0.0001 ) );
					half4 Masks_0414_g128816 = temp_output_6983_0_g128811;
					float4 appendResult29_g128816 = (float4((Masks_015_g128816).z , (Masks_0210_g128816).z , (Masks_0312_g128816).z , (Masks_0414_g128816).z));
					half4 Control31_g128816 = Terrain_Control_047365_g128811;
					half4 Terrain_Height_047210_g128811 = ( appendResult29_g128816 * Control31_g128816 );
					float4 heights_047362_g128811 = Terrain_Height_047210_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128853) = _TerrainShaderTex5;
					SamplerState Sampler238_g128853 = SS30_g128901;
					half4 Input_Terrain_Coords_058750_g128811 = _TerrainCoord5;
					float4 temp_output_37_0_g128853 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128853 = temp_output_37_0_g128853;
					float3 temp_output_279_0_g128853 = Input_Position9197_g128811;
					half3 WorldPosition238_g128853 = temp_output_279_0_g128853;
					half4 localSamplePlanar2D238_g128853 = SamplePlanar2D( Texture238_g128853 , Sampler238_g128853 , Coords238_g128853 , WorldPosition238_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128853) = _TerrainShaderTex5;
					SamplerState Sampler246_g128853 = SS30_g128901;
					half4 Coords246_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition246_g128853 = temp_output_279_0_g128853;
					float3 temp_output_280_0_g128853 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128853 = temp_output_280_0_g128853;
					half4 localSamplePlanar3D246_g128853 = SamplePlanar3D( Texture246_g128853 , Sampler246_g128853 , Coords246_g128853 , WorldPosition246_g128853 , WorldNormal246_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128853) = _TerrainShaderTex5;
					SamplerState Sampler234_g128853 = SS30_g128901;
					float4 Coords234_g128853 = temp_output_37_0_g128853;
					float3 WorldPosition234_g128853 = temp_output_279_0_g128853;
					float4 localSampleStochastic2D234_g128853 = SampleStochastic2D( Texture234_g128853 , Sampler234_g128853 , Coords234_g128853 , WorldPosition234_g128853 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128853) = _TerrainShaderTex5;
					SamplerState Sampler263_g128853 = SS30_g128901;
					half4 Coords263_g128853 = temp_output_37_0_g128853;
					half3 WorldPosition263_g128853 = temp_output_279_0_g128853;
					half3 WorldNormal263_g128853 = temp_output_280_0_g128853;
					half4 localSampleStochastic3D263_g128853 = SampleStochastic3D( Texture263_g128853 , Sampler263_g128853 , Coords263_g128853 , WorldPosition263_g128853 , WorldNormal263_g128853 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8710_g128811 = localSamplePlanar3D246_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8710_g128811 = localSampleStochastic2D234_g128853;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8710_g128811 = localSampleStochastic3D263_g128853;
					#else
					float4 staticSwitch8710_g128811 = localSamplePlanar2D238_g128853;
					#endif
					float4 temp_output_7_0_g128909 = _TerrainShaderMin5;
					float4 temp_output_9_0_g128909 = ( staticSwitch8710_g128811 - temp_output_7_0_g128909 );
					float4 temp_output_8714_0_g128811 = saturate( ( ( temp_output_9_0_g128909 * _TerrainShaderRcp5 ) + 0.0001 ) );
					half4 Masks_015_g128824 = temp_output_8714_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128884) = _TerrainShaderTex6;
					SamplerState Sampler238_g128884 = SS30_g128901;
					half4 Input_Terrain_Coords_068751_g128811 = _TerrainCoord6;
					float4 temp_output_37_0_g128884 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128884 = temp_output_37_0_g128884;
					float3 temp_output_279_0_g128884 = Input_Position9197_g128811;
					half3 WorldPosition238_g128884 = temp_output_279_0_g128884;
					half4 localSamplePlanar2D238_g128884 = SamplePlanar2D( Texture238_g128884 , Sampler238_g128884 , Coords238_g128884 , WorldPosition238_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128884) = _TerrainShaderTex6;
					SamplerState Sampler246_g128884 = SS30_g128901;
					half4 Coords246_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition246_g128884 = temp_output_279_0_g128884;
					float3 temp_output_280_0_g128884 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128884 = temp_output_280_0_g128884;
					half4 localSamplePlanar3D246_g128884 = SamplePlanar3D( Texture246_g128884 , Sampler246_g128884 , Coords246_g128884 , WorldPosition246_g128884 , WorldNormal246_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128884) = _TerrainShaderTex6;
					SamplerState Sampler234_g128884 = SS30_g128901;
					float4 Coords234_g128884 = temp_output_37_0_g128884;
					float3 WorldPosition234_g128884 = temp_output_279_0_g128884;
					float4 localSampleStochastic2D234_g128884 = SampleStochastic2D( Texture234_g128884 , Sampler234_g128884 , Coords234_g128884 , WorldPosition234_g128884 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128884) = _TerrainShaderTex6;
					SamplerState Sampler263_g128884 = SS30_g128901;
					half4 Coords263_g128884 = temp_output_37_0_g128884;
					half3 WorldPosition263_g128884 = temp_output_279_0_g128884;
					half3 WorldNormal263_g128884 = temp_output_280_0_g128884;
					half4 localSampleStochastic3D263_g128884 = SampleStochastic3D( Texture263_g128884 , Sampler263_g128884 , Coords263_g128884 , WorldPosition263_g128884 , WorldNormal263_g128884 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8711_g128811 = localSamplePlanar3D246_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8711_g128811 = localSampleStochastic2D234_g128884;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8711_g128811 = localSampleStochastic3D263_g128884;
					#else
					float4 staticSwitch8711_g128811 = localSamplePlanar2D238_g128884;
					#endif
					float4 temp_output_7_0_g128910 = _TerrainShaderMin6;
					float4 temp_output_9_0_g128910 = ( staticSwitch8711_g128811 - temp_output_7_0_g128910 );
					float4 temp_output_8721_0_g128811 = saturate( ( ( temp_output_9_0_g128910 * _TerrainShaderRcp6 ) + 0.0001 ) );
					half4 Masks_0210_g128824 = temp_output_8721_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128885) = _TerrainShaderTex7;
					SamplerState Sampler238_g128885 = SS30_g128901;
					half4 Input_Terrain_Coords_078752_g128811 = _TerrainCoord7;
					float4 temp_output_37_0_g128885 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128885 = temp_output_37_0_g128885;
					float3 temp_output_279_0_g128885 = Input_Position9197_g128811;
					half3 WorldPosition238_g128885 = temp_output_279_0_g128885;
					half4 localSamplePlanar2D238_g128885 = SamplePlanar2D( Texture238_g128885 , Sampler238_g128885 , Coords238_g128885 , WorldPosition238_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128885) = _TerrainShaderTex7;
					SamplerState Sampler246_g128885 = SS30_g128901;
					half4 Coords246_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition246_g128885 = temp_output_279_0_g128885;
					float3 temp_output_280_0_g128885 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128885 = temp_output_280_0_g128885;
					half4 localSamplePlanar3D246_g128885 = SamplePlanar3D( Texture246_g128885 , Sampler246_g128885 , Coords246_g128885 , WorldPosition246_g128885 , WorldNormal246_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128885) = _TerrainShaderTex7;
					SamplerState Sampler234_g128885 = SS30_g128901;
					float4 Coords234_g128885 = temp_output_37_0_g128885;
					float3 WorldPosition234_g128885 = temp_output_279_0_g128885;
					float4 localSampleStochastic2D234_g128885 = SampleStochastic2D( Texture234_g128885 , Sampler234_g128885 , Coords234_g128885 , WorldPosition234_g128885 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128885) = _TerrainShaderTex7;
					SamplerState Sampler263_g128885 = SS30_g128901;
					half4 Coords263_g128885 = temp_output_37_0_g128885;
					half3 WorldPosition263_g128885 = temp_output_279_0_g128885;
					half3 WorldNormal263_g128885 = temp_output_280_0_g128885;
					half4 localSampleStochastic3D263_g128885 = SampleStochastic3D( Texture263_g128885 , Sampler263_g128885 , Coords263_g128885 , WorldPosition263_g128885 , WorldNormal263_g128885 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8712_g128811 = localSamplePlanar3D246_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8712_g128811 = localSampleStochastic2D234_g128885;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8712_g128811 = localSampleStochastic3D263_g128885;
					#else
					float4 staticSwitch8712_g128811 = localSamplePlanar2D238_g128885;
					#endif
					float4 temp_output_7_0_g128911 = _TerrainShaderMin7;
					float4 temp_output_9_0_g128911 = ( staticSwitch8712_g128811 - temp_output_7_0_g128911 );
					float4 temp_output_8724_0_g128811 = saturate( ( ( temp_output_9_0_g128911 * _TerrainShaderRcp7 ) + 0.0001 ) );
					half4 Masks_0312_g128824 = temp_output_8724_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128886) = _TerrainShaderTex8;
					SamplerState Sampler238_g128886 = SS30_g128901;
					half4 Input_Terrain_Coords_088749_g128811 = _TerrainCoord8;
					float4 temp_output_37_0_g128886 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128886 = temp_output_37_0_g128886;
					float3 temp_output_279_0_g128886 = Input_Position9197_g128811;
					half3 WorldPosition238_g128886 = temp_output_279_0_g128886;
					half4 localSamplePlanar2D238_g128886 = SamplePlanar2D( Texture238_g128886 , Sampler238_g128886 , Coords238_g128886 , WorldPosition238_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128886) = _TerrainShaderTex8;
					SamplerState Sampler246_g128886 = SS30_g128901;
					half4 Coords246_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition246_g128886 = temp_output_279_0_g128886;
					float3 temp_output_280_0_g128886 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128886 = temp_output_280_0_g128886;
					half4 localSamplePlanar3D246_g128886 = SamplePlanar3D( Texture246_g128886 , Sampler246_g128886 , Coords246_g128886 , WorldPosition246_g128886 , WorldNormal246_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128886) = _TerrainShaderTex8;
					SamplerState Sampler234_g128886 = SS30_g128901;
					float4 Coords234_g128886 = temp_output_37_0_g128886;
					float3 WorldPosition234_g128886 = temp_output_279_0_g128886;
					float4 localSampleStochastic2D234_g128886 = SampleStochastic2D( Texture234_g128886 , Sampler234_g128886 , Coords234_g128886 , WorldPosition234_g128886 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128886) = _TerrainShaderTex8;
					SamplerState Sampler263_g128886 = SS30_g128901;
					half4 Coords263_g128886 = temp_output_37_0_g128886;
					half3 WorldPosition263_g128886 = temp_output_279_0_g128886;
					half3 WorldNormal263_g128886 = temp_output_280_0_g128886;
					half4 localSampleStochastic3D263_g128886 = SampleStochastic3D( Texture263_g128886 , Sampler263_g128886 , Coords263_g128886 , WorldPosition263_g128886 , WorldNormal263_g128886 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8713_g128811 = localSamplePlanar3D246_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8713_g128811 = localSampleStochastic2D234_g128886;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8713_g128811 = localSampleStochastic3D263_g128886;
					#else
					float4 staticSwitch8713_g128811 = localSamplePlanar2D238_g128886;
					#endif
					float4 temp_output_7_0_g128912 = _TerrainShaderMin8;
					float4 temp_output_9_0_g128912 = ( staticSwitch8713_g128811 - temp_output_7_0_g128912 );
					float4 temp_output_8727_0_g128811 = saturate( ( ( temp_output_9_0_g128912 * _TerrainShaderRcp8 ) + 0.0001 ) );
					half4 Masks_0414_g128824 = temp_output_8727_0_g128811;
					float4 appendResult29_g128824 = (float4((Masks_015_g128824).z , (Masks_0210_g128824).z , (Masks_0312_g128824).z , (Masks_0414_g128824).z));
					half4 Control31_g128824 = Terrain_Control_087366_g128811;
					half4 Terrain_Height_088731_g128811 = ( appendResult29_g128824 * Control31_g128824 );
					float4 heights_087362_g128811 = Terrain_Height_088731_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128856) = _TerrainShaderTex9;
					SamplerState Sampler238_g128856 = SS30_g128901;
					half4 Input_Terrain_Coords_098833_g128811 = _TerrainCoord9;
					float4 temp_output_37_0_g128856 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128856 = temp_output_37_0_g128856;
					float3 temp_output_279_0_g128856 = Input_Position9197_g128811;
					half3 WorldPosition238_g128856 = temp_output_279_0_g128856;
					half4 localSamplePlanar2D238_g128856 = SamplePlanar2D( Texture238_g128856 , Sampler238_g128856 , Coords238_g128856 , WorldPosition238_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128856) = _TerrainShaderTex9;
					SamplerState Sampler246_g128856 = SS30_g128901;
					half4 Coords246_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition246_g128856 = temp_output_279_0_g128856;
					float3 temp_output_280_0_g128856 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128856 = temp_output_280_0_g128856;
					half4 localSamplePlanar3D246_g128856 = SamplePlanar3D( Texture246_g128856 , Sampler246_g128856 , Coords246_g128856 , WorldPosition246_g128856 , WorldNormal246_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128856) = _TerrainShaderTex9;
					SamplerState Sampler234_g128856 = SS30_g128901;
					float4 Coords234_g128856 = temp_output_37_0_g128856;
					float3 WorldPosition234_g128856 = temp_output_279_0_g128856;
					float4 localSampleStochastic2D234_g128856 = SampleStochastic2D( Texture234_g128856 , Sampler234_g128856 , Coords234_g128856 , WorldPosition234_g128856 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128856) = _TerrainShaderTex9;
					SamplerState Sampler263_g128856 = SS30_g128901;
					half4 Coords263_g128856 = temp_output_37_0_g128856;
					half3 WorldPosition263_g128856 = temp_output_279_0_g128856;
					half3 WorldNormal263_g128856 = temp_output_280_0_g128856;
					half4 localSampleStochastic3D263_g128856 = SampleStochastic3D( Texture263_g128856 , Sampler263_g128856 , Coords263_g128856 , WorldPosition263_g128856 , WorldNormal263_g128856 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8878_g128811 = localSamplePlanar3D246_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8878_g128811 = localSampleStochastic2D234_g128856;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8878_g128811 = localSampleStochastic3D263_g128856;
					#else
					float4 staticSwitch8878_g128811 = localSamplePlanar2D238_g128856;
					#endif
					float4 temp_output_7_0_g128913 = _TerrainShaderMin9;
					float4 temp_output_9_0_g128913 = ( staticSwitch8878_g128811 - temp_output_7_0_g128913 );
					float4 temp_output_8815_0_g128811 = saturate( ( ( temp_output_9_0_g128913 * _TerrainShaderRcp9 ) + 0.0001 ) );
					half4 Masks_015_g128830 = temp_output_8815_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128866) = _TerrainShaderTex10;
					SamplerState Sampler238_g128866 = SS30_g128901;
					half4 Input_Terrain_Coords_108834_g128811 = _TerrainCoord10;
					float4 temp_output_37_0_g128866 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128866 = temp_output_37_0_g128866;
					float3 temp_output_279_0_g128866 = Input_Position9197_g128811;
					half3 WorldPosition238_g128866 = temp_output_279_0_g128866;
					half4 localSamplePlanar2D238_g128866 = SamplePlanar2D( Texture238_g128866 , Sampler238_g128866 , Coords238_g128866 , WorldPosition238_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128866) = _TerrainShaderTex10;
					SamplerState Sampler246_g128866 = SS30_g128901;
					half4 Coords246_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition246_g128866 = temp_output_279_0_g128866;
					float3 temp_output_280_0_g128866 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128866 = temp_output_280_0_g128866;
					half4 localSamplePlanar3D246_g128866 = SamplePlanar3D( Texture246_g128866 , Sampler246_g128866 , Coords246_g128866 , WorldPosition246_g128866 , WorldNormal246_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128866) = _TerrainShaderTex10;
					SamplerState Sampler234_g128866 = SS30_g128901;
					float4 Coords234_g128866 = temp_output_37_0_g128866;
					float3 WorldPosition234_g128866 = temp_output_279_0_g128866;
					float4 localSampleStochastic2D234_g128866 = SampleStochastic2D( Texture234_g128866 , Sampler234_g128866 , Coords234_g128866 , WorldPosition234_g128866 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128866) = _TerrainShaderTex10;
					SamplerState Sampler263_g128866 = SS30_g128901;
					half4 Coords263_g128866 = temp_output_37_0_g128866;
					half3 WorldPosition263_g128866 = temp_output_279_0_g128866;
					half3 WorldNormal263_g128866 = temp_output_280_0_g128866;
					half4 localSampleStochastic3D263_g128866 = SampleStochastic3D( Texture263_g128866 , Sampler263_g128866 , Coords263_g128866 , WorldPosition263_g128866 , WorldNormal263_g128866 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8860_g128811 = localSamplePlanar3D246_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8860_g128811 = localSampleStochastic2D234_g128866;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8860_g128811 = localSampleStochastic3D263_g128866;
					#else
					float4 staticSwitch8860_g128811 = localSamplePlanar2D238_g128866;
					#endif
					float4 temp_output_7_0_g128914 = _TerrainShaderMin10;
					float4 temp_output_9_0_g128914 = ( staticSwitch8860_g128811 - temp_output_7_0_g128914 );
					float4 temp_output_8818_0_g128811 = saturate( ( ( temp_output_9_0_g128914 * _TerrainShaderRcp10 ) + 0.0001 ) );
					half4 Masks_0210_g128830 = temp_output_8818_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128867) = _TerrainShaderTex11;
					SamplerState Sampler238_g128867 = SS30_g128901;
					half4 Input_Terrain_Coords_118835_g128811 = _TerrainCoord11;
					float4 temp_output_37_0_g128867 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128867 = temp_output_37_0_g128867;
					float3 temp_output_279_0_g128867 = Input_Position9197_g128811;
					half3 WorldPosition238_g128867 = temp_output_279_0_g128867;
					half4 localSamplePlanar2D238_g128867 = SamplePlanar2D( Texture238_g128867 , Sampler238_g128867 , Coords238_g128867 , WorldPosition238_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128867) = _TerrainShaderTex11;
					SamplerState Sampler246_g128867 = SS30_g128901;
					half4 Coords246_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition246_g128867 = temp_output_279_0_g128867;
					float3 temp_output_280_0_g128867 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128867 = temp_output_280_0_g128867;
					half4 localSamplePlanar3D246_g128867 = SamplePlanar3D( Texture246_g128867 , Sampler246_g128867 , Coords246_g128867 , WorldPosition246_g128867 , WorldNormal246_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128867) = _TerrainShaderTex11;
					SamplerState Sampler234_g128867 = SS30_g128901;
					float4 Coords234_g128867 = temp_output_37_0_g128867;
					float3 WorldPosition234_g128867 = temp_output_279_0_g128867;
					float4 localSampleStochastic2D234_g128867 = SampleStochastic2D( Texture234_g128867 , Sampler234_g128867 , Coords234_g128867 , WorldPosition234_g128867 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128867) = _TerrainShaderTex11;
					SamplerState Sampler263_g128867 = SS30_g128901;
					half4 Coords263_g128867 = temp_output_37_0_g128867;
					half3 WorldPosition263_g128867 = temp_output_279_0_g128867;
					half3 WorldNormal263_g128867 = temp_output_280_0_g128867;
					half4 localSampleStochastic3D263_g128867 = SampleStochastic3D( Texture263_g128867 , Sampler263_g128867 , Coords263_g128867 , WorldPosition263_g128867 , WorldNormal263_g128867 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8861_g128811 = localSamplePlanar3D246_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8861_g128811 = localSampleStochastic2D234_g128867;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8861_g128811 = localSampleStochastic3D263_g128867;
					#else
					float4 staticSwitch8861_g128811 = localSamplePlanar2D238_g128867;
					#endif
					float4 temp_output_7_0_g128915 = _TerrainShaderMin11;
					float4 temp_output_9_0_g128915 = ( staticSwitch8861_g128811 - temp_output_7_0_g128915 );
					float4 temp_output_8819_0_g128811 = saturate( ( ( temp_output_9_0_g128915 * _TerrainShaderRcp11 ) + 0.0001 ) );
					half4 Masks_0312_g128830 = temp_output_8819_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128868) = _TerrainShaderTex12;
					SamplerState Sampler238_g128868 = SS30_g128901;
					half4 Input_Terrain_Coords_128836_g128811 = _TerrainCoord12;
					float4 temp_output_37_0_g128868 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128868 = temp_output_37_0_g128868;
					float3 temp_output_279_0_g128868 = Input_Position9197_g128811;
					half3 WorldPosition238_g128868 = temp_output_279_0_g128868;
					half4 localSamplePlanar2D238_g128868 = SamplePlanar2D( Texture238_g128868 , Sampler238_g128868 , Coords238_g128868 , WorldPosition238_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128868) = _TerrainShaderTex12;
					SamplerState Sampler246_g128868 = SS30_g128901;
					half4 Coords246_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition246_g128868 = temp_output_279_0_g128868;
					float3 temp_output_280_0_g128868 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128868 = temp_output_280_0_g128868;
					half4 localSamplePlanar3D246_g128868 = SamplePlanar3D( Texture246_g128868 , Sampler246_g128868 , Coords246_g128868 , WorldPosition246_g128868 , WorldNormal246_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128868) = _TerrainShaderTex12;
					SamplerState Sampler234_g128868 = SS30_g128901;
					float4 Coords234_g128868 = temp_output_37_0_g128868;
					float3 WorldPosition234_g128868 = temp_output_279_0_g128868;
					float4 localSampleStochastic2D234_g128868 = SampleStochastic2D( Texture234_g128868 , Sampler234_g128868 , Coords234_g128868 , WorldPosition234_g128868 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128868) = _TerrainShaderTex12;
					SamplerState Sampler263_g128868 = SS30_g128901;
					half4 Coords263_g128868 = temp_output_37_0_g128868;
					half3 WorldPosition263_g128868 = temp_output_279_0_g128868;
					half3 WorldNormal263_g128868 = temp_output_280_0_g128868;
					half4 localSampleStochastic3D263_g128868 = SampleStochastic3D( Texture263_g128868 , Sampler263_g128868 , Coords263_g128868 , WorldPosition263_g128868 , WorldNormal263_g128868 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8879_g128811 = localSamplePlanar3D246_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8879_g128811 = localSampleStochastic2D234_g128868;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8879_g128811 = localSampleStochastic3D263_g128868;
					#else
					float4 staticSwitch8879_g128811 = localSamplePlanar2D238_g128868;
					#endif
					float4 temp_output_7_0_g128916 = _TerrainShaderMin12;
					float4 temp_output_9_0_g128916 = ( staticSwitch8879_g128811 - temp_output_7_0_g128916 );
					float4 temp_output_8820_0_g128811 = saturate( ( ( temp_output_9_0_g128916 * _TerrainShaderRcp12 ) + 0.0001 ) );
					half4 Masks_0414_g128830 = temp_output_8820_0_g128811;
					float4 appendResult29_g128830 = (float4((Masks_015_g128830).z , (Masks_0210_g128830).z , (Masks_0312_g128830).z , (Masks_0414_g128830).z));
					half4 Control31_g128830 = Terrain_Control_127712_g128811;
					half4 Terrain_Height_128870_g128811 = ( appendResult29_g128830 * Control31_g128830 );
					float4 heights_127362_g128811 = Terrain_Height_128870_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128864) = _TerrainShaderTex13;
					SamplerState Sampler238_g128864 = SS30_g128901;
					half4 Input_Terrain_Coords_138960_g128811 = _TerrainCoord13;
					float4 temp_output_37_0_g128864 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128864 = temp_output_37_0_g128864;
					float3 temp_output_279_0_g128864 = Input_Position9197_g128811;
					half3 WorldPosition238_g128864 = temp_output_279_0_g128864;
					half4 localSamplePlanar2D238_g128864 = SamplePlanar2D( Texture238_g128864 , Sampler238_g128864 , Coords238_g128864 , WorldPosition238_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128864) = _TerrainShaderTex13;
					SamplerState Sampler246_g128864 = SS30_g128901;
					half4 Coords246_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition246_g128864 = temp_output_279_0_g128864;
					float3 temp_output_280_0_g128864 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128864 = temp_output_280_0_g128864;
					half4 localSamplePlanar3D246_g128864 = SamplePlanar3D( Texture246_g128864 , Sampler246_g128864 , Coords246_g128864 , WorldPosition246_g128864 , WorldNormal246_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128864) = _TerrainShaderTex13;
					SamplerState Sampler234_g128864 = SS30_g128901;
					float4 Coords234_g128864 = temp_output_37_0_g128864;
					float3 WorldPosition234_g128864 = temp_output_279_0_g128864;
					float4 localSampleStochastic2D234_g128864 = SampleStochastic2D( Texture234_g128864 , Sampler234_g128864 , Coords234_g128864 , WorldPosition234_g128864 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128864) = _TerrainShaderTex13;
					SamplerState Sampler263_g128864 = SS30_g128901;
					half4 Coords263_g128864 = temp_output_37_0_g128864;
					half3 WorldPosition263_g128864 = temp_output_279_0_g128864;
					half3 WorldNormal263_g128864 = temp_output_280_0_g128864;
					half4 localSampleStochastic3D263_g128864 = SampleStochastic3D( Texture263_g128864 , Sampler263_g128864 , Coords263_g128864 , WorldPosition263_g128864 , WorldNormal263_g128864 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch9000_g128811 = localSamplePlanar3D246_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch9000_g128811 = localSampleStochastic2D234_g128864;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch9000_g128811 = localSampleStochastic3D263_g128864;
					#else
					float4 staticSwitch9000_g128811 = localSamplePlanar2D238_g128864;
					#endif
					float4 temp_output_7_0_g128917 = _TerrainShaderMin13;
					float4 temp_output_9_0_g128917 = ( staticSwitch9000_g128811 - temp_output_7_0_g128917 );
					float4 temp_output_8931_0_g128811 = saturate( ( ( temp_output_9_0_g128917 * _TerrainShaderRcp13 ) + 0.0001 ) );
					half4 Masks_015_g128836 = temp_output_8931_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128875) = _TerrainShaderTex14;
					SamplerState Sampler238_g128875 = SS30_g128901;
					half4 Input_Terrain_Coords_148961_g128811 = _TerrainCoord14;
					float4 temp_output_37_0_g128875 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128875 = temp_output_37_0_g128875;
					float3 temp_output_279_0_g128875 = Input_Position9197_g128811;
					half3 WorldPosition238_g128875 = temp_output_279_0_g128875;
					half4 localSamplePlanar2D238_g128875 = SamplePlanar2D( Texture238_g128875 , Sampler238_g128875 , Coords238_g128875 , WorldPosition238_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128875) = _TerrainShaderTex14;
					SamplerState Sampler246_g128875 = SS30_g128901;
					half4 Coords246_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition246_g128875 = temp_output_279_0_g128875;
					float3 temp_output_280_0_g128875 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128875 = temp_output_280_0_g128875;
					half4 localSamplePlanar3D246_g128875 = SamplePlanar3D( Texture246_g128875 , Sampler246_g128875 , Coords246_g128875 , WorldPosition246_g128875 , WorldNormal246_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128875) = _TerrainShaderTex14;
					SamplerState Sampler234_g128875 = SS30_g128901;
					float4 Coords234_g128875 = temp_output_37_0_g128875;
					float3 WorldPosition234_g128875 = temp_output_279_0_g128875;
					float4 localSampleStochastic2D234_g128875 = SampleStochastic2D( Texture234_g128875 , Sampler234_g128875 , Coords234_g128875 , WorldPosition234_g128875 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128875) = _TerrainShaderTex14;
					SamplerState Sampler263_g128875 = SS30_g128901;
					half4 Coords263_g128875 = temp_output_37_0_g128875;
					half3 WorldPosition263_g128875 = temp_output_279_0_g128875;
					half3 WorldNormal263_g128875 = temp_output_280_0_g128875;
					half4 localSampleStochastic3D263_g128875 = SampleStochastic3D( Texture263_g128875 , Sampler263_g128875 , Coords263_g128875 , WorldPosition263_g128875 , WorldNormal263_g128875 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch9001_g128811 = localSamplePlanar3D246_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch9001_g128811 = localSampleStochastic2D234_g128875;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch9001_g128811 = localSampleStochastic3D263_g128875;
					#else
					float4 staticSwitch9001_g128811 = localSamplePlanar2D238_g128875;
					#endif
					float4 temp_output_7_0_g128918 = _TerrainShaderMin14;
					float4 temp_output_9_0_g128918 = ( staticSwitch9001_g128811 - temp_output_7_0_g128918 );
					float4 temp_output_8934_0_g128811 = saturate( ( ( temp_output_9_0_g128918 * _TerrainShaderRcp14 ) + 0.0001 ) );
					half4 Masks_0210_g128836 = temp_output_8934_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128876) = _TerrainShaderTex15;
					SamplerState Sampler238_g128876 = SS30_g128901;
					half4 Input_Terrain_Coords_158962_g128811 = _TerrainCoord15;
					float4 temp_output_37_0_g128876 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128876 = temp_output_37_0_g128876;
					float3 temp_output_279_0_g128876 = Input_Position9197_g128811;
					half3 WorldPosition238_g128876 = temp_output_279_0_g128876;
					half4 localSamplePlanar2D238_g128876 = SamplePlanar2D( Texture238_g128876 , Sampler238_g128876 , Coords238_g128876 , WorldPosition238_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128876) = _TerrainShaderTex15;
					SamplerState Sampler246_g128876 = SS30_g128901;
					half4 Coords246_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition246_g128876 = temp_output_279_0_g128876;
					float3 temp_output_280_0_g128876 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128876 = temp_output_280_0_g128876;
					half4 localSamplePlanar3D246_g128876 = SamplePlanar3D( Texture246_g128876 , Sampler246_g128876 , Coords246_g128876 , WorldPosition246_g128876 , WorldNormal246_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128876) = _TerrainShaderTex15;
					SamplerState Sampler234_g128876 = SS30_g128901;
					float4 Coords234_g128876 = temp_output_37_0_g128876;
					float3 WorldPosition234_g128876 = temp_output_279_0_g128876;
					float4 localSampleStochastic2D234_g128876 = SampleStochastic2D( Texture234_g128876 , Sampler234_g128876 , Coords234_g128876 , WorldPosition234_g128876 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128876) = _TerrainShaderTex15;
					SamplerState Sampler263_g128876 = SS30_g128901;
					half4 Coords263_g128876 = temp_output_37_0_g128876;
					half3 WorldPosition263_g128876 = temp_output_279_0_g128876;
					half3 WorldNormal263_g128876 = temp_output_280_0_g128876;
					half4 localSampleStochastic3D263_g128876 = SampleStochastic3D( Texture263_g128876 , Sampler263_g128876 , Coords263_g128876 , WorldPosition263_g128876 , WorldNormal263_g128876 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch9002_g128811 = localSamplePlanar3D246_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch9002_g128811 = localSampleStochastic2D234_g128876;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch9002_g128811 = localSampleStochastic3D263_g128876;
					#else
					float4 staticSwitch9002_g128811 = localSamplePlanar2D238_g128876;
					#endif
					float4 temp_output_7_0_g128919 = _TerrainShaderMin15;
					float4 temp_output_9_0_g128919 = ( staticSwitch9002_g128811 - temp_output_7_0_g128919 );
					float4 temp_output_8935_0_g128811 = saturate( ( ( temp_output_9_0_g128919 * _TerrainShaderRcp15 ) + 0.0001 ) );
					half4 Masks_0312_g128836 = temp_output_8935_0_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128877) = _TerrainShaderTex16;
					SamplerState Sampler238_g128877 = SS30_g128901;
					half4 Input_Terrain_Coords_168959_g128811 = _TerrainCoord16;
					float4 temp_output_37_0_g128877 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128877 = temp_output_37_0_g128877;
					float3 temp_output_279_0_g128877 = Input_Position9197_g128811;
					half3 WorldPosition238_g128877 = temp_output_279_0_g128877;
					half4 localSamplePlanar2D238_g128877 = SamplePlanar2D( Texture238_g128877 , Sampler238_g128877 , Coords238_g128877 , WorldPosition238_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128877) = _TerrainShaderTex16;
					SamplerState Sampler246_g128877 = SS30_g128901;
					half4 Coords246_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition246_g128877 = temp_output_279_0_g128877;
					float3 temp_output_280_0_g128877 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128877 = temp_output_280_0_g128877;
					half4 localSamplePlanar3D246_g128877 = SamplePlanar3D( Texture246_g128877 , Sampler246_g128877 , Coords246_g128877 , WorldPosition246_g128877 , WorldNormal246_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128877) = _TerrainShaderTex16;
					SamplerState Sampler234_g128877 = SS30_g128901;
					float4 Coords234_g128877 = temp_output_37_0_g128877;
					float3 WorldPosition234_g128877 = temp_output_279_0_g128877;
					float4 localSampleStochastic2D234_g128877 = SampleStochastic2D( Texture234_g128877 , Sampler234_g128877 , Coords234_g128877 , WorldPosition234_g128877 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128877) = _TerrainShaderTex16;
					SamplerState Sampler263_g128877 = SS30_g128901;
					half4 Coords263_g128877 = temp_output_37_0_g128877;
					half3 WorldPosition263_g128877 = temp_output_279_0_g128877;
					half3 WorldNormal263_g128877 = temp_output_280_0_g128877;
					half4 localSampleStochastic3D263_g128877 = SampleStochastic3D( Texture263_g128877 , Sampler263_g128877 , Coords263_g128877 , WorldPosition263_g128877 , WorldNormal263_g128877 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch9003_g128811 = localSamplePlanar3D246_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch9003_g128811 = localSampleStochastic2D234_g128877;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch9003_g128811 = localSampleStochastic3D263_g128877;
					#else
					float4 staticSwitch9003_g128811 = localSamplePlanar2D238_g128877;
					#endif
					float4 temp_output_7_0_g128920 = _TerrainShaderMin16;
					float4 temp_output_9_0_g128920 = ( staticSwitch9003_g128811 - temp_output_7_0_g128920 );
					float4 temp_output_8936_0_g128811 = saturate( ( ( temp_output_9_0_g128920 * _TerrainShaderRcp16 ) + 0.0001 ) );
					half4 Masks_0414_g128836 = temp_output_8936_0_g128811;
					float4 appendResult29_g128836 = (float4((Masks_015_g128836).z , (Masks_0210_g128836).z , (Masks_0312_g128836).z , (Masks_0414_g128836).z));
					half4 Control31_g128836 = Terrain_Control_167711_g128811;
					half4 Terrain_Height_169015_g128811 = ( appendResult29_g128836 * Control31_g128836 );
					float4 heights_167362_g128811 = Terrain_Height_169015_g128811;
					float heightTransition7362_g128811 = ( 1.0 - _TerrainHeightBlendValue );
					float4 weights_047362_g128811 = float4( 0,0,0,0 );
					float4 weights_087362_g128811 = float4( 0,0,0,0 );
					float4 weights_127362_g128811 = float4( 0,0,0,0 );
					float4 weights_167362_g128811 = float4( 0,0,0,0 );
					{
					//Modified version of the HDRP terrain height based blending
					float maxHeight = 0;
					float4 weightedHeights_04 = float4( 0,0,0,0 );
					float4 weightedHeights_08 = float4( 0,0,0,0 );
					float4 weightedHeights_12 = float4( 0,0,0,0 );
					float4 weightedHeights_16 = float4( 0,0,0,0 );
					maxHeight = heights_047362_g128811.x;
					maxHeight = max(maxHeight, heights_047362_g128811.y);
					maxHeight = max(maxHeight, heights_047362_g128811.z);
					maxHeight = max(maxHeight, heights_047362_g128811.w);
					#ifdef TVE_TERRAIN_08
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_12
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					#endif
					#ifdef TVE_TERRAIN_16
					maxHeight = max(maxHeight, heights_087362_g128811.x);
					maxHeight = max(maxHeight, heights_087362_g128811.y);
					maxHeight = max(maxHeight, heights_087362_g128811.z);
					maxHeight = max(maxHeight, heights_087362_g128811.w);
					maxHeight = max(maxHeight, heights_127362_g128811.x);
					maxHeight = max(maxHeight, heights_127362_g128811.y);
					maxHeight = max(maxHeight, heights_127362_g128811.z);
					maxHeight = max(maxHeight, heights_127362_g128811.w);
					maxHeight = max(maxHeight, heights_167362_g128811.x);
					maxHeight = max(maxHeight, heights_167362_g128811.y);
					maxHeight = max(maxHeight, heights_167362_g128811.z);
					maxHeight = max(maxHeight, heights_167362_g128811.w);
					#endif
					float transition = max(heightTransition7362_g128811, 0.01);
					weightedHeights_04 = float4 ( heights_047362_g128811.x, heights_047362_g128811.y, heights_047362_g128811.z, heights_047362_g128811.w );
					weightedHeights_04 = weightedHeights_04 - maxHeight.xxxx;
					weightedHeights_04 = (max(0, weightedHeights_04 + transition) + 1e-6) * control_047362_g128811;
					#ifdef TVE_TERRAIN_08
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					#endif
					#ifdef TVE_TERRAIN_12
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					#endif
					#ifdef TVE_TERRAIN_16
					weightedHeights_08 = float4 ( heights_087362_g128811.x, heights_087362_g128811.y, heights_087362_g128811.z, heights_087362_g128811.w );
					weightedHeights_08 = weightedHeights_08 - maxHeight.xxxx;
					weightedHeights_08 = (max(0, weightedHeights_08 + transition) + 1e-6) * control_087362_g128811;
					weightedHeights_12 = float4 ( heights_127362_g128811.x, heights_127362_g128811.y, heights_127362_g128811.z, heights_127362_g128811.w );
					weightedHeights_12 = weightedHeights_12 - maxHeight.xxxx;
					weightedHeights_12 = (max(0, weightedHeights_12 + transition) + 1e-6) * control_127362_g128811;
					weightedHeights_16 = float4 ( heights_167362_g128811.x, heights_167362_g128811.y, heights_167362_g128811.z, heights_167362_g128811.w );
					weightedHeights_16 = weightedHeights_16 - maxHeight.xxxx;
					weightedHeights_16 = (max(0, weightedHeights_16 + transition) + 1e-6) * control_167362_g128811;
					#endif
					float sumHeight_04 = weightedHeights_04.x + weightedHeights_04.y + weightedHeights_04.z + weightedHeights_04.w;
					float sumHeight_08 = weightedHeights_08.x + weightedHeights_08.y + weightedHeights_08.z + weightedHeights_08.w;
					float sumHeight_12 = weightedHeights_12.x + weightedHeights_12.y + weightedHeights_12.z + weightedHeights_12.w;
					float sumHeight_16 = weightedHeights_16.x + weightedHeights_16.y + weightedHeights_16.z + weightedHeights_16.w;
					float sumHeight = sumHeight_04 + sumHeight_08 + sumHeight_12 + sumHeight_16;
					weights_047362_g128811 = weightedHeights_04 / sumHeight.xxxx;
					#ifdef TVE_TERRAIN_08
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_12
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					#endif
					#ifdef TVE_TERRAIN_16
					weights_087362_g128811 = weightedHeights_08 / sumHeight.xxxx;
					weights_127362_g128811 = weightedHeights_12 / sumHeight.xxxx;
					weights_167362_g128811 = weightedHeights_16 / sumHeight.xxxx;
					#endif
					}
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8792_g128811 = weights_047362_g128811;
					#else
					float4 staticSwitch8792_g128811 = control_047362_g128811;
					#endif
					half4 Terrain_Weights_046781_g128811 = staticSwitch8792_g128811;
					half4 Weights52_g128815 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128841) = _TerrainAlbedoTex1;
					float localFilterTexture19_g128898 = ( 0.0 );
					SamplerState SS19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128898 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128898 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128898 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128898 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128898 = SamplerDefault19_g128898;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128898 = SamplerDefault19_g128898;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128898 = SamplerPoint19_g128898;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128898 = SamplerLow19_g128898;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128898 = SamplerMedium19_g128898;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128898 = SamplerHigh19_g128898;
					#endif
					}
					SamplerState Sampler238_g128841 = SS19_g128898;
					float4 temp_output_37_0_g128841 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128841 = temp_output_37_0_g128841;
					float3 temp_output_279_0_g128841 = Input_Position9197_g128811;
					half3 WorldPosition238_g128841 = temp_output_279_0_g128841;
					half4 localSamplePlanar2D238_g128841 = SamplePlanar2D( Texture238_g128841 , Sampler238_g128841 , Coords238_g128841 , WorldPosition238_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler246_g128841 = SS19_g128898;
					half4 Coords246_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition246_g128841 = temp_output_279_0_g128841;
					float3 temp_output_280_0_g128841 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128841 = temp_output_280_0_g128841;
					half4 localSamplePlanar3D246_g128841 = SamplePlanar3D( Texture246_g128841 , Sampler246_g128841 , Coords246_g128841 , WorldPosition246_g128841 , WorldNormal246_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler234_g128841 = SS19_g128898;
					float4 Coords234_g128841 = temp_output_37_0_g128841;
					float3 WorldPosition234_g128841 = temp_output_279_0_g128841;
					float4 localSampleStochastic2D234_g128841 = SampleStochastic2D( Texture234_g128841 , Sampler234_g128841 , Coords234_g128841 , WorldPosition234_g128841 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128841) = _TerrainAlbedoTex1;
					SamplerState Sampler263_g128841 = SS19_g128898;
					half4 Coords263_g128841 = temp_output_37_0_g128841;
					half3 WorldPosition263_g128841 = temp_output_279_0_g128841;
					half3 WorldNormal263_g128841 = temp_output_280_0_g128841;
					half4 localSampleStochastic3D263_g128841 = SampleStochastic3D( Texture263_g128841 , Sampler263_g128841 , Coords263_g128841 , WorldPosition263_g128841 , WorldNormal263_g128841 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8614_g128811 = localSamplePlanar3D246_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8614_g128811 = localSampleStochastic2D234_g128841;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8614_g128811 = localSampleStochastic3D263_g128841;
					#else
					float4 staticSwitch8614_g128811 = localSamplePlanar2D238_g128841;
					#endif
					half4 Layer133_g128815 = staticSwitch8614_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler238_g128842 = SS19_g128898;
					float4 temp_output_37_0_g128842 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128842 = temp_output_37_0_g128842;
					float3 temp_output_279_0_g128842 = Input_Position9197_g128811;
					half3 WorldPosition238_g128842 = temp_output_279_0_g128842;
					half4 localSamplePlanar2D238_g128842 = SamplePlanar2D( Texture238_g128842 , Sampler238_g128842 , Coords238_g128842 , WorldPosition238_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler246_g128842 = SS19_g128898;
					half4 Coords246_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition246_g128842 = temp_output_279_0_g128842;
					float3 temp_output_280_0_g128842 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128842 = temp_output_280_0_g128842;
					half4 localSamplePlanar3D246_g128842 = SamplePlanar3D( Texture246_g128842 , Sampler246_g128842 , Coords246_g128842 , WorldPosition246_g128842 , WorldNormal246_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler234_g128842 = SS19_g128898;
					float4 Coords234_g128842 = temp_output_37_0_g128842;
					float3 WorldPosition234_g128842 = temp_output_279_0_g128842;
					float4 localSampleStochastic2D234_g128842 = SampleStochastic2D( Texture234_g128842 , Sampler234_g128842 , Coords234_g128842 , WorldPosition234_g128842 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128842) = _TerrainAlbedoTex2;
					SamplerState Sampler263_g128842 = SS19_g128898;
					half4 Coords263_g128842 = temp_output_37_0_g128842;
					half3 WorldPosition263_g128842 = temp_output_279_0_g128842;
					half3 WorldNormal263_g128842 = temp_output_280_0_g128842;
					half4 localSampleStochastic3D263_g128842 = SampleStochastic3D( Texture263_g128842 , Sampler263_g128842 , Coords263_g128842 , WorldPosition263_g128842 , WorldNormal263_g128842 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8629_g128811 = localSamplePlanar3D246_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8629_g128811 = localSampleStochastic2D234_g128842;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8629_g128811 = localSampleStochastic3D263_g128842;
					#else
					float4 staticSwitch8629_g128811 = localSamplePlanar2D238_g128842;
					#endif
					half4 Layer237_g128815 = staticSwitch8629_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler238_g128845 = SS19_g128898;
					float4 temp_output_37_0_g128845 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128845 = temp_output_37_0_g128845;
					float3 temp_output_279_0_g128845 = Input_Position9197_g128811;
					half3 WorldPosition238_g128845 = temp_output_279_0_g128845;
					half4 localSamplePlanar2D238_g128845 = SamplePlanar2D( Texture238_g128845 , Sampler238_g128845 , Coords238_g128845 , WorldPosition238_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler246_g128845 = SS19_g128898;
					half4 Coords246_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition246_g128845 = temp_output_279_0_g128845;
					float3 temp_output_280_0_g128845 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128845 = temp_output_280_0_g128845;
					half4 localSamplePlanar3D246_g128845 = SamplePlanar3D( Texture246_g128845 , Sampler246_g128845 , Coords246_g128845 , WorldPosition246_g128845 , WorldNormal246_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler234_g128845 = SS19_g128898;
					float4 Coords234_g128845 = temp_output_37_0_g128845;
					float3 WorldPosition234_g128845 = temp_output_279_0_g128845;
					float4 localSampleStochastic2D234_g128845 = SampleStochastic2D( Texture234_g128845 , Sampler234_g128845 , Coords234_g128845 , WorldPosition234_g128845 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128845) = _TerrainAlbedoTex3;
					SamplerState Sampler263_g128845 = SS19_g128898;
					half4 Coords263_g128845 = temp_output_37_0_g128845;
					half3 WorldPosition263_g128845 = temp_output_279_0_g128845;
					half3 WorldNormal263_g128845 = temp_output_280_0_g128845;
					half4 localSampleStochastic3D263_g128845 = SampleStochastic3D( Texture263_g128845 , Sampler263_g128845 , Coords263_g128845 , WorldPosition263_g128845 , WorldNormal263_g128845 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8630_g128811 = localSamplePlanar3D246_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8630_g128811 = localSampleStochastic2D234_g128845;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8630_g128811 = localSampleStochastic3D263_g128845;
					#else
					float4 staticSwitch8630_g128811 = localSamplePlanar2D238_g128845;
					#endif
					half4 Layer338_g128815 = staticSwitch8630_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler238_g128847 = SS19_g128898;
					float4 temp_output_37_0_g128847 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128847 = temp_output_37_0_g128847;
					float3 temp_output_279_0_g128847 = Input_Position9197_g128811;
					half3 WorldPosition238_g128847 = temp_output_279_0_g128847;
					half4 localSamplePlanar2D238_g128847 = SamplePlanar2D( Texture238_g128847 , Sampler238_g128847 , Coords238_g128847 , WorldPosition238_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler246_g128847 = SS19_g128898;
					half4 Coords246_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition246_g128847 = temp_output_279_0_g128847;
					float3 temp_output_280_0_g128847 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128847 = temp_output_280_0_g128847;
					half4 localSamplePlanar3D246_g128847 = SamplePlanar3D( Texture246_g128847 , Sampler246_g128847 , Coords246_g128847 , WorldPosition246_g128847 , WorldNormal246_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler234_g128847 = SS19_g128898;
					float4 Coords234_g128847 = temp_output_37_0_g128847;
					float3 WorldPosition234_g128847 = temp_output_279_0_g128847;
					float4 localSampleStochastic2D234_g128847 = SampleStochastic2D( Texture234_g128847 , Sampler234_g128847 , Coords234_g128847 , WorldPosition234_g128847 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128847) = _TerrainAlbedoTex4;
					SamplerState Sampler263_g128847 = SS19_g128898;
					half4 Coords263_g128847 = temp_output_37_0_g128847;
					half3 WorldPosition263_g128847 = temp_output_279_0_g128847;
					half3 WorldNormal263_g128847 = temp_output_280_0_g128847;
					half4 localSampleStochastic3D263_g128847 = SampleStochastic3D( Texture263_g128847 , Sampler263_g128847 , Coords263_g128847 , WorldPosition263_g128847 , WorldNormal263_g128847 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8631_g128811 = localSamplePlanar3D246_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8631_g128811 = localSampleStochastic2D234_g128847;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8631_g128811 = localSampleStochastic3D263_g128847;
					#else
					float4 staticSwitch8631_g128811 = localSamplePlanar2D238_g128847;
					#endif
					half4 Layer439_g128815 = staticSwitch8631_g128811;
					float4 weightedBlendVar31_g128815 = Weights52_g128815;
					float4 weightedBlend31_g128815 = ( weightedBlendVar31_g128815.x*Layer133_g128815 + weightedBlendVar31_g128815.y*Layer237_g128815 + weightedBlendVar31_g128815.z*Layer338_g128815 + weightedBlendVar31_g128815.w*Layer439_g128815 );
					half4 Terrain_AAAA_047200_g128811 = weightedBlend31_g128815;
					half4 Layer_045_g128818 = Terrain_AAAA_047200_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8793_g128811 = weights_087362_g128811;
					#else
					float4 staticSwitch8793_g128811 = control_087362_g128811;
					#endif
					half4 Terrain_Weights_087340_g128811 = staticSwitch8793_g128811;
					half4 Weights52_g128822 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler238_g128851 = SS19_g128898;
					float4 temp_output_37_0_g128851 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128851 = temp_output_37_0_g128851;
					float3 temp_output_279_0_g128851 = Input_Position9197_g128811;
					half3 WorldPosition238_g128851 = temp_output_279_0_g128851;
					half4 localSamplePlanar2D238_g128851 = SamplePlanar2D( Texture238_g128851 , Sampler238_g128851 , Coords238_g128851 , WorldPosition238_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler246_g128851 = SS19_g128898;
					half4 Coords246_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition246_g128851 = temp_output_279_0_g128851;
					float3 temp_output_280_0_g128851 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128851 = temp_output_280_0_g128851;
					half4 localSamplePlanar3D246_g128851 = SamplePlanar3D( Texture246_g128851 , Sampler246_g128851 , Coords246_g128851 , WorldPosition246_g128851 , WorldNormal246_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler234_g128851 = SS19_g128898;
					float4 Coords234_g128851 = temp_output_37_0_g128851;
					float3 WorldPosition234_g128851 = temp_output_279_0_g128851;
					float4 localSampleStochastic2D234_g128851 = SampleStochastic2D( Texture234_g128851 , Sampler234_g128851 , Coords234_g128851 , WorldPosition234_g128851 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128851) = _TerrainAlbedoTex5;
					SamplerState Sampler263_g128851 = SS19_g128898;
					half4 Coords263_g128851 = temp_output_37_0_g128851;
					half3 WorldPosition263_g128851 = temp_output_279_0_g128851;
					half3 WorldNormal263_g128851 = temp_output_280_0_g128851;
					half4 localSampleStochastic3D263_g128851 = SampleStochastic3D( Texture263_g128851 , Sampler263_g128851 , Coords263_g128851 , WorldPosition263_g128851 , WorldNormal263_g128851 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8690_g128811 = localSamplePlanar3D246_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8690_g128811 = localSampleStochastic2D234_g128851;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8690_g128811 = localSampleStochastic3D263_g128851;
					#else
					float4 staticSwitch8690_g128811 = localSamplePlanar2D238_g128851;
					#endif
					half4 Layer133_g128822 = staticSwitch8690_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler238_g128878 = SS19_g128898;
					float4 temp_output_37_0_g128878 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128878 = temp_output_37_0_g128878;
					float3 temp_output_279_0_g128878 = Input_Position9197_g128811;
					half3 WorldPosition238_g128878 = temp_output_279_0_g128878;
					half4 localSamplePlanar2D238_g128878 = SamplePlanar2D( Texture238_g128878 , Sampler238_g128878 , Coords238_g128878 , WorldPosition238_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler246_g128878 = SS19_g128898;
					half4 Coords246_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition246_g128878 = temp_output_279_0_g128878;
					float3 temp_output_280_0_g128878 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128878 = temp_output_280_0_g128878;
					half4 localSamplePlanar3D246_g128878 = SamplePlanar3D( Texture246_g128878 , Sampler246_g128878 , Coords246_g128878 , WorldPosition246_g128878 , WorldNormal246_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler234_g128878 = SS19_g128898;
					float4 Coords234_g128878 = temp_output_37_0_g128878;
					float3 WorldPosition234_g128878 = temp_output_279_0_g128878;
					float4 localSampleStochastic2D234_g128878 = SampleStochastic2D( Texture234_g128878 , Sampler234_g128878 , Coords234_g128878 , WorldPosition234_g128878 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128878) = _TerrainAlbedoTex6;
					SamplerState Sampler263_g128878 = SS19_g128898;
					half4 Coords263_g128878 = temp_output_37_0_g128878;
					half3 WorldPosition263_g128878 = temp_output_279_0_g128878;
					half3 WorldNormal263_g128878 = temp_output_280_0_g128878;
					half4 localSampleStochastic3D263_g128878 = SampleStochastic3D( Texture263_g128878 , Sampler263_g128878 , Coords263_g128878 , WorldPosition263_g128878 , WorldNormal263_g128878 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8691_g128811 = localSamplePlanar3D246_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8691_g128811 = localSampleStochastic2D234_g128878;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8691_g128811 = localSampleStochastic3D263_g128878;
					#else
					float4 staticSwitch8691_g128811 = localSamplePlanar2D238_g128878;
					#endif
					half4 Layer237_g128822 = staticSwitch8691_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler238_g128879 = SS19_g128898;
					float4 temp_output_37_0_g128879 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128879 = temp_output_37_0_g128879;
					float3 temp_output_279_0_g128879 = Input_Position9197_g128811;
					half3 WorldPosition238_g128879 = temp_output_279_0_g128879;
					half4 localSamplePlanar2D238_g128879 = SamplePlanar2D( Texture238_g128879 , Sampler238_g128879 , Coords238_g128879 , WorldPosition238_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler246_g128879 = SS19_g128898;
					half4 Coords246_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition246_g128879 = temp_output_279_0_g128879;
					float3 temp_output_280_0_g128879 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128879 = temp_output_280_0_g128879;
					half4 localSamplePlanar3D246_g128879 = SamplePlanar3D( Texture246_g128879 , Sampler246_g128879 , Coords246_g128879 , WorldPosition246_g128879 , WorldNormal246_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler234_g128879 = SS19_g128898;
					float4 Coords234_g128879 = temp_output_37_0_g128879;
					float3 WorldPosition234_g128879 = temp_output_279_0_g128879;
					float4 localSampleStochastic2D234_g128879 = SampleStochastic2D( Texture234_g128879 , Sampler234_g128879 , Coords234_g128879 , WorldPosition234_g128879 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128879) = _TerrainAlbedoTex7;
					SamplerState Sampler263_g128879 = SS19_g128898;
					half4 Coords263_g128879 = temp_output_37_0_g128879;
					half3 WorldPosition263_g128879 = temp_output_279_0_g128879;
					half3 WorldNormal263_g128879 = temp_output_280_0_g128879;
					half4 localSampleStochastic3D263_g128879 = SampleStochastic3D( Texture263_g128879 , Sampler263_g128879 , Coords263_g128879 , WorldPosition263_g128879 , WorldNormal263_g128879 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8692_g128811 = localSamplePlanar3D246_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8692_g128811 = localSampleStochastic2D234_g128879;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8692_g128811 = localSampleStochastic3D263_g128879;
					#else
					float4 staticSwitch8692_g128811 = localSamplePlanar2D238_g128879;
					#endif
					half4 Layer338_g128822 = staticSwitch8692_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler238_g128880 = SS19_g128898;
					float4 temp_output_37_0_g128880 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128880 = temp_output_37_0_g128880;
					float3 temp_output_279_0_g128880 = Input_Position9197_g128811;
					half3 WorldPosition238_g128880 = temp_output_279_0_g128880;
					half4 localSamplePlanar2D238_g128880 = SamplePlanar2D( Texture238_g128880 , Sampler238_g128880 , Coords238_g128880 , WorldPosition238_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler246_g128880 = SS19_g128898;
					half4 Coords246_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition246_g128880 = temp_output_279_0_g128880;
					float3 temp_output_280_0_g128880 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128880 = temp_output_280_0_g128880;
					half4 localSamplePlanar3D246_g128880 = SamplePlanar3D( Texture246_g128880 , Sampler246_g128880 , Coords246_g128880 , WorldPosition246_g128880 , WorldNormal246_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler234_g128880 = SS19_g128898;
					float4 Coords234_g128880 = temp_output_37_0_g128880;
					float3 WorldPosition234_g128880 = temp_output_279_0_g128880;
					float4 localSampleStochastic2D234_g128880 = SampleStochastic2D( Texture234_g128880 , Sampler234_g128880 , Coords234_g128880 , WorldPosition234_g128880 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128880) = _TerrainAlbedoTex8;
					SamplerState Sampler263_g128880 = SS19_g128898;
					half4 Coords263_g128880 = temp_output_37_0_g128880;
					half3 WorldPosition263_g128880 = temp_output_279_0_g128880;
					half3 WorldNormal263_g128880 = temp_output_280_0_g128880;
					half4 localSampleStochastic3D263_g128880 = SampleStochastic3D( Texture263_g128880 , Sampler263_g128880 , Coords263_g128880 , WorldPosition263_g128880 , WorldNormal263_g128880 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8693_g128811 = localSamplePlanar3D246_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8693_g128811 = localSampleStochastic2D234_g128880;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8693_g128811 = localSampleStochastic3D263_g128880;
					#else
					float4 staticSwitch8693_g128811 = localSamplePlanar2D238_g128880;
					#endif
					half4 Layer439_g128822 = staticSwitch8693_g128811;
					float4 weightedBlendVar31_g128822 = Weights52_g128822;
					float4 weightedBlend31_g128822 = ( weightedBlendVar31_g128822.x*Layer133_g128822 + weightedBlendVar31_g128822.y*Layer237_g128822 + weightedBlendVar31_g128822.z*Layer338_g128822 + weightedBlendVar31_g128822.w*Layer439_g128822 );
					half4 Terrain_AAAA_088665_g128811 = weightedBlend31_g128822;
					half4 Layer_0810_g128818 = Terrain_AAAA_088665_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8794_g128811 = weights_127362_g128811;
					#else
					float4 staticSwitch8794_g128811 = control_127362_g128811;
					#endif
					half4 Terrain_Weights_127710_g128811 = staticSwitch8794_g128811;
					half4 Weights52_g128828 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler238_g128854 = SS19_g128898;
					float4 temp_output_37_0_g128854 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128854 = temp_output_37_0_g128854;
					float3 temp_output_279_0_g128854 = Input_Position9197_g128811;
					half3 WorldPosition238_g128854 = temp_output_279_0_g128854;
					half4 localSamplePlanar2D238_g128854 = SamplePlanar2D( Texture238_g128854 , Sampler238_g128854 , Coords238_g128854 , WorldPosition238_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler246_g128854 = SS19_g128898;
					half4 Coords246_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition246_g128854 = temp_output_279_0_g128854;
					float3 temp_output_280_0_g128854 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128854 = temp_output_280_0_g128854;
					half4 localSamplePlanar3D246_g128854 = SamplePlanar3D( Texture246_g128854 , Sampler246_g128854 , Coords246_g128854 , WorldPosition246_g128854 , WorldNormal246_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler234_g128854 = SS19_g128898;
					float4 Coords234_g128854 = temp_output_37_0_g128854;
					float3 WorldPosition234_g128854 = temp_output_279_0_g128854;
					float4 localSampleStochastic2D234_g128854 = SampleStochastic2D( Texture234_g128854 , Sampler234_g128854 , Coords234_g128854 , WorldPosition234_g128854 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128854) = _TerrainAlbedoTex9;
					SamplerState Sampler263_g128854 = SS19_g128898;
					half4 Coords263_g128854 = temp_output_37_0_g128854;
					half3 WorldPosition263_g128854 = temp_output_279_0_g128854;
					half3 WorldNormal263_g128854 = temp_output_280_0_g128854;
					half4 localSampleStochastic3D263_g128854 = SampleStochastic3D( Texture263_g128854 , Sampler263_g128854 , Coords263_g128854 , WorldPosition263_g128854 , WorldNormal263_g128854 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8872_g128811 = localSamplePlanar3D246_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8872_g128811 = localSampleStochastic2D234_g128854;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8872_g128811 = localSampleStochastic3D263_g128854;
					#else
					float4 staticSwitch8872_g128811 = localSamplePlanar2D238_g128854;
					#endif
					half4 Layer133_g128828 = staticSwitch8872_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler238_g128857 = SS19_g128898;
					float4 temp_output_37_0_g128857 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128857 = temp_output_37_0_g128857;
					float3 temp_output_279_0_g128857 = Input_Position9197_g128811;
					half3 WorldPosition238_g128857 = temp_output_279_0_g128857;
					half4 localSamplePlanar2D238_g128857 = SamplePlanar2D( Texture238_g128857 , Sampler238_g128857 , Coords238_g128857 , WorldPosition238_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler246_g128857 = SS19_g128898;
					half4 Coords246_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition246_g128857 = temp_output_279_0_g128857;
					float3 temp_output_280_0_g128857 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128857 = temp_output_280_0_g128857;
					half4 localSamplePlanar3D246_g128857 = SamplePlanar3D( Texture246_g128857 , Sampler246_g128857 , Coords246_g128857 , WorldPosition246_g128857 , WorldNormal246_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler234_g128857 = SS19_g128898;
					float4 Coords234_g128857 = temp_output_37_0_g128857;
					float3 WorldPosition234_g128857 = temp_output_279_0_g128857;
					float4 localSampleStochastic2D234_g128857 = SampleStochastic2D( Texture234_g128857 , Sampler234_g128857 , Coords234_g128857 , WorldPosition234_g128857 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128857) = _TerrainAlbedoTex10;
					SamplerState Sampler263_g128857 = SS19_g128898;
					half4 Coords263_g128857 = temp_output_37_0_g128857;
					half3 WorldPosition263_g128857 = temp_output_279_0_g128857;
					half3 WorldNormal263_g128857 = temp_output_280_0_g128857;
					half4 localSampleStochastic3D263_g128857 = SampleStochastic3D( Texture263_g128857 , Sampler263_g128857 , Coords263_g128857 , WorldPosition263_g128857 , WorldNormal263_g128857 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8873_g128811 = localSamplePlanar3D246_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8873_g128811 = localSampleStochastic2D234_g128857;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8873_g128811 = localSampleStochastic3D263_g128857;
					#else
					float4 staticSwitch8873_g128811 = localSamplePlanar2D238_g128857;
					#endif
					half4 Layer237_g128828 = staticSwitch8873_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler238_g128858 = SS19_g128898;
					float4 temp_output_37_0_g128858 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128858 = temp_output_37_0_g128858;
					float3 temp_output_279_0_g128858 = Input_Position9197_g128811;
					half3 WorldPosition238_g128858 = temp_output_279_0_g128858;
					half4 localSamplePlanar2D238_g128858 = SamplePlanar2D( Texture238_g128858 , Sampler238_g128858 , Coords238_g128858 , WorldPosition238_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler246_g128858 = SS19_g128898;
					half4 Coords246_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition246_g128858 = temp_output_279_0_g128858;
					float3 temp_output_280_0_g128858 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128858 = temp_output_280_0_g128858;
					half4 localSamplePlanar3D246_g128858 = SamplePlanar3D( Texture246_g128858 , Sampler246_g128858 , Coords246_g128858 , WorldPosition246_g128858 , WorldNormal246_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler234_g128858 = SS19_g128898;
					float4 Coords234_g128858 = temp_output_37_0_g128858;
					float3 WorldPosition234_g128858 = temp_output_279_0_g128858;
					float4 localSampleStochastic2D234_g128858 = SampleStochastic2D( Texture234_g128858 , Sampler234_g128858 , Coords234_g128858 , WorldPosition234_g128858 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128858) = _TerrainAlbedoTex11;
					SamplerState Sampler263_g128858 = SS19_g128898;
					half4 Coords263_g128858 = temp_output_37_0_g128858;
					half3 WorldPosition263_g128858 = temp_output_279_0_g128858;
					half3 WorldNormal263_g128858 = temp_output_280_0_g128858;
					half4 localSampleStochastic3D263_g128858 = SampleStochastic3D( Texture263_g128858 , Sampler263_g128858 , Coords263_g128858 , WorldPosition263_g128858 , WorldNormal263_g128858 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8874_g128811 = localSamplePlanar3D246_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8874_g128811 = localSampleStochastic2D234_g128858;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8874_g128811 = localSampleStochastic3D263_g128858;
					#else
					float4 staticSwitch8874_g128811 = localSamplePlanar2D238_g128858;
					#endif
					half4 Layer338_g128828 = staticSwitch8874_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler238_g128859 = SS19_g128898;
					float4 temp_output_37_0_g128859 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128859 = temp_output_37_0_g128859;
					float3 temp_output_279_0_g128859 = Input_Position9197_g128811;
					half3 WorldPosition238_g128859 = temp_output_279_0_g128859;
					half4 localSamplePlanar2D238_g128859 = SamplePlanar2D( Texture238_g128859 , Sampler238_g128859 , Coords238_g128859 , WorldPosition238_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler246_g128859 = SS19_g128898;
					half4 Coords246_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition246_g128859 = temp_output_279_0_g128859;
					float3 temp_output_280_0_g128859 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128859 = temp_output_280_0_g128859;
					half4 localSamplePlanar3D246_g128859 = SamplePlanar3D( Texture246_g128859 , Sampler246_g128859 , Coords246_g128859 , WorldPosition246_g128859 , WorldNormal246_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler234_g128859 = SS19_g128898;
					float4 Coords234_g128859 = temp_output_37_0_g128859;
					float3 WorldPosition234_g128859 = temp_output_279_0_g128859;
					float4 localSampleStochastic2D234_g128859 = SampleStochastic2D( Texture234_g128859 , Sampler234_g128859 , Coords234_g128859 , WorldPosition234_g128859 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128859) = _TerrainAlbedoTex12;
					SamplerState Sampler263_g128859 = SS19_g128898;
					half4 Coords263_g128859 = temp_output_37_0_g128859;
					half3 WorldPosition263_g128859 = temp_output_279_0_g128859;
					half3 WorldNormal263_g128859 = temp_output_280_0_g128859;
					half4 localSampleStochastic3D263_g128859 = SampleStochastic3D( Texture263_g128859 , Sampler263_g128859 , Coords263_g128859 , WorldPosition263_g128859 , WorldNormal263_g128859 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8875_g128811 = localSamplePlanar3D246_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8875_g128811 = localSampleStochastic2D234_g128859;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8875_g128811 = localSampleStochastic3D263_g128859;
					#else
					float4 staticSwitch8875_g128811 = localSamplePlanar2D238_g128859;
					#endif
					half4 Layer439_g128828 = staticSwitch8875_g128811;
					float4 weightedBlendVar31_g128828 = Weights52_g128828;
					float4 weightedBlend31_g128828 = ( weightedBlendVar31_g128828.x*Layer133_g128828 + weightedBlendVar31_g128828.y*Layer237_g128828 + weightedBlendVar31_g128828.z*Layer338_g128828 + weightedBlendVar31_g128828.w*Layer439_g128828 );
					half4 Terrain_AAAA_128851_g128811 = weightedBlend31_g128828;
					half4 Layer_1243_g128818 = Terrain_AAAA_128851_g128811;
					#ifdef TVE_TERRAIN_BLEND
					float4 staticSwitch8795_g128811 = weights_167362_g128811;
					#else
					float4 staticSwitch8795_g128811 = control_167362_g128811;
					#endif
					half4 Terrain_Weights_167709_g128811 = staticSwitch8795_g128811;
					half4 Weights52_g128834 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler238_g128863 = SS19_g128898;
					float4 temp_output_37_0_g128863 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128863 = temp_output_37_0_g128863;
					float3 temp_output_279_0_g128863 = Input_Position9197_g128811;
					half3 WorldPosition238_g128863 = temp_output_279_0_g128863;
					half4 localSamplePlanar2D238_g128863 = SamplePlanar2D( Texture238_g128863 , Sampler238_g128863 , Coords238_g128863 , WorldPosition238_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler246_g128863 = SS19_g128898;
					half4 Coords246_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition246_g128863 = temp_output_279_0_g128863;
					float3 temp_output_280_0_g128863 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128863 = temp_output_280_0_g128863;
					half4 localSamplePlanar3D246_g128863 = SamplePlanar3D( Texture246_g128863 , Sampler246_g128863 , Coords246_g128863 , WorldPosition246_g128863 , WorldNormal246_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler234_g128863 = SS19_g128898;
					float4 Coords234_g128863 = temp_output_37_0_g128863;
					float3 WorldPosition234_g128863 = temp_output_279_0_g128863;
					float4 localSampleStochastic2D234_g128863 = SampleStochastic2D( Texture234_g128863 , Sampler234_g128863 , Coords234_g128863 , WorldPosition234_g128863 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128863) = _TerrainAlbedoTex13;
					SamplerState Sampler263_g128863 = SS19_g128898;
					half4 Coords263_g128863 = temp_output_37_0_g128863;
					half3 WorldPosition263_g128863 = temp_output_279_0_g128863;
					half3 WorldNormal263_g128863 = temp_output_280_0_g128863;
					half4 localSampleStochastic3D263_g128863 = SampleStochastic3D( Texture263_g128863 , Sampler263_g128863 , Coords263_g128863 , WorldPosition263_g128863 , WorldNormal263_g128863 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8972_g128811 = localSamplePlanar3D246_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8972_g128811 = localSampleStochastic2D234_g128863;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8972_g128811 = localSampleStochastic3D263_g128863;
					#else
					float4 staticSwitch8972_g128811 = localSamplePlanar2D238_g128863;
					#endif
					half4 Layer133_g128834 = staticSwitch8972_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler238_g128869 = SS19_g128898;
					float4 temp_output_37_0_g128869 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128869 = temp_output_37_0_g128869;
					float3 temp_output_279_0_g128869 = Input_Position9197_g128811;
					half3 WorldPosition238_g128869 = temp_output_279_0_g128869;
					half4 localSamplePlanar2D238_g128869 = SamplePlanar2D( Texture238_g128869 , Sampler238_g128869 , Coords238_g128869 , WorldPosition238_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler246_g128869 = SS19_g128898;
					half4 Coords246_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition246_g128869 = temp_output_279_0_g128869;
					float3 temp_output_280_0_g128869 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128869 = temp_output_280_0_g128869;
					half4 localSamplePlanar3D246_g128869 = SamplePlanar3D( Texture246_g128869 , Sampler246_g128869 , Coords246_g128869 , WorldPosition246_g128869 , WorldNormal246_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler234_g128869 = SS19_g128898;
					float4 Coords234_g128869 = temp_output_37_0_g128869;
					float3 WorldPosition234_g128869 = temp_output_279_0_g128869;
					float4 localSampleStochastic2D234_g128869 = SampleStochastic2D( Texture234_g128869 , Sampler234_g128869 , Coords234_g128869 , WorldPosition234_g128869 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128869) = _TerrainAlbedoTex14;
					SamplerState Sampler263_g128869 = SS19_g128898;
					half4 Coords263_g128869 = temp_output_37_0_g128869;
					half3 WorldPosition263_g128869 = temp_output_279_0_g128869;
					half3 WorldNormal263_g128869 = temp_output_280_0_g128869;
					half4 localSampleStochastic3D263_g128869 = SampleStochastic3D( Texture263_g128869 , Sampler263_g128869 , Coords263_g128869 , WorldPosition263_g128869 , WorldNormal263_g128869 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8973_g128811 = localSamplePlanar3D246_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8973_g128811 = localSampleStochastic2D234_g128869;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8973_g128811 = localSampleStochastic3D263_g128869;
					#else
					float4 staticSwitch8973_g128811 = localSamplePlanar2D238_g128869;
					#endif
					half4 Layer237_g128834 = staticSwitch8973_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler238_g128870 = SS19_g128898;
					float4 temp_output_37_0_g128870 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128870 = temp_output_37_0_g128870;
					float3 temp_output_279_0_g128870 = Input_Position9197_g128811;
					half3 WorldPosition238_g128870 = temp_output_279_0_g128870;
					half4 localSamplePlanar2D238_g128870 = SamplePlanar2D( Texture238_g128870 , Sampler238_g128870 , Coords238_g128870 , WorldPosition238_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler246_g128870 = SS19_g128898;
					half4 Coords246_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition246_g128870 = temp_output_279_0_g128870;
					float3 temp_output_280_0_g128870 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128870 = temp_output_280_0_g128870;
					half4 localSamplePlanar3D246_g128870 = SamplePlanar3D( Texture246_g128870 , Sampler246_g128870 , Coords246_g128870 , WorldPosition246_g128870 , WorldNormal246_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler234_g128870 = SS19_g128898;
					float4 Coords234_g128870 = temp_output_37_0_g128870;
					float3 WorldPosition234_g128870 = temp_output_279_0_g128870;
					float4 localSampleStochastic2D234_g128870 = SampleStochastic2D( Texture234_g128870 , Sampler234_g128870 , Coords234_g128870 , WorldPosition234_g128870 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128870) = _TerrainAlbedoTex15;
					SamplerState Sampler263_g128870 = SS19_g128898;
					half4 Coords263_g128870 = temp_output_37_0_g128870;
					half3 WorldPosition263_g128870 = temp_output_279_0_g128870;
					half3 WorldNormal263_g128870 = temp_output_280_0_g128870;
					half4 localSampleStochastic3D263_g128870 = SampleStochastic3D( Texture263_g128870 , Sampler263_g128870 , Coords263_g128870 , WorldPosition263_g128870 , WorldNormal263_g128870 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8974_g128811 = localSamplePlanar3D246_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8974_g128811 = localSampleStochastic2D234_g128870;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8974_g128811 = localSampleStochastic3D263_g128870;
					#else
					float4 staticSwitch8974_g128811 = localSamplePlanar2D238_g128870;
					#endif
					half4 Layer338_g128834 = staticSwitch8974_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler238_g128871 = SS19_g128898;
					float4 temp_output_37_0_g128871 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128871 = temp_output_37_0_g128871;
					float3 temp_output_279_0_g128871 = Input_Position9197_g128811;
					half3 WorldPosition238_g128871 = temp_output_279_0_g128871;
					half4 localSamplePlanar2D238_g128871 = SamplePlanar2D( Texture238_g128871 , Sampler238_g128871 , Coords238_g128871 , WorldPosition238_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler246_g128871 = SS19_g128898;
					half4 Coords246_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition246_g128871 = temp_output_279_0_g128871;
					float3 temp_output_280_0_g128871 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128871 = temp_output_280_0_g128871;
					half4 localSamplePlanar3D246_g128871 = SamplePlanar3D( Texture246_g128871 , Sampler246_g128871 , Coords246_g128871 , WorldPosition246_g128871 , WorldNormal246_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler234_g128871 = SS19_g128898;
					float4 Coords234_g128871 = temp_output_37_0_g128871;
					float3 WorldPosition234_g128871 = temp_output_279_0_g128871;
					float4 localSampleStochastic2D234_g128871 = SampleStochastic2D( Texture234_g128871 , Sampler234_g128871 , Coords234_g128871 , WorldPosition234_g128871 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128871) = _TerrainAlbedoTex16;
					SamplerState Sampler263_g128871 = SS19_g128898;
					half4 Coords263_g128871 = temp_output_37_0_g128871;
					half3 WorldPosition263_g128871 = temp_output_279_0_g128871;
					half3 WorldNormal263_g128871 = temp_output_280_0_g128871;
					half4 localSampleStochastic3D263_g128871 = SampleStochastic3D( Texture263_g128871 , Sampler263_g128871 , Coords263_g128871 , WorldPosition263_g128871 , WorldNormal263_g128871 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8975_g128811 = localSamplePlanar3D246_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8975_g128811 = localSampleStochastic2D234_g128871;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8975_g128811 = localSampleStochastic3D263_g128871;
					#else
					float4 staticSwitch8975_g128811 = localSamplePlanar2D238_g128871;
					#endif
					half4 Layer439_g128834 = staticSwitch8975_g128811;
					float4 weightedBlendVar31_g128834 = Weights52_g128834;
					float4 weightedBlend31_g128834 = ( weightedBlendVar31_g128834.x*Layer133_g128834 + weightedBlendVar31_g128834.y*Layer237_g128834 + weightedBlendVar31_g128834.z*Layer338_g128834 + weightedBlendVar31_g128834.w*Layer439_g128834 );
					half4 Terrain_AAAA_168986_g128811 = weightedBlend31_g128834;
					half4 Layer_1644_g128818 = Terrain_AAAA_168986_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128818 = ( Layer_045_g128818 + Layer_0810_g128818 + Layer_1243_g128818 + Layer_1644_g128818 );
					#else
					float4 staticSwitch40_g128818 = Layer_045_g128818;
					#endif
					half4 Blend_Albedo7468_g128811 = staticSwitch40_g128818;
					half4 Weights52_g128889 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128889 = _TerrainColor1;
					half4 Layer237_g128889 = _TerrainColor2;
					half4 Layer338_g128889 = _TerrainColor3;
					half4 Layer439_g128889 = _TerrainColor4;
					float4 weightedBlendVar31_g128889 = Weights52_g128889;
					float4 weightedBlend31_g128889 = ( weightedBlendVar31_g128889.x*Layer133_g128889 + weightedBlendVar31_g128889.y*Layer237_g128889 + weightedBlendVar31_g128889.z*Layer338_g128889 + weightedBlendVar31_g128889.w*Layer439_g128889 );
					half4 Terrain_Color_049349_g128811 = weightedBlend31_g128889;
					half4 Layer_045_g128894 = Terrain_Color_049349_g128811;
					half4 Weights52_g128890 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128890 = _TerrainColor5;
					half4 Layer237_g128890 = _TerrainColor6;
					half4 Layer338_g128890 = _TerrainColor7;
					half4 Layer439_g128890 = _TerrainColor8;
					float4 weightedBlendVar31_g128890 = Weights52_g128890;
					float4 weightedBlend31_g128890 = ( weightedBlendVar31_g128890.x*Layer133_g128890 + weightedBlendVar31_g128890.y*Layer237_g128890 + weightedBlendVar31_g128890.z*Layer338_g128890 + weightedBlendVar31_g128890.w*Layer439_g128890 );
					half4 Terrain_Color_089361_g128811 = weightedBlend31_g128890;
					half4 Layer_0810_g128894 = Terrain_Color_089361_g128811;
					half4 Weights52_g128891 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128891 = _TerrainColor9;
					half4 Layer237_g128891 = _TerrainColor10;
					half4 Layer338_g128891 = _TerrainColor11;
					half4 Layer439_g128891 = _TerrainColor12;
					float4 weightedBlendVar31_g128891 = Weights52_g128891;
					float4 weightedBlend31_g128891 = ( weightedBlendVar31_g128891.x*Layer133_g128891 + weightedBlendVar31_g128891.y*Layer237_g128891 + weightedBlendVar31_g128891.z*Layer338_g128891 + weightedBlendVar31_g128891.w*Layer439_g128891 );
					half4 Terrain_Color_129373_g128811 = weightedBlend31_g128891;
					half4 Layer_1243_g128894 = Terrain_Color_129373_g128811;
					half4 Weights52_g128892 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128892 = _TerrainColor13;
					half4 Layer237_g128892 = _TerrainColor14;
					half4 Layer338_g128892 = _TerrainColor15;
					half4 Layer439_g128892 = _TerrainColor16;
					float4 weightedBlendVar31_g128892 = Weights52_g128892;
					float4 weightedBlend31_g128892 = ( weightedBlendVar31_g128892.x*Layer133_g128892 + weightedBlendVar31_g128892.y*Layer237_g128892 + weightedBlendVar31_g128892.z*Layer338_g128892 + weightedBlendVar31_g128892.w*Layer439_g128892 );
					half4 Terrain_Color_169381_g128811 = weightedBlend31_g128892;
					half4 Layer_1644_g128894 = Terrain_Color_169381_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128894 = ( Layer_045_g128894 + Layer_0810_g128894 + Layer_1243_g128894 + Layer_1644_g128894 );
					#else
					float4 staticSwitch40_g128894 = Layer_045_g128894;
					#endif
					half4 Blend_TerrainColor9387_g128811 = staticSwitch40_g128894;
					half3 Final_Albedo9144_g128811 = ( (Blend_Albedo7468_g128811).xyz * (Blend_TerrainColor9387_g128811).rgb * (_TerrainColor).rgb );
					half3 Local_Albedo9199_g128810 = Final_Albedo9144_g128811;
					float3 In_Albedo3_g128923 = Local_Albedo9199_g128810;
					float3 In_AlbedoRaw3_g128923 = Local_Albedo9199_g128810;
					float3 ase_tangentWS = IN.ase_texcoord3.xyz;
					float3 ase_bitangentWS = IN.ase_texcoord4.xyz;
					float3x3 ase_worldToTangent = float3x3( ase_tangentWS, ase_bitangentWS, ase_normalWS );
					half4 Weights52_g128812 = Terrain_Weights_046781_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128887) = _TerrainNormalTex1;
					float localFilterTexture29_g128902 = ( 0.0 );
					SamplerState SS29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128902 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128902 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128902 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128902 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128902 = SamplerDefault29_g128902;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128902 = SamplerDefault29_g128902;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128902 = SamplerPoint29_g128902;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128902 = SamplerLow29_g128902;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128902 = SamplerMedium29_g128902;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128902 = SamplerHigh29_g128902;
					#endif
					}
					SamplerState Sampler238_g128887 = SS29_g128902;
					float4 temp_output_37_0_g128887 = Input_Terrain_Coords_016785_g128811;
					half4 Coords238_g128887 = temp_output_37_0_g128887;
					float3 temp_output_279_0_g128887 = Input_Position9197_g128811;
					half3 WorldPosition238_g128887 = temp_output_279_0_g128887;
					half4 localSamplePlanar2D238_g128887 = SamplePlanar2D( Texture238_g128887 , Sampler238_g128887 , Coords238_g128887 , WorldPosition238_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128887) = _TerrainNormalTex1;
					SamplerState Sampler246_g128887 = SS29_g128902;
					half4 Coords246_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition246_g128887 = temp_output_279_0_g128887;
					float3 temp_output_280_0_g128887 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128887 = temp_output_280_0_g128887;
					half4 localSamplePlanar3D246_g128887 = SamplePlanar3D( Texture246_g128887 , Sampler246_g128887 , Coords246_g128887 , WorldPosition246_g128887 , WorldNormal246_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128887) = _TerrainNormalTex1;
					SamplerState Sampler234_g128887 = SS29_g128902;
					float4 Coords234_g128887 = temp_output_37_0_g128887;
					float3 WorldPosition234_g128887 = temp_output_279_0_g128887;
					float4 localSampleStochastic2D234_g128887 = SampleStochastic2D( Texture234_g128887 , Sampler234_g128887 , Coords234_g128887 , WorldPosition234_g128887 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128887) = _TerrainNormalTex1;
					SamplerState Sampler263_g128887 = SS29_g128902;
					half4 Coords263_g128887 = temp_output_37_0_g128887;
					half3 WorldPosition263_g128887 = temp_output_279_0_g128887;
					half3 WorldNormal263_g128887 = temp_output_280_0_g128887;
					half4 localSampleStochastic3D263_g128887 = SampleStochastic3D( Texture263_g128887 , Sampler263_g128887 , Coords263_g128887 , WorldPosition263_g128887 , WorldNormal263_g128887 );
					#if defined( TVE_TERRAIN_SAMPLE_01_PLANAR_2D )
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_PLANAR_3D )
					float4 staticSwitch8635_g128811 = localSamplePlanar3D246_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_2D )
					float4 staticSwitch8635_g128811 = localSampleStochastic2D234_g128887;
					#elif defined( TVE_TERRAIN_SAMPLE_01_STOCHASTIC_3D )
					float4 staticSwitch8635_g128811 = localSampleStochastic3D263_g128887;
					#else
					float4 staticSwitch8635_g128811 = localSamplePlanar2D238_g128887;
					#endif
					half4 Layer133_g128812 = staticSwitch8635_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128843) = _TerrainNormalTex2;
					SamplerState Sampler238_g128843 = SS29_g128902;
					float4 temp_output_37_0_g128843 = Input_Terrain_Coords_026787_g128811;
					half4 Coords238_g128843 = temp_output_37_0_g128843;
					float3 temp_output_279_0_g128843 = Input_Position9197_g128811;
					half3 WorldPosition238_g128843 = temp_output_279_0_g128843;
					half4 localSamplePlanar2D238_g128843 = SamplePlanar2D( Texture238_g128843 , Sampler238_g128843 , Coords238_g128843 , WorldPosition238_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128843) = _TerrainNormalTex2;
					SamplerState Sampler246_g128843 = SS29_g128902;
					half4 Coords246_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition246_g128843 = temp_output_279_0_g128843;
					float3 temp_output_280_0_g128843 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128843 = temp_output_280_0_g128843;
					half4 localSamplePlanar3D246_g128843 = SamplePlanar3D( Texture246_g128843 , Sampler246_g128843 , Coords246_g128843 , WorldPosition246_g128843 , WorldNormal246_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128843) = _TerrainNormalTex2;
					SamplerState Sampler234_g128843 = SS29_g128902;
					float4 Coords234_g128843 = temp_output_37_0_g128843;
					float3 WorldPosition234_g128843 = temp_output_279_0_g128843;
					float4 localSampleStochastic2D234_g128843 = SampleStochastic2D( Texture234_g128843 , Sampler234_g128843 , Coords234_g128843 , WorldPosition234_g128843 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128843) = _TerrainNormalTex2;
					SamplerState Sampler263_g128843 = SS29_g128902;
					half4 Coords263_g128843 = temp_output_37_0_g128843;
					half3 WorldPosition263_g128843 = temp_output_279_0_g128843;
					half3 WorldNormal263_g128843 = temp_output_280_0_g128843;
					half4 localSampleStochastic3D263_g128843 = SampleStochastic3D( Texture263_g128843 , Sampler263_g128843 , Coords263_g128843 , WorldPosition263_g128843 , WorldNormal263_g128843 );
					#if defined( TVE_TERRAIN_SAMPLE_02_PLANAR_2D )
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_PLANAR_3D )
					float4 staticSwitch8636_g128811 = localSamplePlanar3D246_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_2D )
					float4 staticSwitch8636_g128811 = localSampleStochastic2D234_g128843;
					#elif defined( TVE_TERRAIN_SAMPLE_02_STOCHASTIC_3D )
					float4 staticSwitch8636_g128811 = localSampleStochastic3D263_g128843;
					#else
					float4 staticSwitch8636_g128811 = localSamplePlanar2D238_g128843;
					#endif
					half4 Layer237_g128812 = staticSwitch8636_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128846) = _TerrainNormalTex3;
					SamplerState Sampler238_g128846 = SS29_g128902;
					float4 temp_output_37_0_g128846 = Input_Terrain_Coords_036789_g128811;
					half4 Coords238_g128846 = temp_output_37_0_g128846;
					float3 temp_output_279_0_g128846 = Input_Position9197_g128811;
					half3 WorldPosition238_g128846 = temp_output_279_0_g128846;
					half4 localSamplePlanar2D238_g128846 = SamplePlanar2D( Texture238_g128846 , Sampler238_g128846 , Coords238_g128846 , WorldPosition238_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128846) = _TerrainNormalTex3;
					SamplerState Sampler246_g128846 = SS29_g128902;
					half4 Coords246_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition246_g128846 = temp_output_279_0_g128846;
					float3 temp_output_280_0_g128846 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128846 = temp_output_280_0_g128846;
					half4 localSamplePlanar3D246_g128846 = SamplePlanar3D( Texture246_g128846 , Sampler246_g128846 , Coords246_g128846 , WorldPosition246_g128846 , WorldNormal246_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128846) = _TerrainNormalTex3;
					SamplerState Sampler234_g128846 = SS29_g128902;
					float4 Coords234_g128846 = temp_output_37_0_g128846;
					float3 WorldPosition234_g128846 = temp_output_279_0_g128846;
					float4 localSampleStochastic2D234_g128846 = SampleStochastic2D( Texture234_g128846 , Sampler234_g128846 , Coords234_g128846 , WorldPosition234_g128846 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128846) = _TerrainNormalTex3;
					SamplerState Sampler263_g128846 = SS29_g128902;
					half4 Coords263_g128846 = temp_output_37_0_g128846;
					half3 WorldPosition263_g128846 = temp_output_279_0_g128846;
					half3 WorldNormal263_g128846 = temp_output_280_0_g128846;
					half4 localSampleStochastic3D263_g128846 = SampleStochastic3D( Texture263_g128846 , Sampler263_g128846 , Coords263_g128846 , WorldPosition263_g128846 , WorldNormal263_g128846 );
					#if defined( TVE_TERRAIN_SAMPLE_03_PLANAR_2D )
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_PLANAR_3D )
					float4 staticSwitch8637_g128811 = localSamplePlanar3D246_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_2D )
					float4 staticSwitch8637_g128811 = localSampleStochastic2D234_g128846;
					#elif defined( TVE_TERRAIN_SAMPLE_03_STOCHASTIC_3D )
					float4 staticSwitch8637_g128811 = localSampleStochastic3D263_g128846;
					#else
					float4 staticSwitch8637_g128811 = localSamplePlanar2D238_g128846;
					#endif
					half4 Layer338_g128812 = staticSwitch8637_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128848) = _TerrainNormalTex4;
					SamplerState Sampler238_g128848 = SS29_g128902;
					float4 temp_output_37_0_g128848 = Input_Terrain_Coords_046791_g128811;
					half4 Coords238_g128848 = temp_output_37_0_g128848;
					float3 temp_output_279_0_g128848 = Input_Position9197_g128811;
					half3 WorldPosition238_g128848 = temp_output_279_0_g128848;
					half4 localSamplePlanar2D238_g128848 = SamplePlanar2D( Texture238_g128848 , Sampler238_g128848 , Coords238_g128848 , WorldPosition238_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128848) = _TerrainNormalTex4;
					SamplerState Sampler246_g128848 = SS29_g128902;
					half4 Coords246_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition246_g128848 = temp_output_279_0_g128848;
					float3 temp_output_280_0_g128848 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128848 = temp_output_280_0_g128848;
					half4 localSamplePlanar3D246_g128848 = SamplePlanar3D( Texture246_g128848 , Sampler246_g128848 , Coords246_g128848 , WorldPosition246_g128848 , WorldNormal246_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128848) = _TerrainNormalTex4;
					SamplerState Sampler234_g128848 = SS29_g128902;
					float4 Coords234_g128848 = temp_output_37_0_g128848;
					float3 WorldPosition234_g128848 = temp_output_279_0_g128848;
					float4 localSampleStochastic2D234_g128848 = SampleStochastic2D( Texture234_g128848 , Sampler234_g128848 , Coords234_g128848 , WorldPosition234_g128848 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128848) = _TerrainNormalTex4;
					SamplerState Sampler263_g128848 = SS29_g128902;
					half4 Coords263_g128848 = temp_output_37_0_g128848;
					half3 WorldPosition263_g128848 = temp_output_279_0_g128848;
					half3 WorldNormal263_g128848 = temp_output_280_0_g128848;
					half4 localSampleStochastic3D263_g128848 = SampleStochastic3D( Texture263_g128848 , Sampler263_g128848 , Coords263_g128848 , WorldPosition263_g128848 , WorldNormal263_g128848 );
					#if defined( TVE_TERRAIN_SAMPLE_04_PLANAR_2D )
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_PLANAR_3D )
					float4 staticSwitch8638_g128811 = localSamplePlanar3D246_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_2D )
					float4 staticSwitch8638_g128811 = localSampleStochastic2D234_g128848;
					#elif defined( TVE_TERRAIN_SAMPLE_04_STOCHASTIC_3D )
					float4 staticSwitch8638_g128811 = localSampleStochastic3D263_g128848;
					#else
					float4 staticSwitch8638_g128811 = localSamplePlanar2D238_g128848;
					#endif
					half4 Layer439_g128812 = staticSwitch8638_g128811;
					float4 weightedBlendVar31_g128812 = Weights52_g128812;
					float4 weightedBlend31_g128812 = ( weightedBlendVar31_g128812.x*Layer133_g128812 + weightedBlendVar31_g128812.y*Layer237_g128812 + weightedBlendVar31_g128812.z*Layer338_g128812 + weightedBlendVar31_g128812.w*Layer439_g128812 );
					half4 Terrain_B_047202_g128811 = weightedBlend31_g128812;
					half4 Layer_045_g128817 = Terrain_B_047202_g128811;
					half4 Weights52_g128823 = Terrain_Weights_087340_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128852) = _TerrainNormalTex5;
					SamplerState Sampler238_g128852 = SS29_g128902;
					float4 temp_output_37_0_g128852 = Input_Terrain_Coords_058750_g128811;
					half4 Coords238_g128852 = temp_output_37_0_g128852;
					float3 temp_output_279_0_g128852 = Input_Position9197_g128811;
					half3 WorldPosition238_g128852 = temp_output_279_0_g128852;
					half4 localSamplePlanar2D238_g128852 = SamplePlanar2D( Texture238_g128852 , Sampler238_g128852 , Coords238_g128852 , WorldPosition238_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128852) = _TerrainNormalTex5;
					SamplerState Sampler246_g128852 = SS29_g128902;
					half4 Coords246_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition246_g128852 = temp_output_279_0_g128852;
					float3 temp_output_280_0_g128852 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128852 = temp_output_280_0_g128852;
					half4 localSamplePlanar3D246_g128852 = SamplePlanar3D( Texture246_g128852 , Sampler246_g128852 , Coords246_g128852 , WorldPosition246_g128852 , WorldNormal246_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128852) = _TerrainNormalTex5;
					SamplerState Sampler234_g128852 = SS29_g128902;
					float4 Coords234_g128852 = temp_output_37_0_g128852;
					float3 WorldPosition234_g128852 = temp_output_279_0_g128852;
					float4 localSampleStochastic2D234_g128852 = SampleStochastic2D( Texture234_g128852 , Sampler234_g128852 , Coords234_g128852 , WorldPosition234_g128852 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128852) = _TerrainNormalTex5;
					SamplerState Sampler263_g128852 = SS29_g128902;
					half4 Coords263_g128852 = temp_output_37_0_g128852;
					half3 WorldPosition263_g128852 = temp_output_279_0_g128852;
					half3 WorldNormal263_g128852 = temp_output_280_0_g128852;
					half4 localSampleStochastic3D263_g128852 = SampleStochastic3D( Texture263_g128852 , Sampler263_g128852 , Coords263_g128852 , WorldPosition263_g128852 , WorldNormal263_g128852 );
					#if defined( TVE_TERRAIN_SAMPLE_05_PLANAR_2D )
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_PLANAR_3D )
					float4 staticSwitch8686_g128811 = localSamplePlanar3D246_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_2D )
					float4 staticSwitch8686_g128811 = localSampleStochastic2D234_g128852;
					#elif defined( TVE_TERRAIN_SAMPLE_05_STOCHASTIC_3D )
					float4 staticSwitch8686_g128811 = localSampleStochastic3D263_g128852;
					#else
					float4 staticSwitch8686_g128811 = localSamplePlanar2D238_g128852;
					#endif
					half4 Layer133_g128823 = staticSwitch8686_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128881) = _TerrainNormalTex6;
					SamplerState Sampler238_g128881 = SS29_g128902;
					float4 temp_output_37_0_g128881 = Input_Terrain_Coords_068751_g128811;
					half4 Coords238_g128881 = temp_output_37_0_g128881;
					float3 temp_output_279_0_g128881 = Input_Position9197_g128811;
					half3 WorldPosition238_g128881 = temp_output_279_0_g128881;
					half4 localSamplePlanar2D238_g128881 = SamplePlanar2D( Texture238_g128881 , Sampler238_g128881 , Coords238_g128881 , WorldPosition238_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128881) = _TerrainNormalTex6;
					SamplerState Sampler246_g128881 = SS29_g128902;
					half4 Coords246_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition246_g128881 = temp_output_279_0_g128881;
					float3 temp_output_280_0_g128881 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128881 = temp_output_280_0_g128881;
					half4 localSamplePlanar3D246_g128881 = SamplePlanar3D( Texture246_g128881 , Sampler246_g128881 , Coords246_g128881 , WorldPosition246_g128881 , WorldNormal246_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128881) = _TerrainNormalTex6;
					SamplerState Sampler234_g128881 = SS29_g128902;
					float4 Coords234_g128881 = temp_output_37_0_g128881;
					float3 WorldPosition234_g128881 = temp_output_279_0_g128881;
					float4 localSampleStochastic2D234_g128881 = SampleStochastic2D( Texture234_g128881 , Sampler234_g128881 , Coords234_g128881 , WorldPosition234_g128881 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128881) = _TerrainNormalTex6;
					SamplerState Sampler263_g128881 = SS29_g128902;
					half4 Coords263_g128881 = temp_output_37_0_g128881;
					half3 WorldPosition263_g128881 = temp_output_279_0_g128881;
					half3 WorldNormal263_g128881 = temp_output_280_0_g128881;
					half4 localSampleStochastic3D263_g128881 = SampleStochastic3D( Texture263_g128881 , Sampler263_g128881 , Coords263_g128881 , WorldPosition263_g128881 , WorldNormal263_g128881 );
					#if defined( TVE_TERRAIN_SAMPLE_06_PLANAR_2D )
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_PLANAR_3D )
					float4 staticSwitch8687_g128811 = localSamplePlanar3D246_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_2D )
					float4 staticSwitch8687_g128811 = localSampleStochastic2D234_g128881;
					#elif defined( TVE_TERRAIN_SAMPLE_06_STOCHASTIC_3D )
					float4 staticSwitch8687_g128811 = localSampleStochastic3D263_g128881;
					#else
					float4 staticSwitch8687_g128811 = localSamplePlanar2D238_g128881;
					#endif
					half4 Layer237_g128823 = staticSwitch8687_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128882) = _TerrainNormalTex7;
					SamplerState Sampler238_g128882 = SS29_g128902;
					float4 temp_output_37_0_g128882 = Input_Terrain_Coords_078752_g128811;
					half4 Coords238_g128882 = temp_output_37_0_g128882;
					float3 temp_output_279_0_g128882 = Input_Position9197_g128811;
					half3 WorldPosition238_g128882 = temp_output_279_0_g128882;
					half4 localSamplePlanar2D238_g128882 = SamplePlanar2D( Texture238_g128882 , Sampler238_g128882 , Coords238_g128882 , WorldPosition238_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128882) = _TerrainNormalTex7;
					SamplerState Sampler246_g128882 = SS29_g128902;
					half4 Coords246_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition246_g128882 = temp_output_279_0_g128882;
					float3 temp_output_280_0_g128882 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128882 = temp_output_280_0_g128882;
					half4 localSamplePlanar3D246_g128882 = SamplePlanar3D( Texture246_g128882 , Sampler246_g128882 , Coords246_g128882 , WorldPosition246_g128882 , WorldNormal246_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128882) = _TerrainNormalTex7;
					SamplerState Sampler234_g128882 = SS29_g128902;
					float4 Coords234_g128882 = temp_output_37_0_g128882;
					float3 WorldPosition234_g128882 = temp_output_279_0_g128882;
					float4 localSampleStochastic2D234_g128882 = SampleStochastic2D( Texture234_g128882 , Sampler234_g128882 , Coords234_g128882 , WorldPosition234_g128882 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128882) = _TerrainNormalTex7;
					SamplerState Sampler263_g128882 = SS29_g128902;
					half4 Coords263_g128882 = temp_output_37_0_g128882;
					half3 WorldPosition263_g128882 = temp_output_279_0_g128882;
					half3 WorldNormal263_g128882 = temp_output_280_0_g128882;
					half4 localSampleStochastic3D263_g128882 = SampleStochastic3D( Texture263_g128882 , Sampler263_g128882 , Coords263_g128882 , WorldPosition263_g128882 , WorldNormal263_g128882 );
					#if defined( TVE_TERRAIN_SAMPLE_07_PLANAR_2D )
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_PLANAR_3D )
					float4 staticSwitch8688_g128811 = localSamplePlanar3D246_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_2D )
					float4 staticSwitch8688_g128811 = localSampleStochastic2D234_g128882;
					#elif defined( TVE_TERRAIN_SAMPLE_07_STOCHASTIC_3D )
					float4 staticSwitch8688_g128811 = localSampleStochastic3D263_g128882;
					#else
					float4 staticSwitch8688_g128811 = localSamplePlanar2D238_g128882;
					#endif
					half4 Layer338_g128823 = staticSwitch8688_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128883) = _TerrainNormalTex8;
					SamplerState Sampler238_g128883 = SS29_g128902;
					float4 temp_output_37_0_g128883 = Input_Terrain_Coords_088749_g128811;
					half4 Coords238_g128883 = temp_output_37_0_g128883;
					float3 temp_output_279_0_g128883 = Input_Position9197_g128811;
					half3 WorldPosition238_g128883 = temp_output_279_0_g128883;
					half4 localSamplePlanar2D238_g128883 = SamplePlanar2D( Texture238_g128883 , Sampler238_g128883 , Coords238_g128883 , WorldPosition238_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128883) = _TerrainNormalTex8;
					SamplerState Sampler246_g128883 = SS29_g128902;
					half4 Coords246_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition246_g128883 = temp_output_279_0_g128883;
					float3 temp_output_280_0_g128883 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128883 = temp_output_280_0_g128883;
					half4 localSamplePlanar3D246_g128883 = SamplePlanar3D( Texture246_g128883 , Sampler246_g128883 , Coords246_g128883 , WorldPosition246_g128883 , WorldNormal246_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128883) = _TerrainNormalTex8;
					SamplerState Sampler234_g128883 = SS29_g128902;
					float4 Coords234_g128883 = temp_output_37_0_g128883;
					float3 WorldPosition234_g128883 = temp_output_279_0_g128883;
					float4 localSampleStochastic2D234_g128883 = SampleStochastic2D( Texture234_g128883 , Sampler234_g128883 , Coords234_g128883 , WorldPosition234_g128883 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128883) = _TerrainNormalTex8;
					SamplerState Sampler263_g128883 = SS29_g128902;
					half4 Coords263_g128883 = temp_output_37_0_g128883;
					half3 WorldPosition263_g128883 = temp_output_279_0_g128883;
					half3 WorldNormal263_g128883 = temp_output_280_0_g128883;
					half4 localSampleStochastic3D263_g128883 = SampleStochastic3D( Texture263_g128883 , Sampler263_g128883 , Coords263_g128883 , WorldPosition263_g128883 , WorldNormal263_g128883 );
					#if defined( TVE_TERRAIN_SAMPLE_08_PLANAR_2D )
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_PLANAR_3D )
					float4 staticSwitch8689_g128811 = localSamplePlanar3D246_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_2D )
					float4 staticSwitch8689_g128811 = localSampleStochastic2D234_g128883;
					#elif defined( TVE_TERRAIN_SAMPLE_08_STOCHASTIC_3D )
					float4 staticSwitch8689_g128811 = localSampleStochastic3D263_g128883;
					#else
					float4 staticSwitch8689_g128811 = localSamplePlanar2D238_g128883;
					#endif
					half4 Layer439_g128823 = staticSwitch8689_g128811;
					float4 weightedBlendVar31_g128823 = Weights52_g128823;
					float4 weightedBlend31_g128823 = ( weightedBlendVar31_g128823.x*Layer133_g128823 + weightedBlendVar31_g128823.y*Layer237_g128823 + weightedBlendVar31_g128823.z*Layer338_g128823 + weightedBlendVar31_g128823.w*Layer439_g128823 );
					half4 Terrain_B_088684_g128811 = weightedBlend31_g128823;
					half4 Layer_0810_g128817 = Terrain_B_088684_g128811;
					half4 Weights52_g128829 = Terrain_Weights_127710_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128855) = _TerrainNormalTex9;
					SamplerState Sampler238_g128855 = SS29_g128902;
					float4 temp_output_37_0_g128855 = Input_Terrain_Coords_098833_g128811;
					half4 Coords238_g128855 = temp_output_37_0_g128855;
					float3 temp_output_279_0_g128855 = Input_Position9197_g128811;
					half3 WorldPosition238_g128855 = temp_output_279_0_g128855;
					half4 localSamplePlanar2D238_g128855 = SamplePlanar2D( Texture238_g128855 , Sampler238_g128855 , Coords238_g128855 , WorldPosition238_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128855) = _TerrainNormalTex9;
					SamplerState Sampler246_g128855 = SS29_g128902;
					half4 Coords246_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition246_g128855 = temp_output_279_0_g128855;
					float3 temp_output_280_0_g128855 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128855 = temp_output_280_0_g128855;
					half4 localSamplePlanar3D246_g128855 = SamplePlanar3D( Texture246_g128855 , Sampler246_g128855 , Coords246_g128855 , WorldPosition246_g128855 , WorldNormal246_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128855) = _TerrainNormalTex9;
					SamplerState Sampler234_g128855 = SS29_g128902;
					float4 Coords234_g128855 = temp_output_37_0_g128855;
					float3 WorldPosition234_g128855 = temp_output_279_0_g128855;
					float4 localSampleStochastic2D234_g128855 = SampleStochastic2D( Texture234_g128855 , Sampler234_g128855 , Coords234_g128855 , WorldPosition234_g128855 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128855) = _TerrainNormalTex9;
					SamplerState Sampler263_g128855 = SS29_g128902;
					half4 Coords263_g128855 = temp_output_37_0_g128855;
					half3 WorldPosition263_g128855 = temp_output_279_0_g128855;
					half3 WorldNormal263_g128855 = temp_output_280_0_g128855;
					half4 localSampleStochastic3D263_g128855 = SampleStochastic3D( Texture263_g128855 , Sampler263_g128855 , Coords263_g128855 , WorldPosition263_g128855 , WorldNormal263_g128855 );
					#if defined( TVE_TERRAIN_SAMPLE_09_PLANAR_2D )
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_PLANAR_3D )
					float4 staticSwitch8849_g128811 = localSamplePlanar3D246_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_2D )
					float4 staticSwitch8849_g128811 = localSampleStochastic2D234_g128855;
					#elif defined( TVE_TERRAIN_SAMPLE_09_STOCHASTIC_3D )
					float4 staticSwitch8849_g128811 = localSampleStochastic3D263_g128855;
					#else
					float4 staticSwitch8849_g128811 = localSamplePlanar2D238_g128855;
					#endif
					half4 Layer133_g128829 = staticSwitch8849_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128860) = _TerrainNormalTex10;
					SamplerState Sampler238_g128860 = SS29_g128902;
					float4 temp_output_37_0_g128860 = Input_Terrain_Coords_108834_g128811;
					half4 Coords238_g128860 = temp_output_37_0_g128860;
					float3 temp_output_279_0_g128860 = Input_Position9197_g128811;
					half3 WorldPosition238_g128860 = temp_output_279_0_g128860;
					half4 localSamplePlanar2D238_g128860 = SamplePlanar2D( Texture238_g128860 , Sampler238_g128860 , Coords238_g128860 , WorldPosition238_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128860) = _TerrainNormalTex10;
					SamplerState Sampler246_g128860 = SS29_g128902;
					half4 Coords246_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition246_g128860 = temp_output_279_0_g128860;
					float3 temp_output_280_0_g128860 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128860 = temp_output_280_0_g128860;
					half4 localSamplePlanar3D246_g128860 = SamplePlanar3D( Texture246_g128860 , Sampler246_g128860 , Coords246_g128860 , WorldPosition246_g128860 , WorldNormal246_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128860) = _TerrainNormalTex10;
					SamplerState Sampler234_g128860 = SS29_g128902;
					float4 Coords234_g128860 = temp_output_37_0_g128860;
					float3 WorldPosition234_g128860 = temp_output_279_0_g128860;
					float4 localSampleStochastic2D234_g128860 = SampleStochastic2D( Texture234_g128860 , Sampler234_g128860 , Coords234_g128860 , WorldPosition234_g128860 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128860) = _TerrainNormalTex10;
					SamplerState Sampler263_g128860 = SS29_g128902;
					half4 Coords263_g128860 = temp_output_37_0_g128860;
					half3 WorldPosition263_g128860 = temp_output_279_0_g128860;
					half3 WorldNormal263_g128860 = temp_output_280_0_g128860;
					half4 localSampleStochastic3D263_g128860 = SampleStochastic3D( Texture263_g128860 , Sampler263_g128860 , Coords263_g128860 , WorldPosition263_g128860 , WorldNormal263_g128860 );
					#if defined( TVE_TERRAIN_SAMPLE_10_PLANAR_2D )
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_PLANAR_3D )
					float4 staticSwitch8876_g128811 = localSamplePlanar3D246_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_2D )
					float4 staticSwitch8876_g128811 = localSampleStochastic2D234_g128860;
					#elif defined( TVE_TERRAIN_SAMPLE_10_STOCHASTIC_3D )
					float4 staticSwitch8876_g128811 = localSampleStochastic3D263_g128860;
					#else
					float4 staticSwitch8876_g128811 = localSamplePlanar2D238_g128860;
					#endif
					half4 Layer237_g128829 = staticSwitch8876_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128861) = _TerrainNormalTex11;
					SamplerState Sampler238_g128861 = SS29_g128902;
					float4 temp_output_37_0_g128861 = Input_Terrain_Coords_118835_g128811;
					half4 Coords238_g128861 = temp_output_37_0_g128861;
					float3 temp_output_279_0_g128861 = Input_Position9197_g128811;
					half3 WorldPosition238_g128861 = temp_output_279_0_g128861;
					half4 localSamplePlanar2D238_g128861 = SamplePlanar2D( Texture238_g128861 , Sampler238_g128861 , Coords238_g128861 , WorldPosition238_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128861) = _TerrainNormalTex11;
					SamplerState Sampler246_g128861 = SS29_g128902;
					half4 Coords246_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition246_g128861 = temp_output_279_0_g128861;
					float3 temp_output_280_0_g128861 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128861 = temp_output_280_0_g128861;
					half4 localSamplePlanar3D246_g128861 = SamplePlanar3D( Texture246_g128861 , Sampler246_g128861 , Coords246_g128861 , WorldPosition246_g128861 , WorldNormal246_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128861) = _TerrainNormalTex11;
					SamplerState Sampler234_g128861 = SS29_g128902;
					float4 Coords234_g128861 = temp_output_37_0_g128861;
					float3 WorldPosition234_g128861 = temp_output_279_0_g128861;
					float4 localSampleStochastic2D234_g128861 = SampleStochastic2D( Texture234_g128861 , Sampler234_g128861 , Coords234_g128861 , WorldPosition234_g128861 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128861) = _TerrainNormalTex11;
					SamplerState Sampler263_g128861 = SS29_g128902;
					half4 Coords263_g128861 = temp_output_37_0_g128861;
					half3 WorldPosition263_g128861 = temp_output_279_0_g128861;
					half3 WorldNormal263_g128861 = temp_output_280_0_g128861;
					half4 localSampleStochastic3D263_g128861 = SampleStochastic3D( Texture263_g128861 , Sampler263_g128861 , Coords263_g128861 , WorldPosition263_g128861 , WorldNormal263_g128861 );
					#if defined( TVE_TERRAIN_SAMPLE_11_PLANAR_2D )
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_PLANAR_3D )
					float4 staticSwitch8850_g128811 = localSamplePlanar3D246_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_2D )
					float4 staticSwitch8850_g128811 = localSampleStochastic2D234_g128861;
					#elif defined( TVE_TERRAIN_SAMPLE_11_STOCHASTIC_3D )
					float4 staticSwitch8850_g128811 = localSampleStochastic3D263_g128861;
					#else
					float4 staticSwitch8850_g128811 = localSamplePlanar2D238_g128861;
					#endif
					half4 Layer338_g128829 = staticSwitch8850_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128862) = _TerrainNormalTex12;
					SamplerState Sampler238_g128862 = SS29_g128902;
					float4 temp_output_37_0_g128862 = Input_Terrain_Coords_128836_g128811;
					half4 Coords238_g128862 = temp_output_37_0_g128862;
					float3 temp_output_279_0_g128862 = Input_Position9197_g128811;
					half3 WorldPosition238_g128862 = temp_output_279_0_g128862;
					half4 localSamplePlanar2D238_g128862 = SamplePlanar2D( Texture238_g128862 , Sampler238_g128862 , Coords238_g128862 , WorldPosition238_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128862) = _TerrainNormalTex12;
					SamplerState Sampler246_g128862 = SS29_g128902;
					half4 Coords246_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition246_g128862 = temp_output_279_0_g128862;
					float3 temp_output_280_0_g128862 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128862 = temp_output_280_0_g128862;
					half4 localSamplePlanar3D246_g128862 = SamplePlanar3D( Texture246_g128862 , Sampler246_g128862 , Coords246_g128862 , WorldPosition246_g128862 , WorldNormal246_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128862) = _TerrainNormalTex12;
					SamplerState Sampler234_g128862 = SS29_g128902;
					float4 Coords234_g128862 = temp_output_37_0_g128862;
					float3 WorldPosition234_g128862 = temp_output_279_0_g128862;
					float4 localSampleStochastic2D234_g128862 = SampleStochastic2D( Texture234_g128862 , Sampler234_g128862 , Coords234_g128862 , WorldPosition234_g128862 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128862) = _TerrainNormalTex12;
					SamplerState Sampler263_g128862 = SS29_g128902;
					half4 Coords263_g128862 = temp_output_37_0_g128862;
					half3 WorldPosition263_g128862 = temp_output_279_0_g128862;
					half3 WorldNormal263_g128862 = temp_output_280_0_g128862;
					half4 localSampleStochastic3D263_g128862 = SampleStochastic3D( Texture263_g128862 , Sampler263_g128862 , Coords263_g128862 , WorldPosition263_g128862 , WorldNormal263_g128862 );
					#if defined( TVE_TERRAIN_SAMPLE_12_PLANAR_2D )
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_PLANAR_3D )
					float4 staticSwitch8877_g128811 = localSamplePlanar3D246_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_2D )
					float4 staticSwitch8877_g128811 = localSampleStochastic2D234_g128862;
					#elif defined( TVE_TERRAIN_SAMPLE_12_STOCHASTIC_3D )
					float4 staticSwitch8877_g128811 = localSampleStochastic3D263_g128862;
					#else
					float4 staticSwitch8877_g128811 = localSamplePlanar2D238_g128862;
					#endif
					half4 Layer439_g128829 = staticSwitch8877_g128811;
					float4 weightedBlendVar31_g128829 = Weights52_g128829;
					float4 weightedBlend31_g128829 = ( weightedBlendVar31_g128829.x*Layer133_g128829 + weightedBlendVar31_g128829.y*Layer237_g128829 + weightedBlendVar31_g128829.z*Layer338_g128829 + weightedBlendVar31_g128829.w*Layer439_g128829 );
					half4 Terrain_B_128865_g128811 = weightedBlend31_g128829;
					half4 Layer_1243_g128817 = Terrain_B_128865_g128811;
					half4 Weights52_g128835 = Terrain_Weights_167709_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128865) = _TerrainNormalTex13;
					SamplerState Sampler238_g128865 = SS29_g128902;
					float4 temp_output_37_0_g128865 = Input_Terrain_Coords_138960_g128811;
					half4 Coords238_g128865 = temp_output_37_0_g128865;
					float3 temp_output_279_0_g128865 = Input_Position9197_g128811;
					half3 WorldPosition238_g128865 = temp_output_279_0_g128865;
					half4 localSamplePlanar2D238_g128865 = SamplePlanar2D( Texture238_g128865 , Sampler238_g128865 , Coords238_g128865 , WorldPosition238_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128865) = _TerrainNormalTex13;
					SamplerState Sampler246_g128865 = SS29_g128902;
					half4 Coords246_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition246_g128865 = temp_output_279_0_g128865;
					float3 temp_output_280_0_g128865 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128865 = temp_output_280_0_g128865;
					half4 localSamplePlanar3D246_g128865 = SamplePlanar3D( Texture246_g128865 , Sampler246_g128865 , Coords246_g128865 , WorldPosition246_g128865 , WorldNormal246_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128865) = _TerrainNormalTex13;
					SamplerState Sampler234_g128865 = SS29_g128902;
					float4 Coords234_g128865 = temp_output_37_0_g128865;
					float3 WorldPosition234_g128865 = temp_output_279_0_g128865;
					float4 localSampleStochastic2D234_g128865 = SampleStochastic2D( Texture234_g128865 , Sampler234_g128865 , Coords234_g128865 , WorldPosition234_g128865 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128865) = _TerrainNormalTex13;
					SamplerState Sampler263_g128865 = SS29_g128902;
					half4 Coords263_g128865 = temp_output_37_0_g128865;
					half3 WorldPosition263_g128865 = temp_output_279_0_g128865;
					half3 WorldNormal263_g128865 = temp_output_280_0_g128865;
					half4 localSampleStochastic3D263_g128865 = SampleStochastic3D( Texture263_g128865 , Sampler263_g128865 , Coords263_g128865 , WorldPosition263_g128865 , WorldNormal263_g128865 );
					#if defined( TVE_TERRAIN_SAMPLE_13_PLANAR_2D )
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_PLANAR_3D )
					float4 staticSwitch8991_g128811 = localSamplePlanar3D246_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_2D )
					float4 staticSwitch8991_g128811 = localSampleStochastic2D234_g128865;
					#elif defined( TVE_TERRAIN_SAMPLE_13_STOCHASTIC_3D )
					float4 staticSwitch8991_g128811 = localSampleStochastic3D263_g128865;
					#else
					float4 staticSwitch8991_g128811 = localSamplePlanar2D238_g128865;
					#endif
					half4 Layer133_g128835 = staticSwitch8991_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128872) = _TerrainNormalTex14;
					SamplerState Sampler238_g128872 = SS29_g128902;
					float4 temp_output_37_0_g128872 = Input_Terrain_Coords_148961_g128811;
					half4 Coords238_g128872 = temp_output_37_0_g128872;
					float3 temp_output_279_0_g128872 = Input_Position9197_g128811;
					half3 WorldPosition238_g128872 = temp_output_279_0_g128872;
					half4 localSamplePlanar2D238_g128872 = SamplePlanar2D( Texture238_g128872 , Sampler238_g128872 , Coords238_g128872 , WorldPosition238_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128872) = _TerrainNormalTex14;
					SamplerState Sampler246_g128872 = SS29_g128902;
					half4 Coords246_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition246_g128872 = temp_output_279_0_g128872;
					float3 temp_output_280_0_g128872 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128872 = temp_output_280_0_g128872;
					half4 localSamplePlanar3D246_g128872 = SamplePlanar3D( Texture246_g128872 , Sampler246_g128872 , Coords246_g128872 , WorldPosition246_g128872 , WorldNormal246_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128872) = _TerrainNormalTex14;
					SamplerState Sampler234_g128872 = SS29_g128902;
					float4 Coords234_g128872 = temp_output_37_0_g128872;
					float3 WorldPosition234_g128872 = temp_output_279_0_g128872;
					float4 localSampleStochastic2D234_g128872 = SampleStochastic2D( Texture234_g128872 , Sampler234_g128872 , Coords234_g128872 , WorldPosition234_g128872 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128872) = _TerrainNormalTex14;
					SamplerState Sampler263_g128872 = SS29_g128902;
					half4 Coords263_g128872 = temp_output_37_0_g128872;
					half3 WorldPosition263_g128872 = temp_output_279_0_g128872;
					half3 WorldNormal263_g128872 = temp_output_280_0_g128872;
					half4 localSampleStochastic3D263_g128872 = SampleStochastic3D( Texture263_g128872 , Sampler263_g128872 , Coords263_g128872 , WorldPosition263_g128872 , WorldNormal263_g128872 );
					#if defined( TVE_TERRAIN_SAMPLE_14_PLANAR_2D )
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_PLANAR_3D )
					float4 staticSwitch8990_g128811 = localSamplePlanar3D246_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_2D )
					float4 staticSwitch8990_g128811 = localSampleStochastic2D234_g128872;
					#elif defined( TVE_TERRAIN_SAMPLE_14_STOCHASTIC_3D )
					float4 staticSwitch8990_g128811 = localSampleStochastic3D263_g128872;
					#else
					float4 staticSwitch8990_g128811 = localSamplePlanar2D238_g128872;
					#endif
					half4 Layer237_g128835 = staticSwitch8990_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128873) = _TerrainNormalTex15;
					SamplerState Sampler238_g128873 = SS29_g128902;
					float4 temp_output_37_0_g128873 = Input_Terrain_Coords_158962_g128811;
					half4 Coords238_g128873 = temp_output_37_0_g128873;
					float3 temp_output_279_0_g128873 = Input_Position9197_g128811;
					half3 WorldPosition238_g128873 = temp_output_279_0_g128873;
					half4 localSamplePlanar2D238_g128873 = SamplePlanar2D( Texture238_g128873 , Sampler238_g128873 , Coords238_g128873 , WorldPosition238_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128873) = _TerrainNormalTex15;
					SamplerState Sampler246_g128873 = SS29_g128902;
					half4 Coords246_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition246_g128873 = temp_output_279_0_g128873;
					float3 temp_output_280_0_g128873 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128873 = temp_output_280_0_g128873;
					half4 localSamplePlanar3D246_g128873 = SamplePlanar3D( Texture246_g128873 , Sampler246_g128873 , Coords246_g128873 , WorldPosition246_g128873 , WorldNormal246_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128873) = _TerrainNormalTex15;
					SamplerState Sampler234_g128873 = SS29_g128902;
					float4 Coords234_g128873 = temp_output_37_0_g128873;
					float3 WorldPosition234_g128873 = temp_output_279_0_g128873;
					float4 localSampleStochastic2D234_g128873 = SampleStochastic2D( Texture234_g128873 , Sampler234_g128873 , Coords234_g128873 , WorldPosition234_g128873 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128873) = _TerrainNormalTex15;
					SamplerState Sampler263_g128873 = SS29_g128902;
					half4 Coords263_g128873 = temp_output_37_0_g128873;
					half3 WorldPosition263_g128873 = temp_output_279_0_g128873;
					half3 WorldNormal263_g128873 = temp_output_280_0_g128873;
					half4 localSampleStochastic3D263_g128873 = SampleStochastic3D( Texture263_g128873 , Sampler263_g128873 , Coords263_g128873 , WorldPosition263_g128873 , WorldNormal263_g128873 );
					#if defined( TVE_TERRAIN_SAMPLE_15_PLANAR_2D )
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_PLANAR_3D )
					float4 staticSwitch8989_g128811 = localSamplePlanar3D246_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_2D )
					float4 staticSwitch8989_g128811 = localSampleStochastic2D234_g128873;
					#elif defined( TVE_TERRAIN_SAMPLE_15_STOCHASTIC_3D )
					float4 staticSwitch8989_g128811 = localSampleStochastic3D263_g128873;
					#else
					float4 staticSwitch8989_g128811 = localSamplePlanar2D238_g128873;
					#endif
					half4 Layer338_g128835 = staticSwitch8989_g128811;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128874) = _TerrainNormalTex16;
					SamplerState Sampler238_g128874 = SS29_g128902;
					float4 temp_output_37_0_g128874 = Input_Terrain_Coords_168959_g128811;
					half4 Coords238_g128874 = temp_output_37_0_g128874;
					float3 temp_output_279_0_g128874 = Input_Position9197_g128811;
					half3 WorldPosition238_g128874 = temp_output_279_0_g128874;
					half4 localSamplePlanar2D238_g128874 = SamplePlanar2D( Texture238_g128874 , Sampler238_g128874 , Coords238_g128874 , WorldPosition238_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128874) = _TerrainNormalTex16;
					SamplerState Sampler246_g128874 = SS29_g128902;
					half4 Coords246_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition246_g128874 = temp_output_279_0_g128874;
					float3 temp_output_280_0_g128874 = Input_Normal9199_g128811;
					half3 WorldNormal246_g128874 = temp_output_280_0_g128874;
					half4 localSamplePlanar3D246_g128874 = SamplePlanar3D( Texture246_g128874 , Sampler246_g128874 , Coords246_g128874 , WorldPosition246_g128874 , WorldNormal246_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128874) = _TerrainNormalTex16;
					SamplerState Sampler234_g128874 = SS29_g128902;
					float4 Coords234_g128874 = temp_output_37_0_g128874;
					float3 WorldPosition234_g128874 = temp_output_279_0_g128874;
					float4 localSampleStochastic2D234_g128874 = SampleStochastic2D( Texture234_g128874 , Sampler234_g128874 , Coords234_g128874 , WorldPosition234_g128874 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128874) = _TerrainNormalTex16;
					SamplerState Sampler263_g128874 = SS29_g128902;
					half4 Coords263_g128874 = temp_output_37_0_g128874;
					half3 WorldPosition263_g128874 = temp_output_279_0_g128874;
					half3 WorldNormal263_g128874 = temp_output_280_0_g128874;
					half4 localSampleStochastic3D263_g128874 = SampleStochastic3D( Texture263_g128874 , Sampler263_g128874 , Coords263_g128874 , WorldPosition263_g128874 , WorldNormal263_g128874 );
					#if defined( TVE_TERRAIN_SAMPLE_16_PLANAR_2D )
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_PLANAR_3D )
					float4 staticSwitch8988_g128811 = localSamplePlanar3D246_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_2D )
					float4 staticSwitch8988_g128811 = localSampleStochastic2D234_g128874;
					#elif defined( TVE_TERRAIN_SAMPLE_16_STOCHASTIC_3D )
					float4 staticSwitch8988_g128811 = localSampleStochastic3D263_g128874;
					#else
					float4 staticSwitch8988_g128811 = localSamplePlanar2D238_g128874;
					#endif
					half4 Layer439_g128835 = staticSwitch8988_g128811;
					float4 weightedBlendVar31_g128835 = Weights52_g128835;
					float4 weightedBlend31_g128835 = ( weightedBlendVar31_g128835.x*Layer133_g128835 + weightedBlendVar31_g128835.y*Layer237_g128835 + weightedBlendVar31_g128835.z*Layer338_g128835 + weightedBlendVar31_g128835.w*Layer439_g128835 );
					half4 Terrain_B_168987_g128811 = weightedBlend31_g128835;
					half4 Layer_1644_g128817 = Terrain_B_168987_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128817 = ( Layer_045_g128817 + Layer_0810_g128817 + Layer_1243_g128817 + Layer_1644_g128817 );
					#else
					float4 staticSwitch40_g128817 = Layer_045_g128817;
					#endif
					half4 Blend_Normal7512_g128811 = staticSwitch40_g128817;
					half4 Normal_Packed45_g128896 = Blend_Normal7512_g128811;
					float2 appendResult58_g128896 = (float2(( (Normal_Packed45_g128896).x * (Normal_Packed45_g128896).w ) , (Normal_Packed45_g128896).y));
					half2 Normal_Default50_g128896 = appendResult58_g128896;
					half2 Normal_ASTC41_g128896 = (Normal_Packed45_g128896).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128896 = Normal_ASTC41_g128896;
					#else
					float2 staticSwitch38_g128896 = Normal_Default50_g128896;
					#endif
					half2 Normal_NO_DTX544_g128896 = (Normal_Packed45_g128896).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128896 = Normal_NO_DTX544_g128896;
					#else
					float2 staticSwitch37_g128896 = staticSwitch38_g128896;
					#endif
					half4 Weights52_g128813 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128813 = temp_output_6970_0_g128811;
					half4 Layer237_g128813 = temp_output_6977_0_g128811;
					half4 Layer338_g128813 = temp_output_6978_0_g128811;
					half4 Layer439_g128813 = temp_output_6983_0_g128811;
					float4 weightedBlendVar31_g128813 = Weights52_g128813;
					float4 weightedBlend31_g128813 = ( weightedBlendVar31_g128813.x*Layer133_g128813 + weightedBlendVar31_g128813.y*Layer237_g128813 + weightedBlendVar31_g128813.z*Layer338_g128813 + weightedBlendVar31_g128813.w*Layer439_g128813 );
					half4 Terrain_Shaders_047203_g128811 = weightedBlend31_g128813;
					half4 Layer_045_g128819 = Terrain_Shaders_047203_g128811;
					half4 Weights52_g128825 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128825 = temp_output_8714_0_g128811;
					half4 Layer237_g128825 = temp_output_8721_0_g128811;
					half4 Layer338_g128825 = temp_output_8724_0_g128811;
					half4 Layer439_g128825 = temp_output_8727_0_g128811;
					float4 weightedBlendVar31_g128825 = Weights52_g128825;
					float4 weightedBlend31_g128825 = ( weightedBlendVar31_g128825.x*Layer133_g128825 + weightedBlendVar31_g128825.y*Layer237_g128825 + weightedBlendVar31_g128825.z*Layer338_g128825 + weightedBlendVar31_g128825.w*Layer439_g128825 );
					half4 Terrain_Shaders_088730_g128811 = weightedBlend31_g128825;
					half4 Layer_0810_g128819 = Terrain_Shaders_088730_g128811;
					half4 Weights52_g128831 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128831 = temp_output_8815_0_g128811;
					half4 Layer237_g128831 = temp_output_8818_0_g128811;
					half4 Layer338_g128831 = temp_output_8819_0_g128811;
					half4 Layer439_g128831 = temp_output_8820_0_g128811;
					float4 weightedBlendVar31_g128831 = Weights52_g128831;
					float4 weightedBlend31_g128831 = ( weightedBlendVar31_g128831.x*Layer133_g128831 + weightedBlendVar31_g128831.y*Layer237_g128831 + weightedBlendVar31_g128831.z*Layer338_g128831 + weightedBlendVar31_g128831.w*Layer439_g128831 );
					half4 Terrain_Shaders_128871_g128811 = weightedBlend31_g128831;
					half4 Layer_1243_g128819 = Terrain_Shaders_128871_g128811;
					half4 Weights52_g128837 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128837 = temp_output_8931_0_g128811;
					half4 Layer237_g128837 = temp_output_8934_0_g128811;
					half4 Layer338_g128837 = temp_output_8935_0_g128811;
					half4 Layer439_g128837 = temp_output_8936_0_g128811;
					float4 weightedBlendVar31_g128837 = Weights52_g128837;
					float4 weightedBlend31_g128837 = ( weightedBlendVar31_g128837.x*Layer133_g128837 + weightedBlendVar31_g128837.y*Layer237_g128837 + weightedBlendVar31_g128837.z*Layer338_g128837 + weightedBlendVar31_g128837.w*Layer439_g128837 );
					half4 Terrain_Shaders_169014_g128811 = weightedBlend31_g128837;
					half4 Layer_1644_g128819 = Terrain_Shaders_169014_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128819 = ( Layer_045_g128819 + Layer_0810_g128819 + Layer_1243_g128819 + Layer_1644_g128819 );
					#else
					float4 staticSwitch40_g128819 = Layer_045_g128819;
					#endif
					half4 Blend_Shaders7420_g128811 = staticSwitch40_g128819;
					half4 Normal_Packed45_g128895 = Blend_Shaders7420_g128811;
					half2 Normal_NO_DTX544_g128895 = (Normal_Packed45_g128895).wy;
					#ifdef TVE_TERRAIN_PACKED
					float2 staticSwitch9080_g128811 = (Normal_NO_DTX544_g128895*2.0 + -1.0);
					#else
					float2 staticSwitch9080_g128811 = (staticSwitch37_g128896*2.0 + -1.0);
					#endif
					half4 Weights52_g128814 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128814 = _TerrainParams1;
					half4 Layer237_g128814 = _TerrainParams2;
					half4 Layer338_g128814 = _TerrainParams3;
					half4 Layer439_g128814 = _TerrainParams4;
					float4 weightedBlendVar31_g128814 = Weights52_g128814;
					float4 weightedBlend31_g128814 = ( weightedBlendVar31_g128814.x*Layer133_g128814 + weightedBlendVar31_g128814.y*Layer237_g128814 + weightedBlendVar31_g128814.z*Layer338_g128814 + weightedBlendVar31_g128814.w*Layer439_g128814 );
					half4 Terrain_Params_047533_g128811 = weightedBlend31_g128814;
					half4 Layer_045_g128820 = Terrain_Params_047533_g128811;
					half4 Weights52_g128826 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128826 = _TerrainParams5;
					half4 Layer237_g128826 = _TerrainParams6;
					half4 Layer338_g128826 = _TerrainParams7;
					half4 Layer439_g128826 = _TerrainParams8;
					float4 weightedBlendVar31_g128826 = Weights52_g128826;
					float4 weightedBlend31_g128826 = ( weightedBlendVar31_g128826.x*Layer133_g128826 + weightedBlendVar31_g128826.y*Layer237_g128826 + weightedBlendVar31_g128826.z*Layer338_g128826 + weightedBlendVar31_g128826.w*Layer439_g128826 );
					half4 Terrain_Params_088739_g128811 = weightedBlend31_g128826;
					half4 Layer_0810_g128820 = Terrain_Params_088739_g128811;
					half4 Weights52_g128832 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128832 = _TerrainParams9;
					half4 Layer237_g128832 = _TerrainParams10;
					half4 Layer338_g128832 = _TerrainParams11;
					half4 Layer439_g128832 = _TerrainParams12;
					float4 weightedBlendVar31_g128832 = Weights52_g128832;
					float4 weightedBlend31_g128832 = ( weightedBlendVar31_g128832.x*Layer133_g128832 + weightedBlendVar31_g128832.y*Layer237_g128832 + weightedBlendVar31_g128832.z*Layer338_g128832 + weightedBlendVar31_g128832.w*Layer439_g128832 );
					half4 Terrain_Params_128867_g128811 = weightedBlend31_g128832;
					half4 Layer_1243_g128820 = Terrain_Params_128867_g128811;
					half4 Weights52_g128838 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128838 = _TerrainParams13;
					half4 Layer237_g128838 = _TerrainParams14;
					half4 Layer338_g128838 = _TerrainParams15;
					half4 Layer439_g128838 = _TerrainParams16;
					float4 weightedBlendVar31_g128838 = Weights52_g128838;
					float4 weightedBlend31_g128838 = ( weightedBlendVar31_g128838.x*Layer133_g128838 + weightedBlendVar31_g128838.y*Layer237_g128838 + weightedBlendVar31_g128838.z*Layer338_g128838 + weightedBlendVar31_g128838.w*Layer439_g128838 );
					half4 Terrain_Params_169017_g128811 = weightedBlend31_g128838;
					half4 Layer_1644_g128820 = Terrain_Params_169017_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128820 = ( Layer_045_g128820 + Layer_0810_g128820 + Layer_1243_g128820 + Layer_1644_g128820 );
					#else
					float4 staticSwitch40_g128820 = Layer_045_g128820;
					#endif
					half4 Blend_Params7547_g128811 = staticSwitch40_g128820;
					half2 Normal_Planar45_g128897 = ( ( staticSwitch9080_g128811 * (Blend_Params7547_g128811).z ) * _TerrainNormalValue );
					float2 break71_g128897 = Normal_Planar45_g128897;
					float3 appendResult72_g128897 = (float3(break71_g128897.x , 0.0 , break71_g128897.y));
					half2 Final_NormalTS9145_g128811 = (mul( ase_worldToTangent, appendResult72_g128897 )).xy;
					half2 Local_Normal9200_g128810 = Final_NormalTS9145_g128811;
					float2 In_NormalTS3_g128923 = Local_Normal9200_g128810;
					float3 appendResult68_g128921 = (float3(Local_Normal9200_g128810 , 1.0));
					float3 tanToWorld0 = float3( ase_tangentWS.x, ase_bitangentWS.x, ase_normalWS.x );
					float3 tanToWorld1 = float3( ase_tangentWS.y, ase_bitangentWS.y, ase_normalWS.y );
					float3 tanToWorld2 = float3( ase_tangentWS.z, ase_bitangentWS.z, ase_normalWS.z );
					float3 tanNormal74_g128921 = appendResult68_g128921;
					float3 worldNormal74_g128921 = normalize( float3( dot( tanToWorld0, tanNormal74_g128921 ), dot( tanToWorld1, tanNormal74_g128921 ), dot( tanToWorld2, tanNormal74_g128921 ) ) );
					float3 In_NormalWS3_g128923 = worldNormal74_g128921;
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9139_g128811 = 0.0;
					#else
					float staticSwitch9139_g128811 = ( (Blend_Shaders7420_g128811).x * (Blend_Params7547_g128811).x * _TerrainMetallicValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9097_g128811 = 1.0;
					#else
					float staticSwitch9097_g128811 = ( (Blend_Shaders7420_g128811).y * _TerrainOcclusionValue );
					#endif
					#ifdef TVE_TERRAIN_PACKED
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).x;
					#else
					float staticSwitch9105_g128811 = (Blend_Shaders7420_g128811).w;
					#endif
					float4 appendResult9147_g128811 = (float4(staticSwitch9139_g128811 , staticSwitch9097_g128811 , (Blend_Shaders7420_g128811).z , ( staticSwitch9105_g128811 * (Blend_Params7547_g128811).w * _TerrainSmoothnessValue )));
					half4 Final_Shaders9146_g128811 = appendResult9147_g128811;
					half4 Local_Shader9201_g128810 = Final_Shaders9146_g128811;
					float4 In_Shader3_g128923 = Local_Shader9201_g128810;
					half4 Weights52_g128888 = Terrain_Weights_046781_g128811;
					half4 Layer133_g128888 = _TerrainSpecular1;
					half4 Layer237_g128888 = _TerrainSpecular2;
					half4 Layer338_g128888 = _TerrainSpecular3;
					half4 Layer439_g128888 = _TerrainSpecular4;
					float4 weightedBlendVar31_g128888 = Weights52_g128888;
					float4 weightedBlend31_g128888 = ( weightedBlendVar31_g128888.x*Layer133_g128888 + weightedBlendVar31_g128888.y*Layer237_g128888 + weightedBlendVar31_g128888.z*Layer338_g128888 + weightedBlendVar31_g128888.w*Layer439_g128888 );
					half4 Terrain_Specular_047390_g128811 = weightedBlend31_g128888;
					half4 Layer_045_g128893 = Terrain_Specular_047390_g128811;
					half4 Weights52_g128827 = Terrain_Weights_087340_g128811;
					half4 Layer133_g128827 = _TerrainSpecular5;
					half4 Layer237_g128827 = _TerrainSpecular6;
					half4 Layer338_g128827 = _TerrainSpecular7;
					half4 Layer439_g128827 = _TerrainSpecular8;
					float4 weightedBlendVar31_g128827 = Weights52_g128827;
					float4 weightedBlend31_g128827 = ( weightedBlendVar31_g128827.x*Layer133_g128827 + weightedBlendVar31_g128827.y*Layer237_g128827 + weightedBlendVar31_g128827.z*Layer338_g128827 + weightedBlendVar31_g128827.w*Layer439_g128827 );
					half4 Terrain_Specular_088745_g128811 = weightedBlend31_g128827;
					half4 Layer_0810_g128893 = Terrain_Specular_088745_g128811;
					half4 Weights52_g128833 = Terrain_Weights_127710_g128811;
					half4 Layer133_g128833 = _TerrainSpecular9;
					half4 Layer237_g128833 = _TerrainSpecular10;
					half4 Layer338_g128833 = _TerrainSpecular11;
					half4 Layer439_g128833 = _TerrainSpecular12;
					float4 weightedBlendVar31_g128833 = Weights52_g128833;
					float4 weightedBlend31_g128833 = ( weightedBlendVar31_g128833.x*Layer133_g128833 + weightedBlendVar31_g128833.y*Layer237_g128833 + weightedBlendVar31_g128833.z*Layer338_g128833 + weightedBlendVar31_g128833.w*Layer439_g128833 );
					half4 Terrain_Specular_128869_g128811 = weightedBlend31_g128833;
					half4 Layer_1243_g128893 = Terrain_Specular_128869_g128811;
					half4 Weights52_g128839 = Terrain_Weights_167709_g128811;
					half4 Layer133_g128839 = _TerrainSpecular13;
					half4 Layer237_g128839 = _TerrainSpecular14;
					half4 Layer338_g128839 = _TerrainSpecular15;
					half4 Layer439_g128839 = _TerrainSpecular16;
					float4 weightedBlendVar31_g128839 = Weights52_g128839;
					float4 weightedBlend31_g128839 = ( weightedBlendVar31_g128839.x*Layer133_g128839 + weightedBlendVar31_g128839.y*Layer237_g128839 + weightedBlendVar31_g128839.z*Layer338_g128839 + weightedBlendVar31_g128839.w*Layer439_g128839 );
					half4 Terrain_Specular_169019_g128811 = weightedBlend31_g128839;
					half4 Layer_1644_g128893 = Terrain_Specular_169019_g128811;
					#if defined( TVE_TERRAIN_04 )
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#elif defined( TVE_TERRAIN_08 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 );
					#elif defined( TVE_TERRAIN_12 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 );
					#elif defined( TVE_TERRAIN_16 )
					float4 staticSwitch40_g128893 = ( Layer_045_g128893 + Layer_0810_g128893 + Layer_1243_g128893 + Layer_1644_g128893 );
					#else
					float4 staticSwitch40_g128893 = Layer_045_g128893;
					#endif
					half4 Blend_TerrainSpecular7446_g128811 = staticSwitch40_g128893;
					float3 temp_output_9088_0_g128811 = (Blend_TerrainSpecular7446_g128811).rgb;
					float4 appendResult9189_g128811 = (float4(temp_output_9088_0_g128811 , 1.0));
					half4 Final_Emissive9151_g128811 = appendResult9189_g128811;
					half4 Local_EmissiveLDR9202_g128810 = Final_Emissive9151_g128811;
					float4 In_Emissive3_g128923 = Local_EmissiveLDR9202_g128810;
					float3 temp_output_3_0_g128922 = Local_Albedo9199_g128810;
					float dotResult20_g128922 = dot( temp_output_3_0_g128922 , float3( 0.2126, 0.7152, 0.0722 ) );
					float temp_output_9165_0_g128810 = dotResult20_g128922;
					float In_Grayscale3_g128923 = temp_output_9165_0_g128810;
					float clampResult9168_g128810 = clamp( saturate( ( temp_output_9165_0_g128810 * 5.0 ) ) , 0.2 , 1.0 );
					float In_Luminosity3_g128923 = clampResult9168_g128810;
					half Final_MultiShader9150_g128811 = ( (Blend_TerrainSpecular7446_g128811).a * (Blend_Albedo7468_g128811).w );
					half Local_MultiMask9203_g128810 = Final_MultiShader9150_g128811;
					float In_MultiMask3_g128923 = Local_MultiMask9203_g128810;
					float4 temp_output_35_0_g128904 = appendResult9125_g128811;
					float2 InputScale48_g128904 = (temp_output_35_0_g128904).zw;
					half2 FinalScale53_g128904 = ( 1.0 / InputScale48_g128904 );
					float2 InputPosition52_g128904 = (temp_output_35_0_g128904).xy;
					half2 FinalPosition58_g128904 = -( FinalScale53_g128904 * InputPosition52_g128904 );
					float2 temp_output_65_0_g128904 = ( ( (ase_positionWS).xz * FinalScale53_g128904 ) + FinalPosition58_g128904 );
					float2 Terrain_Holes_UV9406_g128811 = temp_output_65_0_g128904;
					#ifdef TVE_ALPHA_CLIP
					float staticSwitch9188_g128811 = SAMPLE_TEXTURE2D( _TerrainHolesTex, sampler_Point_Repeat, Terrain_Holes_UV9406_g128811 ).r;
					#else
					float staticSwitch9188_g128811 = 1.0;
					#endif
					half Terrain_Holes7437_g128811 = staticSwitch9188_g128811;
					half Local_HoleMask9204_g128810 = Terrain_Holes7437_g128811;
					float In_AlphaClip3_g128923 = Local_HoleMask9204_g128810;
					float In_AlphaFade3_g128923 = 1.0;
					float3 temp_cast_9 = (1.0).xxx;
					float3 In_Translucency3_g128923 = temp_cast_9;
					float In_Transmission3_g128923 = 1.0;
					float In_Thickness3_g128923 = 0.0;
					float In_Diffusion3_g128923 = 0.0;
					float In_Depth3_g128923 = 0.0;
					{
					Data3_g128923.Dummy = In_Dummy3_g128923;
					Data3_g128923.Albedo = In_Albedo3_g128923;
					Data3_g128923.AlbedoRaw = In_AlbedoRaw3_g128923;
					Data3_g128923.NormalTS = In_NormalTS3_g128923;
					Data3_g128923.NormalWS = In_NormalWS3_g128923;
					Data3_g128923.Shader = In_Shader3_g128923;
					Data3_g128923.Emissive= In_Emissive3_g128923;
					Data3_g128923.MultiMask = In_MultiMask3_g128923;
					Data3_g128923.Grayscale = In_Grayscale3_g128923;
					Data3_g128923.Luminosity = In_Luminosity3_g128923;
					Data3_g128923.AlphaClip = In_AlphaClip3_g128923;
					Data3_g128923.AlphaFade = In_AlphaFade3_g128923;
					Data3_g128923.Translucency = In_Translucency3_g128923;
					Data3_g128923.Transmission = In_Transmission3_g128923;
					Data3_g128923.Thickness = In_Thickness3_g128923;
					Data3_g128923.Diffusion = In_Diffusion3_g128923;
					Data3_g128923.Depth = In_Depth3_g128923;
					}
					TVEVisualData Data4_g128928 = Data3_g128923;
					float Out_Dummy4_g128928 = 0;
					float3 Out_Albedo4_g128928 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128928 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128928 = float2( 0,0 );
					float3 Out_NormalWS4_g128928 = float3( 0,0,0 );
					float4 Out_Shader4_g128928 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128928 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128928 = 0;
					float Out_Grayscale4_g128928 = 0;
					float Out_Luminosity4_g128928 = 0;
					float Out_AlphaClip4_g128928 = 0;
					float Out_AlphaFade4_g128928 = 0;
					float3 Out_Translucency4_g128928 = float3( 0,0,0 );
					float Out_Transmission4_g128928 = 0;
					float Out_Thickness4_g128928 = 0;
					float Out_Diffusion4_g128928 = 0;
					float Out_Depth4_g128928 = 0;
					{
					Out_Dummy4_g128928 = Data4_g128928.Dummy;
					Out_Albedo4_g128928 = Data4_g128928.Albedo;
					Out_AlbedoRaw4_g128928 = Data4_g128928.AlbedoRaw;
					Out_NormalTS4_g128928 = Data4_g128928.NormalTS;
					Out_NormalWS4_g128928 = Data4_g128928.NormalWS;
					Out_Shader4_g128928 = Data4_g128928.Shader;
					Out_Emissive4_g128928= Data4_g128928.Emissive;
					Out_MultiMask4_g128928 = Data4_g128928.MultiMask;
					Out_Grayscale4_g128928 = Data4_g128928.Grayscale;
					Out_Luminosity4_g128928= Data4_g128928.Luminosity;
					Out_AlphaClip4_g128928 = Data4_g128928.AlphaClip;
					Out_AlphaFade4_g128928 = Data4_g128928.AlphaFade;
					Out_Translucency4_g128928 = Data4_g128928.Translucency;
					Out_Transmission4_g128928 = Data4_g128928.Transmission;
					Out_Thickness4_g128928 = Data4_g128928.Thickness;
					Out_Diffusion4_g128928 = Data4_g128928.Diffusion;
					Out_Depth4_g128928= Data4_g128928.Depth;
					}
					half3 Visual_Albedo139_g128924 = Out_Albedo4_g128928;
					float temp_output_200_12_g128924 = Out_Grayscale4_g128928;
					half Visual_Grayscale150_g128924 = temp_output_200_12_g128924;
					float3 temp_cast_10 = (Visual_Grayscale150_g128924).xxx;
					float localBuildGlobalData204_g128736 = ( 0.0 );
					TVEGlobalData Data204_g128736 = (TVEGlobalData)0;
					half Dummy211_g128736 = ( _GlobalCategory + _GlobalEnd + 0.0 );
					float In_Dummy204_g128736 = Dummy211_g128736;
					half4 Coat_Params302_g128736 = TVE_CoatParams;
					float4 In_CoatDataRT204_g128736 = Coat_Params302_g128736;
					float temp_output_82_0_g128737 = _GlobalPaintLayerValue;
					float temp_output_19_0_g128739 = TVE_PaintLayers[(int)temp_output_82_0_g128737];
					TVEModelData Data16_g114311 = (TVEModelData)0;
					float In_Dummy16_g114311 = 0.0;
					float3 vertexToFrag73_g114306 = IN.ase_texcoord5.xyz;
					half3 PositionWS122_g114306 = vertexToFrag73_g114306;
					float3 In_PositionWS16_g114311 = PositionWS122_g114306;
					float4x4 break19_g128370 = unity_ObjectToWorld;
					float3 appendResult20_g128370 = (float3(break19_g128370[ 0 ][ 3 ] , break19_g128370[ 1 ][ 3 ] , break19_g128370[ 2 ][ 3 ]));
					float3 temp_output_340_7_g114306 = appendResult20_g128370;
					half3 PivotWS121_g114306 = temp_output_340_7_g114306;
					#ifdef TVE_SCOPE_DYNAMIC
					float3 staticSwitch204_g114306 = ( PositionWS122_g114306 - PivotWS121_g114306 );
					#else
					float3 staticSwitch204_g114306 = PositionWS122_g114306;
					#endif
					half3 PositionWO132_g114306 = ( staticSwitch204_g114306 - TVE_WorldOrigin );
					float3 In_PositionWO16_g114311 = PositionWO132_g114306;
					float3 In_PivotWS16_g114311 = PivotWS121_g114306;
					half3 PivotWO133_g114306 = ( PivotWS121_g114306 - TVE_WorldOrigin );
					float3 In_PivotWO16_g114311 = PivotWO133_g114306;
					float3 normalizedWorldNormal = normalize( ase_normalWS );
					half3 Normal_WS95_g114306 = normalizedWorldNormal;
					float3 In_NormalWS16_g114311 = Normal_WS95_g114306;
					float3 normalizeResult296_g114306 = normalize( ( _WorldSpaceCameraPos - PositionWS122_g114306 ) );
					half3 ViewDirWS169_g114306 = normalizeResult296_g114306;
					float3 In_ViewDirWS16_g114311 = ViewDirWS169_g114306;
					half4 VertexMasks171_g114306 = IN.ase_color;
					float4 In_VertexData16_g114311 = VertexMasks171_g114306;
					float4 In_BoundsData16_g114311 = float4( 1,1,1,1 );
					{
					Data16_g114311.Dummy = In_Dummy16_g114311;
					Data16_g114311.PositionWS = In_PositionWS16_g114311;
					Data16_g114311.PositionWO = In_PositionWO16_g114311;
					Data16_g114311.PivotWS = In_PivotWS16_g114311;
					Data16_g114311.PivotWO = In_PivotWO16_g114311;
					Data16_g114311.NormalWS = In_NormalWS16_g114311;
					Data16_g114311.ViewDirWS = In_ViewDirWS16_g114311;
					Data16_g114311.VertexData = In_VertexData16_g114311;
					Data16_g114311.BoundsData = In_BoundsData16_g114311;
					}
					TVEModelData Data15_g128782 = Data16_g114311;
					float Out_Dummy15_g128782 = 0;
					float3 Out_PositionWS15_g128782 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128782 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128782 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128782 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128782 = float3( 0,0,0 );
					float4 Out_VertexData15_g128782 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128782 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128782 = Data15_g128782.Dummy;
					Out_PositionWS15_g128782 = Data15_g128782.PositionWS;
					Out_PositionWO15_g128782 = Data15_g128782.PositionWO;
					Out_PivotWS15_g128782 = Data15_g128782.PivotWS;
					Out_PivotWO15_g128782 = Data15_g128782.PivotWO;
					Out_NormalWS15_g128782 = Data15_g128782.NormalWS;
					Out_ViewDirWS15_g128782 = Data15_g128782.ViewDirWS;
					Out_VertexData15_g128782 = Data15_g128782.VertexData;
					Out_BoundsData15_g128782 = Data15_g128782.BoundsData;
					}
					half3 Model_PositionWS143_g128736 = Out_PositionWS15_g128782;
					half3 Input_Position180_g128740 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128740 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_82_0_g128740 = temp_output_82_0_g128737;
					float2 temp_output_119_0_g128740 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128740).xz ) );
					float temp_output_7_0_g128745 = 1.0;
					float temp_output_9_0_g128745 = ( saturate( ( distance( Input_Position180_g128740 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128745 );
					float4 lerpResult131_g128740 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128740,temp_output_82_0_g128740), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_PaintNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128740,temp_output_82_0_g128740), 0.0 ) , saturate( ( temp_output_9_0_g128745 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128745 ) ) ));
					float4 temp_output_17_0_g128739 = lerpResult131_g128740;
					float4 temp_output_3_0_g128739 = TVE_PaintParams;
					float4 ifLocalVar18_g128739 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128739 >= 0.5 )
					ifLocalVar18_g128739 = temp_output_17_0_g128739;
					else
					ifLocalVar18_g128739 = temp_output_3_0_g128739;
					float4 lerpResult22_g128739 = lerp( temp_output_3_0_g128739 , temp_output_17_0_g128739 , temp_output_19_0_g128739);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128739 = lerpResult22_g128739;
					#else
					float4 staticSwitch24_g128739 = ifLocalVar18_g128739;
					#endif
					half4 Paint_Params71_g128736 = staticSwitch24_g128739;
					float4 In_PaintDataRT204_g128736 = Paint_Params71_g128736;
					float temp_output_82_0_g128783 = _GlobalGlowLayerValue;
					float temp_output_19_0_g128785 = TVE_GlowLayers[(int)temp_output_82_0_g128783];
					half3 Input_Position180_g128786 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128786 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_82_0_g128786 = temp_output_82_0_g128783;
					float2 temp_output_119_0_g128786 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128786).xz ) );
					float temp_output_7_0_g128791 = 1.0;
					float temp_output_9_0_g128791 = ( saturate( ( distance( Input_Position180_g128786 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128791 );
					float4 lerpResult131_g128786 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128786,temp_output_82_0_g128786), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_GlowNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128786,temp_output_82_0_g128786), 0.0 ) , saturate( ( temp_output_9_0_g128791 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128791 ) ) ));
					float4 temp_output_17_0_g128785 = lerpResult131_g128786;
					float4 temp_output_3_0_g128785 = TVE_GlowParams;
					float4 ifLocalVar18_g128785 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128785 >= 0.5 )
					ifLocalVar18_g128785 = temp_output_17_0_g128785;
					else
					ifLocalVar18_g128785 = temp_output_3_0_g128785;
					float4 lerpResult22_g128785 = lerp( temp_output_3_0_g128785 , temp_output_17_0_g128785 , temp_output_19_0_g128785);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128785 = lerpResult22_g128785;
					#else
					float4 staticSwitch24_g128785 = ifLocalVar18_g128785;
					#endif
					half4 Glow_Params248_g128736 = staticSwitch24_g128785;
					float4 In_GlowDataRT204_g128736 = Glow_Params248_g128736;
					float temp_output_132_0_g128764 = _GlobalAtmoLayerValue;
					float temp_output_19_0_g128766 = TVE_AtmoLayers[(int)temp_output_132_0_g128764];
					half3 Input_Position180_g128767 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128767 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_82_0_g128767 = temp_output_132_0_g128764;
					float2 temp_output_119_0_g128767 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128767).xz ) );
					float temp_output_7_0_g128772 = 1.0;
					float temp_output_9_0_g128772 = ( saturate( ( distance( Input_Position180_g128767 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128772 );
					float4 lerpResult131_g128767 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128767,temp_output_82_0_g128767), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_AtmoNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128767,temp_output_82_0_g128767), 0.0 ) , saturate( ( temp_output_9_0_g128772 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128772 ) ) ));
					float4 temp_output_17_0_g128766 = lerpResult131_g128767;
					float4 temp_output_3_0_g128766 = TVE_AtmoParams;
					float4 ifLocalVar18_g128766 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128766 >= 0.5 )
					ifLocalVar18_g128766 = temp_output_17_0_g128766;
					else
					ifLocalVar18_g128766 = temp_output_3_0_g128766;
					float4 lerpResult22_g128766 = lerp( temp_output_3_0_g128766 , temp_output_17_0_g128766 , temp_output_19_0_g128766);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128766 = lerpResult22_g128766;
					#else
					float4 staticSwitch24_g128766 = ifLocalVar18_g128766;
					#endif
					half4 Atmo_Params80_g128736 = staticSwitch24_g128766;
					float4 In_AtmoDataRT204_g128736 = Atmo_Params80_g128736;
					float temp_output_132_0_g128773 = _GlobalFadeLayerValue;
					float temp_output_19_0_g128775 = TVE_FadeLayers[(int)temp_output_132_0_g128773];
					half3 Input_Position180_g128776 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128776 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_82_0_g128776 = temp_output_132_0_g128773;
					float2 temp_output_119_0_g128776 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128776).xz ) );
					float temp_output_7_0_g128781 = 1.0;
					float temp_output_9_0_g128781 = ( saturate( ( distance( Input_Position180_g128776 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128781 );
					float4 lerpResult131_g128776 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128776,temp_output_82_0_g128776), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FadeNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128776,temp_output_82_0_g128776), 0.0 ) , saturate( ( temp_output_9_0_g128781 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128781 ) ) ));
					float4 temp_output_17_0_g128775 = lerpResult131_g128776;
					float4 temp_output_3_0_g128775 = TVE_FadeParams;
					float4 ifLocalVar18_g128775 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128775 >= 0.5 )
					ifLocalVar18_g128775 = temp_output_17_0_g128775;
					else
					ifLocalVar18_g128775 = temp_output_3_0_g128775;
					float4 lerpResult22_g128775 = lerp( temp_output_3_0_g128775 , temp_output_17_0_g128775 , temp_output_19_0_g128775);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128775 = lerpResult22_g128775;
					#else
					float4 staticSwitch24_g128775 = ifLocalVar18_g128775;
					#endif
					half4 Fade_Params387_g128736 = staticSwitch24_g128775;
					float4 In_FadeDataRT204_g128736 = Fade_Params387_g128736;
					float temp_output_130_0_g128755 = _GlobalFormLayerValue;
					float temp_output_19_0_g128757 = TVE_FormLayers[(int)temp_output_130_0_g128755];
					half3 Input_Position180_g128758 = Model_PositionWS143_g128736;
					float2 temp_output_75_0_g128758 = ( (TVE_RenderBaseCoords).zw + ( (TVE_RenderBaseCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_82_0_g128758 = temp_output_130_0_g128755;
					float2 temp_output_119_0_g128758 = ( (TVE_RenderNearCoords).zw + ( (TVE_RenderNearCoords).xy * (Input_Position180_g128758).xz ) );
					float temp_output_7_0_g128763 = 1.0;
					float temp_output_9_0_g128763 = ( saturate( ( distance( Input_Position180_g128758 , (TVE_RenderNearPositionR).xyz ) / (TVE_RenderNearPositionR).w ) ) - temp_output_7_0_g128763 );
					float4 lerpResult131_g128758 = lerp( SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormBaseTex, sampler_Linear_Clamp, float3(temp_output_75_0_g128758,temp_output_82_0_g128758), 0.0 ) , SAMPLE_TEXTURE2D_ARRAY_LOD( TVE_FormNearTex, sampler_Linear_Repeat, float3(temp_output_119_0_g128758,temp_output_82_0_g128758), 0.0 ) , saturate( ( temp_output_9_0_g128763 / ( TVE_RenderNearFadeValue - temp_output_7_0_g128763 ) ) ));
					float4 temp_output_17_0_g128757 = lerpResult131_g128758;
					float4 temp_output_3_0_g128757 = TVE_FormParams;
					float4 ifLocalVar18_g128757 = 0;
					UNITY_BRANCH 
					if( temp_output_19_0_g128757 >= 0.5 )
					ifLocalVar18_g128757 = temp_output_17_0_g128757;
					else
					ifLocalVar18_g128757 = temp_output_3_0_g128757;
					float4 lerpResult22_g128757 = lerp( temp_output_3_0_g128757 , temp_output_17_0_g128757 , temp_output_19_0_g128757);
					#ifdef SHADER_API_MOBILE
					float4 staticSwitch24_g128757 = lerpResult22_g128757;
					#else
					float4 staticSwitch24_g128757 = ifLocalVar18_g128757;
					#endif
					half4 Form_Params112_g128736 = staticSwitch24_g128757;
					float4 In_FormDataRT204_g128736 = Form_Params112_g128736;
					half4 Flow_Params405_g128736 = TVE_FlowParams;
					float4 In_FlowDataRT204_g128736 = Flow_Params405_g128736;
					{
					Data204_g128736.Dummy = In_Dummy204_g128736;
					Data204_g128736.CoatDataRT = In_CoatDataRT204_g128736;
					Data204_g128736.PaintDataRT = In_PaintDataRT204_g128736;
					Data204_g128736.GlowDataRT = In_GlowDataRT204_g128736;
					Data204_g128736.AtmoDataRT= In_AtmoDataRT204_g128736;
					Data204_g128736.FadeDataRT = In_FadeDataRT204_g128736;
					Data204_g128736.FormDataRT= In_FormDataRT204_g128736;
					Data204_g128736.FlowDataRT = In_FlowDataRT204_g128736;
					}
					TVEGlobalData Data15_g128925 = Data204_g128736;
					float Out_Dummy15_g128925 = 0;
					float4 Out_CoatDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128925 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128925 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128925 = Data15_g128925.Dummy;
					Out_CoatDataRT15_g128925 = Data15_g128925.CoatDataRT;
					Out_PaintDataRT15_g128925 = Data15_g128925.PaintDataRT;
					Out_GlowDataRT15_g128925= Data15_g128925.GlowDataRT;
					Out_AtmoDataRT15_g128925= Data15_g128925.AtmoDataRT;
					Out_FadeDataRT15_g128925= Data15_g128925.FadeDataRT;
					Out_FormDataRT15_g128925 = Data15_g128925.FormDataRT;
					Out_FlowDataRT15_g128925 = Data15_g128925.FlowDataRT;
					}
					half4 Global_PaintParams209_g128924 = Out_PaintDataRT15_g128925;
					float4 temp_output_6_0_g128942 = Global_PaintParams209_g128924;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128942 = ( temp_output_6_0_g128942 + _TintingElementMode );
					#else
					float4 staticSwitch14_g128942 = temp_output_6_0_g128942;
					#endif
					#ifdef TVE_TINTING_ELEMENT
					float4 staticSwitch283_g128924 = staticSwitch14_g128942;
					#else
					float4 staticSwitch283_g128924 = TVE_PaintParams;
					#endif
					float4 lerpResult412_g128924 = lerp( float4( 1,1,1,1 ) , staticSwitch283_g128924 , ( _TintingGlobalValue * TVE_IsEnabled ));
					half Tinting_GlobalValue285_g128924 = saturate( (lerpResult412_g128924).w );
					float3 lerpResult368_g128924 = lerp( Visual_Albedo139_g128924 , temp_cast_10 , ( Tinting_GlobalValue285_g128924 * _TintingGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128948 = 2.0;
					#else
					float staticSwitch1_g128948 = 4.594794;
					#endif
					half3 Tinting_GlobalColor290_g128924 = (lerpResult412_g128924).xyz;
					float temp_output_200_11_g128924 = Out_MultiMask4_g128928;
					half Visual_MultiMask181_g128924 = temp_output_200_11_g128924;
					float lerpResult147_g128924 = lerp( 1.0 , Visual_MultiMask181_g128924 , _TintingMultiValue);
					half Tinting_MutiMask121_g128924 = lerpResult147_g128924;
					half Tinting_TexMask385_g128924 = 1.0;
					float temp_output_200_15_g128924 = Out_Luminosity4_g128928;
					half Visual_Luminosity257_g128924 = temp_output_200_15_g128924;
					float clampResult17_g128935 = clamp( Visual_Luminosity257_g128924 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128939 = _TintingLumaRemap.x;
					float temp_output_9_0_g128939 = ( clampResult17_g128935 - temp_output_7_0_g128939 );
					float lerpResult228_g128924 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128939 * _TintingLumaRemap.z ) + 0.0001 ) ) , _TintingLumaValue);
					half Tinting_LumaMask153_g128924 = lerpResult228_g128924;
					half Tinting_VertMask309_g128924 = 1.0;
					half Tinting_NoiseMask213_g128924 = 1.0;
					half Custom_Mask345_g128924 = 1.0;
					half Tinting_CoreMasks433_g128924 = ( Tinting_MutiMask121_g128924 * Tinting_TexMask385_g128924 * Tinting_LumaMask153_g128924 * Tinting_VertMask309_g128924 * Tinting_NoiseMask213_g128924 * Custom_Mask345_g128924 );
					float temp_output_7_0_g128946 = _TintingBlendRemap.x;
					float temp_output_9_0_g128946 = ( ( _TintingIntensityValue * Tinting_CoreMasks433_g128924 * Tinting_GlobalValue285_g128924 ) - temp_output_7_0_g128946 );
					half Tinting_Mask242_g128924 = ( saturate( ( ( temp_output_9_0_g128946 * _TintingBlendRemap.z ) + 0.0001 ) ) * TVE_IsEnabled );
					float3 lerpResult90_g128924 = lerp( Visual_Albedo139_g128924 , ( lerpResult368_g128924 * staticSwitch1_g128948 * Tinting_GlobalColor290_g128924 * (_TintingColor).rgb ) , Tinting_Mask242_g128924);
					#ifdef TVE_TINTING
					float3 staticSwitch286_g128924 = lerpResult90_g128924;
					#else
					float3 staticSwitch286_g128924 = Visual_Albedo139_g128924;
					#endif
					half3 Final_Albedo97_g128924 = staticSwitch286_g128924;
					float3 In_Albedo3_g128944 = Final_Albedo97_g128924;
					float3 In_AlbedoRaw3_g128944 = Out_AlbedoRaw4_g128928;
					float2 In_NormalTS3_g128944 = Out_NormalTS4_g128928;
					float3 In_NormalWS3_g128944 = Out_NormalWS4_g128928;
					float4 In_Shader3_g128944 = Out_Shader4_g128928;
					float4 In_Emissive3_g128944 = Out_Emissive4_g128928;
					float In_Grayscale3_g128944 = temp_output_200_12_g128924;
					float In_Luminosity3_g128944 = temp_output_200_15_g128924;
					float In_MultiMask3_g128944 = temp_output_200_11_g128924;
					float In_AlphaClip3_g128944 = Out_AlphaClip4_g128928;
					float In_AlphaFade3_g128944 = Out_AlphaFade4_g128928;
					float3 In_Translucency3_g128944 = Out_Translucency4_g128928;
					float In_Transmission3_g128944 = Out_Transmission4_g128928;
					float In_Thickness3_g128944 = Out_Thickness4_g128928;
					float In_Diffusion3_g128944 = Out_Diffusion4_g128928;
					float In_Depth3_g128944 = Out_Depth4_g128928;
					{
					Data3_g128944.Dummy = In_Dummy3_g128944;
					Data3_g128944.Albedo = In_Albedo3_g128944;
					Data3_g128944.AlbedoRaw = In_AlbedoRaw3_g128944;
					Data3_g128944.NormalTS = In_NormalTS3_g128944;
					Data3_g128944.NormalWS = In_NormalWS3_g128944;
					Data3_g128944.Shader = In_Shader3_g128944;
					Data3_g128944.Emissive= In_Emissive3_g128944;
					Data3_g128944.MultiMask = In_MultiMask3_g128944;
					Data3_g128944.Grayscale = In_Grayscale3_g128944;
					Data3_g128944.Luminosity = In_Luminosity3_g128944;
					Data3_g128944.AlphaClip = In_AlphaClip3_g128944;
					Data3_g128944.AlphaFade = In_AlphaFade3_g128944;
					Data3_g128944.Translucency = In_Translucency3_g128944;
					Data3_g128944.Transmission = In_Transmission3_g128944;
					Data3_g128944.Thickness = In_Thickness3_g128944;
					Data3_g128944.Diffusion = In_Diffusion3_g128944;
					Data3_g128944.Depth = In_Depth3_g128944;
					}
					TVEVisualData Data4_g128951 = Data3_g128944;
					float Out_Dummy4_g128951 = 0;
					float3 Out_Albedo4_g128951 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128951 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128951 = float2( 0,0 );
					float3 Out_NormalWS4_g128951 = float3( 0,0,0 );
					float4 Out_Shader4_g128951 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128951 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128951 = 0;
					float Out_Grayscale4_g128951 = 0;
					float Out_Luminosity4_g128951 = 0;
					float Out_AlphaClip4_g128951 = 0;
					float Out_AlphaFade4_g128951 = 0;
					float3 Out_Translucency4_g128951 = float3( 0,0,0 );
					float Out_Transmission4_g128951 = 0;
					float Out_Thickness4_g128951 = 0;
					float Out_Diffusion4_g128951 = 0;
					float Out_Depth4_g128951 = 0;
					{
					Out_Dummy4_g128951 = Data4_g128951.Dummy;
					Out_Albedo4_g128951 = Data4_g128951.Albedo;
					Out_AlbedoRaw4_g128951 = Data4_g128951.AlbedoRaw;
					Out_NormalTS4_g128951 = Data4_g128951.NormalTS;
					Out_NormalWS4_g128951 = Data4_g128951.NormalWS;
					Out_Shader4_g128951 = Data4_g128951.Shader;
					Out_Emissive4_g128951= Data4_g128951.Emissive;
					Out_MultiMask4_g128951 = Data4_g128951.MultiMask;
					Out_Grayscale4_g128951 = Data4_g128951.Grayscale;
					Out_Luminosity4_g128951= Data4_g128951.Luminosity;
					Out_AlphaClip4_g128951 = Data4_g128951.AlphaClip;
					Out_AlphaFade4_g128951 = Data4_g128951.AlphaFade;
					Out_Translucency4_g128951 = Data4_g128951.Translucency;
					Out_Transmission4_g128951 = Data4_g128951.Transmission;
					Out_Thickness4_g128951 = Data4_g128951.Thickness;
					Out_Diffusion4_g128951 = Data4_g128951.Diffusion;
					Out_Depth4_g128951= Data4_g128951.Depth;
					}
					half3 Visual_Albedo292_g128949 = Out_Albedo4_g128951;
					float temp_output_280_12_g128949 = Out_Grayscale4_g128951;
					half Visual_Grayscale308_g128949 = temp_output_280_12_g128949;
					float3 temp_cast_32 = (Visual_Grayscale308_g128949).xxx;
					TVEGlobalData Data15_g128950 = Data204_g128736;
					float Out_Dummy15_g128950 = 0;
					float4 Out_CoatDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128950 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128950 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128950 = Data15_g128950.Dummy;
					Out_CoatDataRT15_g128950 = Data15_g128950.CoatDataRT;
					Out_PaintDataRT15_g128950 = Data15_g128950.PaintDataRT;
					Out_GlowDataRT15_g128950= Data15_g128950.GlowDataRT;
					Out_AtmoDataRT15_g128950= Data15_g128950.AtmoDataRT;
					Out_FadeDataRT15_g128950= Data15_g128950.FadeDataRT;
					Out_FormDataRT15_g128950 = Data15_g128950.FormDataRT;
					Out_FlowDataRT15_g128950 = Data15_g128950.FlowDataRT;
					}
					half4 Global_AtmoParams314_g128949 = Out_AtmoDataRT15_g128950;
					float temp_output_6_0_g128968 = (Global_AtmoParams314_g128949).x;
					#ifdef TVE_DUMMY
					float staticSwitch14_g128968 = ( temp_output_6_0_g128968 + _DrynessElementMode );
					#else
					float staticSwitch14_g128968 = temp_output_6_0_g128968;
					#endif
					#ifdef TVE_DRYNESS_ELEMENT
					float staticSwitch351_g128949 = staticSwitch14_g128968;
					#else
					float staticSwitch351_g128949 = TVE_AtmoParams.x;
					#endif
					float lerpResult505_g128949 = lerp( 1.0 , ( staticSwitch351_g128949 * TVE_IsEnabled ) , _DrynessGlobalValue);
					half Dryness_GlobalValue352_g128949 = lerpResult505_g128949;
					float3 lerpResult485_g128949 = lerp( Visual_Albedo292_g128949 , temp_cast_32 , ( Dryness_GlobalValue352_g128949 * _DrynessGrayValue ));
					#ifdef UNITY_COLORSPACE_GAMMA
					float staticSwitch1_g128972 = 2.0;
					#else
					float staticSwitch1_g128972 = 4.594794;
					#endif
					half Dryness_TexMask478_g128949 = 1.0;
					float temp_output_280_11_g128949 = Out_MultiMask4_g128951;
					half Visual_MultiMask310_g128949 = temp_output_280_11_g128949;
					float lerpResult283_g128949 = lerp( 1.0 , Visual_MultiMask310_g128949 , _DrynessMultiValue);
					half Dryness_MultiMask302_g128949 = lerpResult283_g128949;
					float temp_output_280_15_g128949 = Out_Luminosity4_g128951;
					half Visual_Luminosity309_g128949 = temp_output_280_15_g128949;
					float clampResult17_g128961 = clamp( Visual_Luminosity309_g128949 , 0.0001 , 0.9999 );
					float temp_output_7_0_g128965 = _DrynessLumaRemap.x;
					float temp_output_9_0_g128965 = ( clampResult17_g128961 - temp_output_7_0_g128965 );
					float lerpResult295_g128949 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g128965 * _DrynessLumaRemap.z ) + 0.0001 ) ) , _DrynessLumaValue);
					half Dryness_LumaMask301_g128949 = lerpResult295_g128949;
					half Dryness_VertMask378_g128949 = 1.0;
					half Dryness_MaskNoise291_g128949 = 1.0;
					half Custom_Mask411_g128949 = 1.0;
					float temp_output_7_0_g128970 = _DrynessBlendRemap.x;
					float temp_output_9_0_g128970 = ( ( _DrynessIntensityValue * Dryness_TexMask478_g128949 * Dryness_MultiMask302_g128949 * Dryness_LumaMask301_g128949 * Dryness_VertMask378_g128949 * Dryness_MaskNoise291_g128949 * Dryness_GlobalValue352_g128949 * Custom_Mask411_g128949 ) - temp_output_7_0_g128970 );
					half Dryness_Mask329_g128949 = saturate( ( ( temp_output_9_0_g128970 * _DrynessBlendRemap.z ) + 0.0001 ) );
					float3 lerpResult336_g128949 = lerp( Visual_Albedo292_g128949 , ( lerpResult485_g128949 * staticSwitch1_g128972 * (_DrynessColor).rgb ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float3 staticSwitch356_g128949 = lerpResult336_g128949;
					#else
					float3 staticSwitch356_g128949 = Visual_Albedo292_g128949;
					#endif
					half3 Final_Albedo331_g128949 = staticSwitch356_g128949;
					float3 In_Albedo3_g128952 = Final_Albedo331_g128949;
					float3 In_AlbedoRaw3_g128952 = Out_AlbedoRaw4_g128951;
					float2 In_NormalTS3_g128952 = Out_NormalTS4_g128951;
					float3 In_NormalWS3_g128952 = Out_NormalWS4_g128951;
					half4 Visual_Shader415_g128949 = Out_Shader4_g128951;
					float4 break438_g128949 = Visual_Shader415_g128949;
					float4 appendResult439_g128949 = (float4(break438_g128949.x , break438_g128949.y , break438_g128949.z , ( break438_g128949.w * _DrynessSmoothnessValue )));
					float4 lerpResult427_g128949 = lerp( Visual_Shader415_g128949 , appendResult439_g128949 , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float4 staticSwitch426_g128949 = lerpResult427_g128949;
					#else
					float4 staticSwitch426_g128949 = Visual_Shader415_g128949;
					#endif
					half4 Final_Shader433_g128949 = staticSwitch426_g128949;
					float4 In_Shader3_g128952 = Final_Shader433_g128949;
					float4 In_Emissive3_g128952 = Out_Emissive4_g128951;
					float In_Grayscale3_g128952 = temp_output_280_12_g128949;
					float In_Luminosity3_g128952 = temp_output_280_15_g128949;
					float In_MultiMask3_g128952 = temp_output_280_11_g128949;
					float In_AlphaClip3_g128952 = Out_AlphaClip4_g128951;
					float In_AlphaFade3_g128952 = Out_AlphaFade4_g128951;
					float3 In_Translucency3_g128952 = Out_Translucency4_g128951;
					half Visual_Transmission416_g128949 = Out_Transmission4_g128951;
					float lerpResult421_g128949 = lerp( Visual_Transmission416_g128949 , ( Visual_Transmission416_g128949 * _DrynessSubsurfaceValue ) , Dryness_Mask329_g128949);
					#ifdef TVE_DRYNESS
					float staticSwitch418_g128949 = lerpResult421_g128949;
					#else
					float staticSwitch418_g128949 = Visual_Transmission416_g128949;
					#endif
					half Final_Transmission425_g128949 = staticSwitch418_g128949;
					float In_Transmission3_g128952 = Final_Transmission425_g128949;
					float In_Thickness3_g128952 = Out_Thickness4_g128951;
					float In_Diffusion3_g128952 = Out_Diffusion4_g128951;
					float In_Depth3_g128952 = Out_Depth4_g128951;
					{
					Data3_g128952.Dummy = In_Dummy3_g128952;
					Data3_g128952.Albedo = In_Albedo3_g128952;
					Data3_g128952.AlbedoRaw = In_AlbedoRaw3_g128952;
					Data3_g128952.NormalTS = In_NormalTS3_g128952;
					Data3_g128952.NormalWS = In_NormalWS3_g128952;
					Data3_g128952.Shader = In_Shader3_g128952;
					Data3_g128952.Emissive= In_Emissive3_g128952;
					Data3_g128952.MultiMask = In_MultiMask3_g128952;
					Data3_g128952.Grayscale = In_Grayscale3_g128952;
					Data3_g128952.Luminosity = In_Luminosity3_g128952;
					Data3_g128952.AlphaClip = In_AlphaClip3_g128952;
					Data3_g128952.AlphaFade = In_AlphaFade3_g128952;
					Data3_g128952.Translucency = In_Translucency3_g128952;
					Data3_g128952.Transmission = In_Transmission3_g128952;
					Data3_g128952.Thickness = In_Thickness3_g128952;
					Data3_g128952.Diffusion = In_Diffusion3_g128952;
					Data3_g128952.Depth = In_Depth3_g128952;
					}
					TVEVisualData Data4_g128974 = Data3_g128952;
					float Out_Dummy4_g128974 = 0;
					float3 Out_Albedo4_g128974 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g128974 = float3( 0,0,0 );
					float2 Out_NormalTS4_g128974 = float2( 0,0 );
					float3 Out_NormalWS4_g128974 = float3( 0,0,0 );
					float4 Out_Shader4_g128974 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g128974 = float4( 0,0,0,0 );
					float Out_MultiMask4_g128974 = 0;
					float Out_Grayscale4_g128974 = 0;
					float Out_Luminosity4_g128974 = 0;
					float Out_AlphaClip4_g128974 = 0;
					float Out_AlphaFade4_g128974 = 0;
					float3 Out_Translucency4_g128974 = float3( 0,0,0 );
					float Out_Transmission4_g128974 = 0;
					float Out_Thickness4_g128974 = 0;
					float Out_Diffusion4_g128974 = 0;
					float Out_Depth4_g128974 = 0;
					{
					Out_Dummy4_g128974 = Data4_g128974.Dummy;
					Out_Albedo4_g128974 = Data4_g128974.Albedo;
					Out_AlbedoRaw4_g128974 = Data4_g128974.AlbedoRaw;
					Out_NormalTS4_g128974 = Data4_g128974.NormalTS;
					Out_NormalWS4_g128974 = Data4_g128974.NormalWS;
					Out_Shader4_g128974 = Data4_g128974.Shader;
					Out_Emissive4_g128974= Data4_g128974.Emissive;
					Out_MultiMask4_g128974 = Data4_g128974.MultiMask;
					Out_Grayscale4_g128974 = Data4_g128974.Grayscale;
					Out_Luminosity4_g128974= Data4_g128974.Luminosity;
					Out_AlphaClip4_g128974 = Data4_g128974.AlphaClip;
					Out_AlphaFade4_g128974 = Data4_g128974.AlphaFade;
					Out_Translucency4_g128974 = Data4_g128974.Translucency;
					Out_Transmission4_g128974 = Data4_g128974.Transmission;
					Out_Thickness4_g128974 = Data4_g128974.Thickness;
					Out_Diffusion4_g128974 = Data4_g128974.Diffusion;
					Out_Depth4_g128974= Data4_g128974.Depth;
					}
					half3 Visual_Albedo127_g128973 = Out_Albedo4_g128974;
					float3 temp_output_622_0_g128973 = (_OverlayColor).rgb;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128977) = _OverlayAlbedoTex;
					float localFilterTexture19_g128988 = ( 0.0 );
					SamplerState SS19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerDefault19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerPoint19_g128988 = sampler_Point_Repeat;
					SamplerState SamplerLow19_g128988 = sampler_Linear_Repeat;
					SamplerState SamplerMedium19_g128988 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh19_g128988 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS19_g128988 = SamplerDefault19_g128988;
					#if defined (TVE_FILTER_DEFAULT)
					    SS19_g128988 = SamplerDefault19_g128988;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS19_g128988 = SamplerPoint19_g128988;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS19_g128988 = SamplerLow19_g128988;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS19_g128988 = SamplerMedium19_g128988;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS19_g128988 = SamplerHigh19_g128988;
					#endif
					}
					SamplerState Sampler238_g128977 = SS19_g128988;
					float4 temp_output_6_0_g128978 = _overlay_coord_value;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g128978 = ( temp_output_6_0_g128978 + ( _OverlaySampleMode + _OverlayCoordMode + _OverlayCoordValue ) );
					#else
					float4 staticSwitch14_g128978 = temp_output_6_0_g128978;
					#endif
					half4 Overlay_Coords639_g128973 = staticSwitch14_g128978;
					float4 temp_output_37_0_g128977 = Overlay_Coords639_g128973;
					half4 Coords238_g128977 = temp_output_37_0_g128977;
					TVEModelData Data15_g128990 = Data16_g114311;
					float Out_Dummy15_g128990 = 0;
					float3 Out_PositionWS15_g128990 = float3( 0,0,0 );
					float3 Out_PositionWO15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWS15_g128990 = float3( 0,0,0 );
					float3 Out_PivotWO15_g128990 = float3( 0,0,0 );
					float3 Out_NormalWS15_g128990 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g128990 = float3( 0,0,0 );
					float4 Out_VertexData15_g128990 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g128990 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128990 = Data15_g128990.Dummy;
					Out_PositionWS15_g128990 = Data15_g128990.PositionWS;
					Out_PositionWO15_g128990 = Data15_g128990.PositionWO;
					Out_PivotWS15_g128990 = Data15_g128990.PivotWS;
					Out_PivotWO15_g128990 = Data15_g128990.PivotWO;
					Out_NormalWS15_g128990 = Data15_g128990.NormalWS;
					Out_ViewDirWS15_g128990 = Data15_g128990.ViewDirWS;
					Out_VertexData15_g128990 = Data15_g128990.VertexData;
					Out_BoundsData15_g128990 = Data15_g128990.BoundsData;
					}
					half3 Model_PositionWO602_g128973 = Out_PositionWO15_g128990;
					float3 temp_output_279_0_g128977 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128977 = temp_output_279_0_g128977;
					half4 localSamplePlanar2D238_g128977 = SamplePlanar2D( Texture238_g128977 , Sampler238_g128977 , Coords238_g128977 , WorldPosition238_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler246_g128977 = SS19_g128988;
					half4 Coords246_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition246_g128977 = temp_output_279_0_g128977;
					half3 Model_NormalWS712_g128973 = Out_NormalWS15_g128990;
					float3 temp_output_280_0_g128977 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128977 = temp_output_280_0_g128977;
					half4 localSamplePlanar3D246_g128977 = SamplePlanar3D( Texture246_g128977 , Sampler246_g128977 , Coords246_g128977 , WorldPosition246_g128977 , WorldNormal246_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler234_g128977 = SS19_g128988;
					float4 Coords234_g128977 = temp_output_37_0_g128977;
					float3 WorldPosition234_g128977 = temp_output_279_0_g128977;
					float4 localSampleStochastic2D234_g128977 = SampleStochastic2D( Texture234_g128977 , Sampler234_g128977 , Coords234_g128977 , WorldPosition234_g128977 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128977) = _OverlayAlbedoTex;
					SamplerState Sampler263_g128977 = SS19_g128988;
					half4 Coords263_g128977 = temp_output_37_0_g128977;
					half3 WorldPosition263_g128977 = temp_output_279_0_g128977;
					half3 WorldNormal263_g128977 = temp_output_280_0_g128977;
					half4 localSampleStochastic3D263_g128977 = SampleStochastic3D( Texture263_g128977 , Sampler263_g128977 , Coords263_g128977 , WorldPosition263_g128977 , WorldNormal263_g128977 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch676_g128973 = localSamplePlanar3D246_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch676_g128973 = localSampleStochastic2D234_g128977;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch676_g128973 = localSampleStochastic3D263_g128977;
					#else
					float4 staticSwitch676_g128973 = localSamplePlanar2D238_g128977;
					#endif
					half3 Overlay_Albedo526_g128973 = (staticSwitch676_g128973).xyz;
					#ifdef TVE_OVERLAY_TEX
					float3 staticSwitch578_g128973 = ( temp_output_622_0_g128973 * Overlay_Albedo526_g128973 );
					#else
					float3 staticSwitch578_g128973 = temp_output_622_0_g128973;
					#endif
					float3 temp_output_6_0_g128991 = staticSwitch578_g128973;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g128991 = ( temp_output_6_0_g128991 + _OverlayTextureMode );
					#else
					float3 staticSwitch14_g128991 = temp_output_6_0_g128991;
					#endif
					float3 temp_cast_33 = (0.0).xxx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128981) = _OverlayGlitterTexRT;
					SamplerState Sampler246_g128981 = sampler_Linear_Repeat;
					float4 appendResult863_g128973 = (float4(_OverlayGlitterTillingValue , _OverlayGlitterTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g128981 = appendResult863_g128973;
					half4 Coords246_g128981 = temp_output_37_0_g128981;
					float3 temp_output_279_0_g128981 = Model_PositionWO602_g128973;
					half3 WorldPosition246_g128981 = temp_output_279_0_g128981;
					float3 temp_output_280_0_g128981 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128981 = temp_output_280_0_g128981;
					half4 localSamplePlanar3D246_g128981 = SamplePlanar3D( Texture246_g128981 , Sampler246_g128981 , Coords246_g128981 , WorldPosition246_g128981 , WorldNormal246_g128981 );
					half Overlay_GlitterTex854_g128973 = (localSamplePlanar3D246_g128981).x;
					half3 Model_PositionWS879_g128973 = Out_PositionWS15_g128990;
					#ifdef TVE_OVERLAY_GLITTER
					float3 staticSwitch868_g128973 = ( _OverlayGlitterIntensityValue * (_OverlayGlitterColor).rgb * Overlay_GlitterTex854_g128973 * ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS879_g128973 ) / _OverlayGlitterDistValue ) ) ) );
					#else
					float3 staticSwitch868_g128973 = temp_cast_33;
					#endif
					half3 Overlay_GlitterColor865_g128973 = staticSwitch868_g128973;
					half Overlay_TexMask908_g128973 = 1.0;
					float3 temp_output_739_21_g128973 = Out_NormalWS4_g128974;
					half3 Visual_NormalWS749_g128973 = temp_output_739_21_g128973;
					float clampResult17_g128997 = clamp( saturate( (Visual_NormalWS749_g128973).y ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129001 = _OverlayProjRemap.x;
					float temp_output_9_0_g129001 = ( clampResult17_g128997 - temp_output_7_0_g129001 );
					float lerpResult842_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129001 * _OverlayProjRemap.z ) + 0.0001 ) ) , _OverlayProjValue);
					half Overlay_MaskProj457_g128973 = lerpResult842_g128973;
					float temp_output_739_15_g128973 = Out_Luminosity4_g128974;
					half Visual_Luminosity654_g128973 = temp_output_739_15_g128973;
					float clampResult17_g129005 = clamp( Visual_Luminosity654_g128973 , 0.0001 , 0.9999 );
					float temp_output_7_0_g129006 = _OverlayLumaRemap.x;
					float temp_output_9_0_g129006 = ( clampResult17_g129005 - temp_output_7_0_g129006 );
					float lerpResult587_g128973 = lerp( 1.0 , saturate( ( ( temp_output_9_0_g129006 * _OverlayLumaRemap.z ) + 0.0001 ) ) , _OverlayLumaValue);
					half Overlay_MaskLuma438_g128973 = lerpResult587_g128973;
					half Overlay_VertMask801_g128973 = 1.0;
					half Overlay_MaskNoise427_g128973 = 1.0;
					TVEGlobalData Data15_g128975 = Data204_g128736;
					float Out_Dummy15_g128975 = 0;
					float4 Out_CoatDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g128975 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g128975 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g128975 = Data15_g128975.Dummy;
					Out_CoatDataRT15_g128975 = Data15_g128975.CoatDataRT;
					Out_PaintDataRT15_g128975 = Data15_g128975.PaintDataRT;
					Out_GlowDataRT15_g128975= Data15_g128975.GlowDataRT;
					Out_AtmoDataRT15_g128975= Data15_g128975.AtmoDataRT;
					Out_FadeDataRT15_g128975= Data15_g128975.FadeDataRT;
					Out_FormDataRT15_g128975 = Data15_g128975.FormDataRT;
					Out_FlowDataRT15_g128975 = Data15_g128975.FlowDataRT;
					}
					half4 Global_AtmoParams516_g128973 = Out_AtmoDataRT15_g128975;
					float temp_output_6_0_g129007 = (Global_AtmoParams516_g128973).z;
					#ifdef TVE_DUMMY
					float staticSwitch14_g129007 = ( temp_output_6_0_g129007 + _OverlayElementMode );
					#else
					float staticSwitch14_g129007 = temp_output_6_0_g129007;
					#endif
					#ifdef TVE_OVERLAY_ELEMENT
					float staticSwitch705_g128973 = staticSwitch14_g129007;
					#else
					float staticSwitch705_g128973 = TVE_AtmoParams.z;
					#endif
					float lerpResult937_g128973 = lerp( 1.0 , ( staticSwitch705_g128973 * TVE_IsEnabled ) , _OverlayGlobalValue);
					half Overlay_MaskGlobal429_g128973 = lerpResult937_g128973;
					half Custom_Mask646_g128973 = 1.0;
					float temp_output_7_0_g129004 = _OverlayBlendRemap.x;
					float temp_output_9_0_g129004 = ( ( _OverlayIntensityValue * Overlay_TexMask908_g128973 * Overlay_MaskProj457_g128973 * Overlay_MaskLuma438_g128973 * Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 * Custom_Mask646_g128973 ) - temp_output_7_0_g129004 );
					half Overlay_Mask494_g128973 = saturate( ( ( temp_output_9_0_g129004 / ( _OverlayBlendRemap.y - temp_output_7_0_g129004 ) ) + 0.0001 ) );
					float3 lerpResult467_g128973 = lerp( Visual_Albedo127_g128973 , ( staticSwitch14_g128991 + Overlay_GlitterColor865_g128973 ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float3 staticSwitch577_g128973 = lerpResult467_g128973;
					#else
					float3 staticSwitch577_g128973 = Visual_Albedo127_g128973;
					#endif
					half3 Final_Albedo493_g128973 = staticSwitch577_g128973;
					float3 In_Albedo3_g128976 = Final_Albedo493_g128973;
					float3 In_AlbedoRaw3_g128976 = Out_AlbedoRaw4_g128974;
					half2 Visual_NormalTS535_g128973 = Out_NormalTS4_g128974;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g128979) = _OverlayNormalTex;
					float localFilterTexture29_g128989 = ( 0.0 );
					SamplerState SS29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerDefault29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerPoint29_g128989 = sampler_Point_Repeat;
					SamplerState SamplerLow29_g128989 = sampler_Linear_Repeat;
					SamplerState SamplerMedium29_g128989 = sampler_Linear_Repeat_Aniso8;
					SamplerState SamplerHigh29_g128989 = sampler_Linear_Repeat_Aniso8;
					{
					//SamplerState SS29_g128989 = SamplerDefault29_g128989;
					#if defined (TVE_FILTER_DEFAULT)
					    SS29_g128989 = SamplerDefault29_g128989;
					#endif
					#if defined (TVE_FILTER_POINT)
					    SS29_g128989 = SamplerPoint29_g128989;
					#endif
					#if defined (TVE_FILTER_LOW)
					    SS29_g128989 = SamplerLow29_g128989;
					#endif
					#if defined (TVE_FILTER_MEDIUM)
					    SS29_g128989 = SamplerMedium29_g128989;
					#endif
					#if defined (TVE_FILTER_HIGH)
					    SS29_g128989 = SamplerHigh29_g128989;
					#endif
					}
					SamplerState Sampler238_g128979 = SS29_g128989;
					float4 temp_output_37_0_g128979 = Overlay_Coords639_g128973;
					half4 Coords238_g128979 = temp_output_37_0_g128979;
					float3 temp_output_279_0_g128979 = Model_PositionWO602_g128973;
					half3 WorldPosition238_g128979 = temp_output_279_0_g128979;
					half4 localSamplePlanar2D238_g128979 = SamplePlanar2D( Texture238_g128979 , Sampler238_g128979 , Coords238_g128979 , WorldPosition238_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture246_g128979) = _OverlayNormalTex;
					SamplerState Sampler246_g128979 = SS29_g128989;
					half4 Coords246_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition246_g128979 = temp_output_279_0_g128979;
					float3 temp_output_280_0_g128979 = Model_NormalWS712_g128973;
					half3 WorldNormal246_g128979 = temp_output_280_0_g128979;
					half4 localSamplePlanar3D246_g128979 = SamplePlanar3D( Texture246_g128979 , Sampler246_g128979 , Coords246_g128979 , WorldPosition246_g128979 , WorldNormal246_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture234_g128979) = _OverlayNormalTex;
					SamplerState Sampler234_g128979 = SS29_g128989;
					float4 Coords234_g128979 = temp_output_37_0_g128979;
					float3 WorldPosition234_g128979 = temp_output_279_0_g128979;
					float4 localSampleStochastic2D234_g128979 = SampleStochastic2D( Texture234_g128979 , Sampler234_g128979 , Coords234_g128979 , WorldPosition234_g128979 );
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture263_g128979) = _OverlayNormalTex;
					SamplerState Sampler263_g128979 = SS29_g128989;
					half4 Coords263_g128979 = temp_output_37_0_g128979;
					half3 WorldPosition263_g128979 = temp_output_279_0_g128979;
					half3 WorldNormal263_g128979 = temp_output_280_0_g128979;
					half4 localSampleStochastic3D263_g128979 = SampleStochastic3D( Texture263_g128979 , Sampler263_g128979 , Coords263_g128979 , WorldPosition263_g128979 , WorldNormal263_g128979 );
					#if defined( TVE_OVERLAY_SAMPLE_PLANAR_2D )
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_PLANAR_3D )
					float4 staticSwitch686_g128973 = localSamplePlanar3D246_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_2D )
					float4 staticSwitch686_g128973 = localSampleStochastic2D234_g128979;
					#elif defined( TVE_OVERLAY_SAMPLE_STOCHASTIC_3D )
					float4 staticSwitch686_g128973 = localSampleStochastic3D263_g128979;
					#else
					float4 staticSwitch686_g128973 = localSamplePlanar2D238_g128979;
					#endif
					half4 Normal_Packed45_g128982 = staticSwitch686_g128973;
					float2 appendResult58_g128982 = (float2(( (Normal_Packed45_g128982).x * (Normal_Packed45_g128982).w ) , (Normal_Packed45_g128982).y));
					half2 Normal_Default50_g128982 = appendResult58_g128982;
					half2 Normal_ASTC41_g128982 = (Normal_Packed45_g128982).xy;
					#ifdef UNITY_ASTC_NORMALMAP_ENCODING
					float2 staticSwitch38_g128982 = Normal_ASTC41_g128982;
					#else
					float2 staticSwitch38_g128982 = Normal_Default50_g128982;
					#endif
					half2 Normal_NO_DTX544_g128982 = (Normal_Packed45_g128982).wy;
					#ifdef UNITY_NO_DXT5nm
					float2 staticSwitch37_g128982 = Normal_NO_DTX544_g128982;
					#else
					float2 staticSwitch37_g128982 = staticSwitch38_g128982;
					#endif
					float2 temp_output_623_0_g128973 = (staticSwitch37_g128982*2.0 + -1.0);
					half2 Overlay_Normal528_g128973 = temp_output_623_0_g128973;
					#ifdef TVE_OVERLAY_TEX
					float2 staticSwitch579_g128973 = Overlay_Normal528_g128973;
					#else
					float2 staticSwitch579_g128973 = Visual_NormalTS535_g128973;
					#endif
					float2 lerpResult551_g128973 = lerp( Visual_NormalTS535_g128973 , ( staticSwitch579_g128973 * _OverlayNormalValue ) , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float2 staticSwitch583_g128973 = lerpResult551_g128973;
					#else
					float2 staticSwitch583_g128973 = Visual_NormalTS535_g128973;
					#endif
					half2 Final_NormalTS499_g128973 = staticSwitch583_g128973;
					float2 In_NormalTS3_g128976 = Final_NormalTS499_g128973;
					float3 In_NormalWS3_g128976 = temp_output_739_21_g128973;
					half4 Visual_Masks536_g128973 = Out_Shader4_g128974;
					float4 appendResult585_g128973 = (float4(0.0 , 1.0 , 0.0 , _OverlaySmoothnessValue));
					float4 lerpResult584_g128973 = lerp( Visual_Masks536_g128973 , appendResult585_g128973 , Overlay_Mask494_g128973);
					#ifdef TVE_OVERLAY
					float4 staticSwitch586_g128973 = lerpResult584_g128973;
					#else
					float4 staticSwitch586_g128973 = Visual_Masks536_g128973;
					#endif
					half4 Final_Masks482_g128973 = staticSwitch586_g128973;
					float4 In_Shader3_g128976 = Final_Masks482_g128973;
					float4 In_Emissive3_g128976 = Out_Emissive4_g128974;
					float temp_output_739_12_g128973 = Out_Grayscale4_g128974;
					float In_Grayscale3_g128976 = temp_output_739_12_g128973;
					float In_Luminosity3_g128976 = temp_output_739_15_g128973;
					float In_MultiMask3_g128976 = Out_MultiMask4_g128974;
					float In_AlphaClip3_g128976 = Out_AlphaClip4_g128974;
					float In_AlphaFade3_g128976 = Out_AlphaFade4_g128974;
					float3 In_Translucency3_g128976 = Out_Translucency4_g128974;
					half Visual_Transmission699_g128973 = Out_Transmission4_g128974;
					float lerpResult746_g128973 = lerp( Visual_Transmission699_g128973 , ( Visual_Transmission699_g128973 * _OverlaySubsurfaceValue ) , ( Overlay_VertMask801_g128973 * Overlay_MaskNoise427_g128973 * Overlay_MaskGlobal429_g128973 ));
					#ifdef TVE_OVERLAY
					float staticSwitch703_g128973 = lerpResult746_g128973;
					#else
					float staticSwitch703_g128973 = Visual_Transmission699_g128973;
					#endif
					half Final_Transmission702_g128973 = staticSwitch703_g128973;
					float In_Transmission3_g128976 = Final_Transmission702_g128973;
					float In_Thickness3_g128976 = Out_Thickness4_g128974;
					float In_Diffusion3_g128976 = Out_Diffusion4_g128974;
					float In_Depth3_g128976 = Out_Depth4_g128974;
					{
					Data3_g128976.Dummy = In_Dummy3_g128976;
					Data3_g128976.Albedo = In_Albedo3_g128976;
					Data3_g128976.AlbedoRaw = In_AlbedoRaw3_g128976;
					Data3_g128976.NormalTS = In_NormalTS3_g128976;
					Data3_g128976.NormalWS = In_NormalWS3_g128976;
					Data3_g128976.Shader = In_Shader3_g128976;
					Data3_g128976.Emissive= In_Emissive3_g128976;
					Data3_g128976.MultiMask = In_MultiMask3_g128976;
					Data3_g128976.Grayscale = In_Grayscale3_g128976;
					Data3_g128976.Luminosity = In_Luminosity3_g128976;
					Data3_g128976.AlphaClip = In_AlphaClip3_g128976;
					Data3_g128976.AlphaFade = In_AlphaFade3_g128976;
					Data3_g128976.Translucency = In_Translucency3_g128976;
					Data3_g128976.Transmission = In_Transmission3_g128976;
					Data3_g128976.Thickness = In_Thickness3_g128976;
					Data3_g128976.Diffusion = In_Diffusion3_g128976;
					Data3_g128976.Depth = In_Depth3_g128976;
					}
					TVEVisualData Data4_g129011 = Data3_g128976;
					float Out_Dummy4_g129011 = 0;
					float3 Out_Albedo4_g129011 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129011 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129011 = float2( 0,0 );
					float3 Out_NormalWS4_g129011 = float3( 0,0,0 );
					float4 Out_Shader4_g129011 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129011 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129011 = 0;
					float Out_Grayscale4_g129011 = 0;
					float Out_Luminosity4_g129011 = 0;
					float Out_AlphaClip4_g129011 = 0;
					float Out_AlphaFade4_g129011 = 0;
					float3 Out_Translucency4_g129011 = float3( 0,0,0 );
					float Out_Transmission4_g129011 = 0;
					float Out_Thickness4_g129011 = 0;
					float Out_Diffusion4_g129011 = 0;
					float Out_Depth4_g129011 = 0;
					{
					Out_Dummy4_g129011 = Data4_g129011.Dummy;
					Out_Albedo4_g129011 = Data4_g129011.Albedo;
					Out_AlbedoRaw4_g129011 = Data4_g129011.AlbedoRaw;
					Out_NormalTS4_g129011 = Data4_g129011.NormalTS;
					Out_NormalWS4_g129011 = Data4_g129011.NormalWS;
					Out_Shader4_g129011 = Data4_g129011.Shader;
					Out_Emissive4_g129011= Data4_g129011.Emissive;
					Out_MultiMask4_g129011 = Data4_g129011.MultiMask;
					Out_Grayscale4_g129011 = Data4_g129011.Grayscale;
					Out_Luminosity4_g129011= Data4_g129011.Luminosity;
					Out_AlphaClip4_g129011 = Data4_g129011.AlphaClip;
					Out_AlphaFade4_g129011 = Data4_g129011.AlphaFade;
					Out_Translucency4_g129011 = Data4_g129011.Translucency;
					Out_Transmission4_g129011 = Data4_g129011.Transmission;
					Out_Thickness4_g129011 = Data4_g129011.Thickness;
					Out_Diffusion4_g129011 = Data4_g129011.Diffusion;
					Out_Depth4_g129011= Data4_g129011.Depth;
					}
					half3 Visual_Albedo127_g129010 = Out_Albedo4_g129011;
					TVEGlobalData Data15_g129016 = Data204_g128736;
					float Out_Dummy15_g129016 = 0;
					float4 Out_CoatDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129016 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129016 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129016 = Data15_g129016.Dummy;
					Out_CoatDataRT15_g129016 = Data15_g129016.CoatDataRT;
					Out_PaintDataRT15_g129016 = Data15_g129016.PaintDataRT;
					Out_GlowDataRT15_g129016= Data15_g129016.GlowDataRT;
					Out_AtmoDataRT15_g129016= Data15_g129016.AtmoDataRT;
					Out_FadeDataRT15_g129016= Data15_g129016.FadeDataRT;
					Out_FormDataRT15_g129016 = Data15_g129016.FormDataRT;
					Out_FlowDataRT15_g129016 = Data15_g129016.FlowDataRT;
					}
					half4 Global_AtmoParams516_g129010 = Out_AtmoDataRT15_g129016;
					float4 temp_output_6_0_g129037 = Global_AtmoParams516_g129010;
					#ifdef TVE_DUMMY
					float4 staticSwitch14_g129037 = ( temp_output_6_0_g129037 + _WetnessElementMode );
					#else
					float4 staticSwitch14_g129037 = temp_output_6_0_g129037;
					#endif
					#ifdef TVE_WETNESS_ELEMENT
					float4 staticSwitch663_g129010 = staticSwitch14_g129037;
					#else
					float4 staticSwitch663_g129010 = TVE_AtmoParams;
					#endif
					float2 lerpResult1121_g129010 = lerp( float2( 1,1 ) , (( staticSwitch663_g129010 * TVE_IsEnabled )).yw , _WetnessGlobalValue);
					float2 break1123_g129010 = lerpResult1121_g129010;
					half Global_Wetness429_g129010 = break1123_g129010.x;
					half Wetness_Value1042_g129010 = ( _WetnessIntensityValue * Global_Wetness429_g129010 );
					half Wetness_VertMask1024_g129010 = 1.0;
					float temp_output_1043_0_g129010 = ( Wetness_Value1042_g129010 * Wetness_VertMask1024_g129010 );
					half Wetness_Mask866_g129010 = temp_output_1043_0_g129010;
					half Water_VertMask1094_g129010 = 1.0;
					half4 Visual_Masks536_g129010 = Out_Shader4_g129011;
					float lerpResult1013_g129010 = lerp( 1.0 , (Visual_Masks536_g129010).z , _WetnessWaterBaseValue);
					half Water_HeightMask782_g129010 = lerpResult1013_g129010;
					float clampResult17_g129023 = clamp( ( ( _WetnessWaterIntensityValue * Wetness_Mask866_g129010 * Water_VertMask1094_g129010 ) - Water_HeightMask782_g129010 ) , 0.0001 , 0.9999 );
					float temp_output_7_0_g129036 = _WetnessWaterBlendRemap.x;
					float temp_output_9_0_g129036 = ( clampResult17_g129023 - temp_output_7_0_g129036 );
					TVEModelData Data15_g129022 = Data16_g114311;
					float Out_Dummy15_g129022 = 0;
					float3 Out_PositionWS15_g129022 = float3( 0,0,0 );
					float3 Out_PositionWO15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWS15_g129022 = float3( 0,0,0 );
					float3 Out_PivotWO15_g129022 = float3( 0,0,0 );
					float3 Out_NormalWS15_g129022 = float3( 0,0,0 );
					float3 Out_ViewDirWS15_g129022 = float3( 0,0,0 );
					float4 Out_VertexData15_g129022 = float4( 0,0,0,0 );
					float4 Out_BoundsData15_g129022 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129022 = Data15_g129022.Dummy;
					Out_PositionWS15_g129022 = Data15_g129022.PositionWS;
					Out_PositionWO15_g129022 = Data15_g129022.PositionWO;
					Out_PivotWS15_g129022 = Data15_g129022.PivotWS;
					Out_PivotWO15_g129022 = Data15_g129022.PivotWO;
					Out_NormalWS15_g129022 = Data15_g129022.NormalWS;
					Out_ViewDirWS15_g129022 = Data15_g129022.ViewDirWS;
					Out_VertexData15_g129022 = Data15_g129022.VertexData;
					Out_BoundsData15_g129022 = Data15_g129022.BoundsData;
					}
					half3 Model_NormalWS798_g129010 = Out_NormalWS15_g129022;
					float temp_output_786_0_g129010 = saturate( (Model_NormalWS798_g129010).y );
					half Wetness_ProjMask790_g129010 = temp_output_786_0_g129010;
					half Water_Mask760_g129010 = ( saturate( ( ( temp_output_9_0_g129036 * _WetnessWaterBlendRemap.z ) + 0.0001 ) ) * Wetness_ProjMask790_g129010 );
					float3 lerpResult918_g129010 = lerp( Visual_Albedo127_g129010 , ( Visual_Albedo127_g129010 * (_WetnessWaterColor).rgb ) , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float3 staticSwitch946_g129010 = lerpResult918_g129010;
					#else
					float3 staticSwitch946_g129010 = Visual_Albedo127_g129010;
					#endif
					float3 lerpResult768_g129010 = lerp( staticSwitch946_g129010 , ( staticSwitch946_g129010 * staticSwitch946_g129010 ) , _WetnessContrastValue);
					float3 lerpResult651_g129010 = lerp( Visual_Albedo127_g129010 , lerpResult768_g129010 , Wetness_Mask866_g129010);
					#ifdef TVE_WETNESS
					float3 staticSwitch577_g129010 = lerpResult651_g129010;
					#else
					float3 staticSwitch577_g129010 = Visual_Albedo127_g129010;
					#endif
					half3 Final_Albedo493_g129010 = staticSwitch577_g129010;
					float3 In_Albedo3_g129012 = Final_Albedo493_g129010;
					float3 In_AlbedoRaw3_g129012 = Out_AlbedoRaw4_g129011;
					half2 Visual_Normal535_g129010 = Out_NormalTS4_g129011;
					float lerpResult877_g129010 = lerp( 1.0 , 0.0 , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch957_g129010 = ( Visual_Normal535_g129010 * lerpResult877_g129010 );
					#else
					float2 staticSwitch957_g129010 = Visual_Normal535_g129010;
					#endif
					float2 temp_cast_34 = (0.0).xx;
					UNITY_DECLARE_TEX2D_NOSAMPLER(Texture238_g129020) = _WetnessDropsTexRT;
					SamplerState Sampler238_g129020 = sampler_Linear_Repeat_Aniso8;
					float4 appendResult924_g129010 = (float4(_WetnessDropsTillingValue , _WetnessDropsTillingValue , 0.0 , 0.0));
					float4 temp_output_37_0_g129020 = appendResult924_g129010;
					half4 Coords238_g129020 = temp_output_37_0_g129020;
					half3 Model_PositionWO602_g129010 = Out_PositionWO15_g129022;
					float3 temp_output_279_0_g129020 = Model_PositionWO602_g129010;
					half3 WorldPosition238_g129020 = temp_output_279_0_g129020;
					half4 localSamplePlanar2D238_g129020 = SamplePlanar2D( Texture238_g129020 , Sampler238_g129020 , Coords238_g129020 , WorldPosition238_g129020 );
					float4 temp_output_1010_0_g129010 = localSamplePlanar2D238_g129020;
					half2 Rain_DropsNormal919_g129010 = (temp_output_1010_0_g129010).zw;
					float2 temp_output_903_0_g129010 = (Rain_DropsNormal919_g129010*2.0 + -1.0);
					half2 Rain_RingsNormal713_g129010 = (temp_output_1010_0_g129010).xy;
					float2 lerpResult904_g129010 = lerp( temp_output_903_0_g129010 , (Rain_RingsNormal713_g129010*2.0 + -1.0) , ( Water_Mask760_g129010 * Water_Mask760_g129010 ));
					#ifdef TVE_WETNESS_WATER
					float2 staticSwitch960_g129010 = lerpResult904_g129010;
					#else
					float2 staticSwitch960_g129010 = temp_output_903_0_g129010;
					#endif
					half2 Rain_Drops1002_g129010 = ( staticSwitch960_g129010 * _WetnessDropsIntensityValue * _WetnessDropsNormalValue );
					half3 Model_PositionWS823_g129010 = Out_PositionWS15_g129022;
					half Global_Rain955_g129010 = break1123_g129010.y;
					half Rain_Value1067_g129010 = Global_Rain955_g129010;
					half Rain_VertMask1108_g129010 = 1.0;
					half Rain_Mask999_g129010 = ( ( 1.0 - saturate( ( distance( _WorldSpaceCameraPos , Model_PositionWS823_g129010 ) / _WetnessDropsDistValue ) ) ) * Rain_Value1067_g129010 * Rain_VertMask1108_g129010 );
					half2 Normal_Planar45_g129019 = ( Rain_Drops1002_g129010 * Rain_Mask999_g129010 * Wetness_ProjMask790_g129010 );
					float2 break71_g129019 = Normal_Planar45_g129019;
					float3 appendResult72_g129019 = (float3(break71_g129019.x , 0.0 , break71_g129019.y));
					half2 Wetness_Normal526_g129010 = (mul( ase_worldToTangent, appendResult72_g129019 )).xy;
					#ifdef TVE_WETNESS_DROPS
					float2 staticSwitch583_g129010 = Wetness_Normal526_g129010;
					#else
					float2 staticSwitch583_g129010 = temp_cast_34;
					#endif
					#ifdef TVE_WETNESS
					float2 staticSwitch774_g129010 = ( staticSwitch957_g129010 + staticSwitch583_g129010 );
					#else
					float2 staticSwitch774_g129010 = Visual_Normal535_g129010;
					#endif
					half2 Final_Normal499_g129010 = staticSwitch774_g129010;
					float2 In_NormalTS3_g129012 = Final_Normal499_g129010;
					float3 In_NormalWS3_g129012 = Out_NormalWS4_g129011;
					float4 break658_g129010 = Visual_Masks536_g129010;
					float temp_output_935_0_g129010 = ( Wetness_Mask866_g129010 * _WetnessSmoothnessValue );
					float lerpResult941_g129010 = lerp( temp_output_935_0_g129010 , 2.0 , Water_Mask760_g129010);
					#ifdef TVE_WETNESS_WATER
					float staticSwitch959_g129010 = lerpResult941_g129010;
					#else
					float staticSwitch959_g129010 = temp_output_935_0_g129010;
					#endif
					float4 appendResult661_g129010 = (float4(break658_g129010.x , break658_g129010.y , break658_g129010.z , saturate( ( break658_g129010.w + staticSwitch959_g129010 ) )));
					#ifdef TVE_WETNESS
					float4 staticSwitch586_g129010 = appendResult661_g129010;
					#else
					float4 staticSwitch586_g129010 = Visual_Masks536_g129010;
					#endif
					half4 Final_Masks482_g129010 = staticSwitch586_g129010;
					float4 In_Shader3_g129012 = Final_Masks482_g129010;
					float4 In_Emissive3_g129012 = Out_Emissive4_g129011;
					float In_Grayscale3_g129012 = Out_Grayscale4_g129011;
					float In_Luminosity3_g129012 = Out_Luminosity4_g129011;
					float In_MultiMask3_g129012 = Out_MultiMask4_g129011;
					float In_AlphaClip3_g129012 = Out_AlphaClip4_g129011;
					float In_AlphaFade3_g129012 = Out_AlphaFade4_g129011;
					float3 In_Translucency3_g129012 = Out_Translucency4_g129011;
					float In_Transmission3_g129012 = Out_Transmission4_g129011;
					float In_Thickness3_g129012 = Out_Thickness4_g129011;
					float In_Diffusion3_g129012 = Out_Diffusion4_g129011;
					float In_Depth3_g129012 = Out_Depth4_g129011;
					{
					Data3_g129012.Dummy = In_Dummy3_g129012;
					Data3_g129012.Albedo = In_Albedo3_g129012;
					Data3_g129012.AlbedoRaw = In_AlbedoRaw3_g129012;
					Data3_g129012.NormalTS = In_NormalTS3_g129012;
					Data3_g129012.NormalWS = In_NormalWS3_g129012;
					Data3_g129012.Shader = In_Shader3_g129012;
					Data3_g129012.Emissive= In_Emissive3_g129012;
					Data3_g129012.MultiMask = In_MultiMask3_g129012;
					Data3_g129012.Grayscale = In_Grayscale3_g129012;
					Data3_g129012.Luminosity = In_Luminosity3_g129012;
					Data3_g129012.AlphaClip = In_AlphaClip3_g129012;
					Data3_g129012.AlphaFade = In_AlphaFade3_g129012;
					Data3_g129012.Translucency = In_Translucency3_g129012;
					Data3_g129012.Transmission = In_Transmission3_g129012;
					Data3_g129012.Thickness = In_Thickness3_g129012;
					Data3_g129012.Diffusion = In_Diffusion3_g129012;
					Data3_g129012.Depth = In_Depth3_g129012;
					}
					TVEVisualData Data4_g129043 = Data3_g129012;
					float Out_Dummy4_g129043 = 0;
					float3 Out_Albedo4_g129043 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129043 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129043 = float2( 0,0 );
					float3 Out_NormalWS4_g129043 = float3( 0,0,0 );
					float4 Out_Shader4_g129043 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129043 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129043 = 0;
					float Out_Grayscale4_g129043 = 0;
					float Out_Luminosity4_g129043 = 0;
					float Out_AlphaClip4_g129043 = 0;
					float Out_AlphaFade4_g129043 = 0;
					float3 Out_Translucency4_g129043 = float3( 0,0,0 );
					float Out_Transmission4_g129043 = 0;
					float Out_Thickness4_g129043 = 0;
					float Out_Diffusion4_g129043 = 0;
					float Out_Depth4_g129043 = 0;
					{
					Out_Dummy4_g129043 = Data4_g129043.Dummy;
					Out_Albedo4_g129043 = Data4_g129043.Albedo;
					Out_AlbedoRaw4_g129043 = Data4_g129043.AlbedoRaw;
					Out_NormalTS4_g129043 = Data4_g129043.NormalTS;
					Out_NormalWS4_g129043 = Data4_g129043.NormalWS;
					Out_Shader4_g129043 = Data4_g129043.Shader;
					Out_Emissive4_g129043= Data4_g129043.Emissive;
					Out_MultiMask4_g129043 = Data4_g129043.MultiMask;
					Out_Grayscale4_g129043 = Data4_g129043.Grayscale;
					Out_Luminosity4_g129043= Data4_g129043.Luminosity;
					Out_AlphaClip4_g129043 = Data4_g129043.AlphaClip;
					Out_AlphaFade4_g129043 = Data4_g129043.AlphaFade;
					Out_Translucency4_g129043 = Data4_g129043.Translucency;
					Out_Transmission4_g129043 = Data4_g129043.Transmission;
					Out_Thickness4_g129043 = Data4_g129043.Thickness;
					Out_Diffusion4_g129043 = Data4_g129043.Diffusion;
					Out_Depth4_g129043= Data4_g129043.Depth;
					}
					float3 temp_output_297_0_g129039 = Out_Albedo4_g129043;
					float3 In_Albedo3_g129054 = temp_output_297_0_g129039;
					float3 temp_output_297_23_g129039 = Out_AlbedoRaw4_g129043;
					float3 In_AlbedoRaw3_g129054 = temp_output_297_23_g129039;
					float2 In_NormalTS3_g129054 = Out_NormalTS4_g129043;
					float3 In_NormalWS3_g129054 = Out_NormalWS4_g129043;
					float4 In_Shader3_g129054 = Out_Shader4_g129043;
					float4 temp_cast_35 = (0.0).xxxx;
					half4 Visual_Emissive255_g129039 = Out_Emissive4_g129043;
					half Emissive_MeshMask221_g129039 = 1.0;
					half Emissive_Mask103_g129039 = 1.0;
					float temp_output_279_0_g129039 = ( Emissive_MeshMask221_g129039 * Emissive_Mask103_g129039 );
					float3 appendResult293_g129039 = (float3(temp_output_279_0_g129039 , temp_output_279_0_g129039 , temp_output_279_0_g129039));
					half3 Local_EmissiveColor278_g129039 = appendResult293_g129039;
					float3 temp_output_316_0_g129039 = (TVE_GlowParams).xyz;
					TVEGlobalData Data15_g129040 = Data204_g128736;
					float Out_Dummy15_g129040 = 0;
					float4 Out_CoatDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129040 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129040 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129040 = Data15_g129040.Dummy;
					Out_CoatDataRT15_g129040 = Data15_g129040.CoatDataRT;
					Out_PaintDataRT15_g129040 = Data15_g129040.PaintDataRT;
					Out_GlowDataRT15_g129040= Data15_g129040.GlowDataRT;
					Out_AtmoDataRT15_g129040= Data15_g129040.AtmoDataRT;
					Out_FadeDataRT15_g129040= Data15_g129040.FadeDataRT;
					Out_FormDataRT15_g129040 = Data15_g129040.FormDataRT;
					Out_FlowDataRT15_g129040 = Data15_g129040.FlowDataRT;
					}
					half4 Global_GlowParams179_g129039 = Out_GlowDataRT15_g129040;
					float3 temp_output_6_0_g129046 = (Global_GlowParams179_g129039).xyz;
					#ifdef TVE_DUMMY
					float3 staticSwitch14_g129046 = ( temp_output_6_0_g129046 + _EmissiveElementMode );
					#else
					float3 staticSwitch14_g129046 = temp_output_6_0_g129046;
					#endif
					#ifdef TVE_EMISSIVE_ELEMENT
					float3 staticSwitch228_g129039 = staticSwitch14_g129046;
					#else
					float3 staticSwitch228_g129039 = temp_output_316_0_g129039;
					#endif
					float3 lerpResult299_g129039 = lerp( float3( 1,1,1 ) , staticSwitch228_g129039 , ( _EmissiveGlobalValue * TVE_IsEnabled ));
					half3 Emissive_GlobalMask248_g129039 = lerpResult299_g129039;
					half3 Visual_AlbedoRaw306_g129039 = temp_output_297_23_g129039;
					float3 lerpResult307_g129039 = lerp( float3( 1,1,1 ) , Visual_AlbedoRaw306_g129039 , _EmissiveColorMode);
					half3 Local_EmissiveValue88_g129039 = ( _EmissiveIntensityValue * (_EmissiveColor).rgb * Emissive_GlobalMask248_g129039 * lerpResult307_g129039 );
					half3 Emissive_Blend260_g129039 = ( ( (Visual_Emissive255_g129039).xyz * Local_EmissiveColor278_g129039 ) * Local_EmissiveValue88_g129039 );
					float3 temp_output_3_0_g129045 = Emissive_Blend260_g129039;
					float temp_output_15_0_g129045 = _emissive_power_value;
					float3 temp_output_23_0_g129045 = ( temp_output_3_0_g129045 * temp_output_15_0_g129045 );
					half Local_EmissiveMask294_g129039 = temp_output_279_0_g129039;
					float4 appendResult295_g129039 = (float4(temp_output_23_0_g129045 , Local_EmissiveMask294_g129039));
					#ifdef TVE_EMISSIVE
					float4 staticSwitch129_g129039 = appendResult295_g129039;
					#else
					float4 staticSwitch129_g129039 = temp_cast_35;
					#endif
					half4 Final_Emissive184_g129039 = staticSwitch129_g129039;
					float4 In_Emissive3_g129054 = Final_Emissive184_g129039;
					float In_Grayscale3_g129054 = Out_Grayscale4_g129043;
					float In_Luminosity3_g129054 = Out_Luminosity4_g129043;
					float temp_output_297_11_g129039 = Out_MultiMask4_g129043;
					float In_MultiMask3_g129054 = temp_output_297_11_g129039;
					float In_AlphaClip3_g129054 = Out_AlphaClip4_g129043;
					float In_AlphaFade3_g129054 = Out_AlphaFade4_g129043;
					float3 In_Translucency3_g129054 = Out_Translucency4_g129043;
					float In_Transmission3_g129054 = Out_Transmission4_g129043;
					float In_Thickness3_g129054 = Out_Thickness4_g129043;
					float In_Diffusion3_g129054 = Out_Diffusion4_g129043;
					float In_Depth3_g129054 = Out_Depth4_g129043;
					{
					Data3_g129054.Dummy = In_Dummy3_g129054;
					Data3_g129054.Albedo = In_Albedo3_g129054;
					Data3_g129054.AlbedoRaw = In_AlbedoRaw3_g129054;
					Data3_g129054.NormalTS = In_NormalTS3_g129054;
					Data3_g129054.NormalWS = In_NormalWS3_g129054;
					Data3_g129054.Shader = In_Shader3_g129054;
					Data3_g129054.Emissive= In_Emissive3_g129054;
					Data3_g129054.MultiMask = In_MultiMask3_g129054;
					Data3_g129054.Grayscale = In_Grayscale3_g129054;
					Data3_g129054.Luminosity = In_Luminosity3_g129054;
					Data3_g129054.AlphaClip = In_AlphaClip3_g129054;
					Data3_g129054.AlphaFade = In_AlphaFade3_g129054;
					Data3_g129054.Translucency = In_Translucency3_g129054;
					Data3_g129054.Transmission = In_Transmission3_g129054;
					Data3_g129054.Thickness = In_Thickness3_g129054;
					Data3_g129054.Diffusion = In_Diffusion3_g129054;
					Data3_g129054.Depth = In_Depth3_g129054;
					}
					TVEVisualData Data4_g129058 = Data3_g129054;
					float Out_Dummy4_g129058 = 0;
					float3 Out_Albedo4_g129058 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129058 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129058 = float2( 0,0 );
					float3 Out_NormalWS4_g129058 = float3( 0,0,0 );
					float4 Out_Shader4_g129058 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129058 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129058 = 0;
					float Out_Grayscale4_g129058 = 0;
					float Out_Luminosity4_g129058 = 0;
					float Out_AlphaClip4_g129058 = 0;
					float Out_AlphaFade4_g129058 = 0;
					float3 Out_Translucency4_g129058 = float3( 0,0,0 );
					float Out_Transmission4_g129058 = 0;
					float Out_Thickness4_g129058 = 0;
					float Out_Diffusion4_g129058 = 0;
					float Out_Depth4_g129058 = 0;
					{
					Out_Dummy4_g129058 = Data4_g129058.Dummy;
					Out_Albedo4_g129058 = Data4_g129058.Albedo;
					Out_AlbedoRaw4_g129058 = Data4_g129058.AlbedoRaw;
					Out_NormalTS4_g129058 = Data4_g129058.NormalTS;
					Out_NormalWS4_g129058 = Data4_g129058.NormalWS;
					Out_Shader4_g129058 = Data4_g129058.Shader;
					Out_Emissive4_g129058= Data4_g129058.Emissive;
					Out_MultiMask4_g129058 = Data4_g129058.MultiMask;
					Out_Grayscale4_g129058 = Data4_g129058.Grayscale;
					Out_Luminosity4_g129058= Data4_g129058.Luminosity;
					Out_AlphaClip4_g129058 = Data4_g129058.AlphaClip;
					Out_AlphaFade4_g129058 = Data4_g129058.AlphaFade;
					Out_Translucency4_g129058 = Data4_g129058.Translucency;
					Out_Transmission4_g129058 = Data4_g129058.Transmission;
					Out_Thickness4_g129058 = Data4_g129058.Thickness;
					Out_Diffusion4_g129058 = Data4_g129058.Diffusion;
					Out_Depth4_g129058= Data4_g129058.Depth;
					}
					float3 In_Albedo3_g129056 = Out_Albedo4_g129058;
					float3 In_AlbedoRaw3_g129056 = Out_AlbedoRaw4_g129058;
					float2 In_NormalTS3_g129056 = Out_NormalTS4_g129058;
					float3 In_NormalWS3_g129056 = Out_NormalWS4_g129058;
					float4 In_Shader3_g129056 = Out_Shader4_g129058;
					float4 In_Emissive3_g129056 = Out_Emissive4_g129058;
					float In_Grayscale3_g129056 = Out_Grayscale4_g129058;
					float In_Luminosity3_g129056 = Out_Luminosity4_g129058;
					float temp_output_836_11_g129055 = Out_MultiMask4_g129058;
					float In_MultiMask3_g129056 = temp_output_836_11_g129055;
					half Visual_AlphaClip667_g129055 = Out_AlphaClip4_g129058;
					TVEGlobalData Data15_g129057 = Data204_g128736;
					float Out_Dummy15_g129057 = 0;
					float4 Out_CoatDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_PaintDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_GlowDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_AtmoDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FadeDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FormDataRT15_g129057 = float4( 0,0,0,0 );
					float4 Out_FlowDataRT15_g129057 = float4( 0,0,0,0 );
					{
					Out_Dummy15_g129057 = Data15_g129057.Dummy;
					Out_CoatDataRT15_g129057 = Data15_g129057.CoatDataRT;
					Out_PaintDataRT15_g129057 = Data15_g129057.PaintDataRT;
					Out_GlowDataRT15_g129057= Data15_g129057.GlowDataRT;
					Out_AtmoDataRT15_g129057= Data15_g129057.AtmoDataRT;
					Out_FadeDataRT15_g129057= Data15_g129057.FadeDataRT;
					Out_FormDataRT15_g129057 = Data15_g129057.FormDataRT;
					Out_FlowDataRT15_g129057 = Data15_g129057.FlowDataRT;
					}
					half4 Global_FadeParams516_g129055 = Out_FadeDataRT15_g129057;
					float temp_output_6_0_g129064 = saturate( (Global_FadeParams516_g129055).w );
					#ifdef TVE_DUMMY
					float staticSwitch14_g129064 = ( temp_output_6_0_g129064 + _CutoutElementMode );
					#else
					float staticSwitch14_g129064 = temp_output_6_0_g129064;
					#endif
					#ifdef TVE_CUTOUT_ELEMENT
					float staticSwitch663_g129055 = staticSwitch14_g129064;
					#else
					float staticSwitch663_g129055 = TVE_FadeParams.w;
					#endif
					float lerpResult843_g129055 = lerp( 1.0 , ( staticSwitch663_g129055 * TVE_IsEnabled ) , _CutoutGlobalValue);
					half Local_GlobalMask429_g129055 = lerpResult843_g129055;
					half Local_AlphaMask814_g129055 = 1.0;
					half Local_NoiseMask678_g129055 = 1.0;
					half Local_VertMask766_g129055 = 1.0;
					half Local_MultiMask685_g129055 = 1.0;
					float lerpResult728_g129055 = lerp( Visual_AlphaClip667_g129055 , min( Visual_AlphaClip667_g129055 , ( -0.001 - ( ( _CutoutIntensityValue * Local_GlobalMask429_g129055 ) - ( Local_AlphaMask814_g129055 * Local_NoiseMask678_g129055 * Local_VertMask766_g129055 ) ) ) ) , Local_MultiMask685_g129055);
					half Local_AlphaClip784_g129055 = lerpResult728_g129055;
					#ifdef TVE_CUTOUT
					float staticSwitch577_g129055 = Local_AlphaClip784_g129055;
					#else
					float staticSwitch577_g129055 = Visual_AlphaClip667_g129055;
					#endif
					half Final_AlphaClip795_g129055 = staticSwitch577_g129055;
					float In_AlphaClip3_g129056 = Final_AlphaClip795_g129055;
					float In_AlphaFade3_g129056 = Out_AlphaFade4_g129058;
					float3 In_Translucency3_g129056 = Out_Translucency4_g129058;
					float In_Transmission3_g129056 = Out_Transmission4_g129058;
					float In_Thickness3_g129056 = Out_Thickness4_g129058;
					float In_Diffusion3_g129056 = Out_Diffusion4_g129058;
					float In_Depth3_g129056 = Out_Depth4_g129058;
					{
					Data3_g129056.Dummy = In_Dummy3_g129056;
					Data3_g129056.Albedo = In_Albedo3_g129056;
					Data3_g129056.AlbedoRaw = In_AlbedoRaw3_g129056;
					Data3_g129056.NormalTS = In_NormalTS3_g129056;
					Data3_g129056.NormalWS = In_NormalWS3_g129056;
					Data3_g129056.Shader = In_Shader3_g129056;
					Data3_g129056.Emissive= In_Emissive3_g129056;
					Data3_g129056.MultiMask = In_MultiMask3_g129056;
					Data3_g129056.Grayscale = In_Grayscale3_g129056;
					Data3_g129056.Luminosity = In_Luminosity3_g129056;
					Data3_g129056.AlphaClip = In_AlphaClip3_g129056;
					Data3_g129056.AlphaFade = In_AlphaFade3_g129056;
					Data3_g129056.Translucency = In_Translucency3_g129056;
					Data3_g129056.Transmission = In_Transmission3_g129056;
					Data3_g129056.Thickness = In_Thickness3_g129056;
					Data3_g129056.Diffusion = In_Diffusion3_g129056;
					Data3_g129056.Depth = In_Depth3_g129056;
					}
					TVEVisualData Data4_g129098 = Data3_g129056;
					float Out_Dummy4_g129098 = 0;
					float3 Out_Albedo4_g129098 = float3( 0,0,0 );
					float3 Out_AlbedoRaw4_g129098 = float3( 0,0,0 );
					float2 Out_NormalTS4_g129098 = float2( 0,0 );
					float3 Out_NormalWS4_g129098 = float3( 0,0,0 );
					float4 Out_Shader4_g129098 = float4( 0,0,0,0 );
					float4 Out_Emissive4_g129098 = float4( 0,0,0,0 );
					float Out_MultiMask4_g129098 = 0;
					float Out_Grayscale4_g129098 = 0;
					float Out_Luminosity4_g129098 = 0;
					float Out_AlphaClip4_g129098 = 0;
					float Out_AlphaFade4_g129098 = 0;
					float3 Out_Translucency4_g129098 = float3( 0,0,0 );
					float Out_Transmission4_g129098 = 0;
					float Out_Thickness4_g129098 = 0;
					float Out_Diffusion4_g129098 = 0;
					float Out_Depth4_g129098 = 0;
					{
					Out_Dummy4_g129098 = Data4_g129098.Dummy;
					Out_Albedo4_g129098 = Data4_g129098.Albedo;
					Out_AlbedoRaw4_g129098 = Data4_g129098.AlbedoRaw;
					Out_NormalTS4_g129098 = Data4_g129098.NormalTS;
					Out_NormalWS4_g129098 = Data4_g129098.NormalWS;
					Out_Shader4_g129098 = Data4_g129098.Shader;
					Out_Emissive4_g129098= Data4_g129098.Emissive;
					Out_MultiMask4_g129098 = Data4_g129098.MultiMask;
					Out_Grayscale4_g129098 = Data4_g129098.Grayscale;
					Out_Luminosity4_g129098= Data4_g129098.Luminosity;
					Out_AlphaClip4_g129098 = Data4_g129098.AlphaClip;
					Out_AlphaFade4_g129098 = Data4_g129098.AlphaFade;
					Out_Translucency4_g129098 = Data4_g129098.Translucency;
					Out_Transmission4_g129098 = Data4_g129098.Transmission;
					Out_Thickness4_g129098 = Data4_g129098.Thickness;
					Out_Diffusion4_g129098 = Data4_g129098.Diffusion;
					Out_Depth4_g129098= Data4_g129098.Depth;
					}
					float temp_output_3_0_g129100 = Out_AlphaClip4_g129098;
					float Alpha20_g129100 = temp_output_3_0_g129100;
					float temp_output_15_0_g129100 = 0.5;
					float Treshold20_g129100 = temp_output_15_0_g129100;
					{
					#if defined (TVE_ALPHA_CLIP) || defined (TVE_CUTOUT) || defined (TVE_GLANCING) || defined (TVE_DITHER)
					clip(Alpha20_g129100 - Treshold20_g129100);
					#endif
					}
					

					o.Alpha = Alpha20_g129100;

					#if defined( ASE_DEPTH_WRITE_ON )
						float DeviceDepth = IN.pos.z;
					#endif

					#ifdef _ALPHATEST_SHADOW_ON
						if (unity_LightShadowBias.z != 0.0)
							clip(o.Alpha - AlphaClipThresholdShadow);
						#ifdef _ALPHATEST_ON
						else
							clip(o.Alpha - AlphaClipThreshold);
						#endif
					#else
						#ifdef _ALPHATEST_ON
							clip(o.Alpha - AlphaClipThreshold);
						#endif
					#endif

					#if defined( CAN_SKIP_VPOS )
					float2 vpos = IN.pos;
					#endif

					#ifdef UNITY_STANDARD_USE_DITHER_MASK
						half alphaRef = tex3D(_DitherMaskLOD, float3(vpos.xy*0.25,o.Alpha*0.9375)).a;
						clip(alphaRef - 0.01);
					#endif

					#if defined( ASE_DEPTH_WRITE_ON )
						outputDepth = DeviceDepth;
					#endif

					SHADOW_CASTER_FRAGMENT(IN)
				}
			ENDCG
		}
		
	}
	CustomEditor "TheVisualEngine.MaterialGUI"
	
	Fallback Off
}
/*ASEBEGIN
Version=19802
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1046;-4352,-384;Inherit;False;Block Model;468;;114306;7ad7765e793a6714babedee0033c36e9;14,240,0,290,0,291,0,289,0,181,0,183,0,185,0,188,0,190,0,184,0,192,0,189,0,300,0,193,0;10;102;FLOAT3;0,0,0;False;163;FLOAT3;0,0,0;False;186;FLOAT3;0,0,0;False;187;FLOAT3;0,0,0;False;166;FLOAT3;0,0,0;False;164;FLOAT3;0,0,0;False;301;FLOAT3;0,0,0;False;167;FLOAT4;0,0,0,0;False;172;FLOAT4;0,0,0,0;False;175;FLOAT4;0,0,0,0;False;2;OBJECT;128;OBJECT;314
Node;AmplifyShaderEditor.RegisterLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;799;-4032,-320;Half;False;Model Frag;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;805;-3584,-384;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1085;-3328,-384;Inherit;False;Block Global;31;;128736;212e17d4006dc88449d56ce0340cb5ff;17,315,0,311,1,317,1,388,1,321,1,398,1,404,0,337,0,282,0,396,0,283,0,285,0,276,0,349,0,402,0,385,0,308,0;1;206;OBJECT;0,0,0,0;False;1;OBJECT;151
Node;AmplifyShaderEditor.RegisterLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;807;-3008,-384;Half;False;Global Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;816;-1536,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1084;-1536,-384;Inherit;False;Block Terrain Layers;75;;128810;ef8fd3ec282e419478dcf625231d8508;0;0;1;OBJECT;9091
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;820;-1152,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1069;-1152,-384;Inherit;False;Block Tinting;262;;128924;9f39e156ea8d89e4997ea2a1e194137e;10,352,0,416,1,414,1,407,1,400,0,334,1,336,1,339,0,355,0,344,0;4;198;OBJECT;0,0,0,0;False;223;OBJECT;0,0,0,0;False;207;OBJECT;0,0,0,0;False;346;FLOAT;1;False;1;OBJECT;204
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;825;-768,-192;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1070;-768,-384;Inherit;False;Block Dryness;292;;128949;f05795de23f951c45bb73c8b4321e4b7;10,398,0,510,0,507,1,504,1,482,0,400,1,403,1,405,0,442,0,410,0;4;279;OBJECT;0,0,0,0;False;297;OBJECT;0,0,0,0;False;281;OBJECT;0,0,0,0;False;409;FLOAT;1;False;1;OBJECT;346
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;824;-768,-256;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;827;-384,-192;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;828;-384,-256;Inherit;False;799;Model Frag;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1071;-384,-384;Inherit;False;Block Overlay;325;;128973;8ae9c8285a7817844a51243251284d21;11,813,0,821,1,819,1,942,1,940,1,944,0,826,1,823,1,828,0,844,0,447,0;4;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;445;FLOAT;1;False;1;OBJECT;566
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;835;0,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1072;0,-384;Inherit;False;Block Wetness;373;;129010;52c5a1f52507fc44e926833b126e7855;10,850,0,1124,1,1120,1,1075,0,945,1,930,1,857,1,1092,0,851,1,1107,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.RegisterLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;804;-4032,-384;Half;False;Model Vert;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1007;384,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1073;384,-384;Inherit;False;Block Emissive;435;;129039;64497f287b9096b43b688b52b4a0bf20;6,282,0,273,1,319,1,312,1,264,0,267,0;3;146;OBJECT;0,0,0,0;False;148;OBJECT;0,0,0,0;False;178;OBJECT;0,0,0,0;False;1;OBJECT;183
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;800;-2560,-256;Inherit;False;807;Global Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;801;-2560,-384;Inherit;False;804;Model Vert;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1074;768,-384;Inherit;False;Block Cutout;415;;129055;866b4a5fe67e7f34085520e1bb5be2b7;8,775,0,846,1,840,1,777,0,815,0,853,0,779,0,817,0;3;572;OBJECT;0,0,0,0;False;596;OBJECT;0,0,0,0;False;600;OBJECT;0,0,0,0;False;1;OBJECT;566
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1077;-2304,-384;Inherit;False;Block Terrain Conform;459;;129072;96b819750ac2c854b90e8e52674e7c45;0;2;146;OBJECT;0,0,0,0;False;212;OBJECT;0,0,0,0;False;1;OBJECT;128
Node;AmplifyShaderEditor.RegisterLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1083;-1984,-384;Half;False;Model Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RegisterLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;836;1088,-384;Half;False;Visual Data;-1;True;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;837;1792,-384;Inherit;False;836;Visual Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.GetLocalVarNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;810;1792,-320;Inherit;False;1083;Model Data;1;0;OBJECT;;False;1;OBJECT;0
Node;AmplifyShaderEditor.RangedFloatNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1026;1792,-640;Half;False;Property;_IsTerrainShader;_IsTerrainShader;480;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;785;2560,-640;Inherit;False;Base Compile;-1;;129079;e67c8238031dbf04ab79a5d4d63d1b4f;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1027;2016,-640;Half;False;Property;_IsSimpleShader;_IsSimpleShader;481;1;[HideInInspector];Create;True;0;2;Opaque;0;Transparent;1;0;True;0;False;1;1;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.FunctionNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;1086;2048,-384;Inherit;False;Block Render Terrain;0;;129094;494080da1e9aade47a313fe971224c33;0;3;17;OBJECT;;False;19;OBJECT;;False;115;FLOAT;0;False;15;FLOAT3;21;FLOAT3;22;FLOAT3;34;FLOAT3;77;FLOAT;26;FLOAT;27;FLOAT;109;FLOAT;108;FLOAT;72;FLOAT;28;FLOAT;71;FLOAT3;37;FLOAT3;30;FLOAT3;32;FLOAT4;33
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;777;1728,-384;Float;False;False;-1;2;AmplifyShaderEditor.MaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ExtraPrePass;0;0;ExtraPrePass;5;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;True;True;0;False;;0;False;;True;1;LightMode=ForwardBase;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;778;2560,-384;Float;False;True;-1;2;TheVisualEngine.MaterialGUI;0;14;BOXOPHOBIC/The Visual Engine/Landscape/Terrain Simple Lit;28cd5599e02859647ae1798e4fcaef6c;True;ForwardBase;0;1;ForwardBase;17;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;4;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=True=DisableBatching;TerrainCompatible=True;True;5;False;0;False;True;1;1;False;;0;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=ForwardBase;False;False;0;;0;0;Standard;42;Category;1;638373972442289626;Workflow;2;638539631429617125;Surface;0;0;  Blend;0;0;  Dither Shadows;1;0;Two Sided;1;0;Deferred Pass;0;638541445037211954;Normal Space,InvertActionOnDeselection;0;0;Transmission;0;0;  Transmission Shadow;0.5,False,;0;Translucency;0;0;  Translucency Strength;1,False,;0;  Normal Distortion;0.5,False,;0;  Scattering;2,False,;0;  Direct;0.9,False,;0;  Ambient;0.1,False,;0;  Shadow;0.5,False,;0;Cast Shadows;1;0;Receive Shadows;1;0;Receive Specular;1;0;GPU Instancing;0;638536066641770925;LOD CrossFade;1;0;Built-in Fog;1;0;Ambient Light;1;0;Meta Pass;1;0;Add Pass;1;0;Override Baked GI;0;0;Write Depth;0;0;Extra Pre Pass;0;0;Tessellation;0;0;  Phong;0;0;  Strength;0.5,False,;0;  Type;0;0;  Tess;16,False,;0;  Min;10,False,;0;  Max;25,False,;0;  Edge Length;16,False,;0;  Max Displacement;25,False,;0;Fwd Specular Highlights Toggle;0;0;Fwd Reflections Toggle;0;0;Disable Batching;1;638373943661845087;Vertex Position,InvertActionOnDeselection;0;638373943651339933;0;6;False;True;True;False;True;True;True;;True;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;779;-480,0;Float;False;False;-1;2;AmplifyShaderEditor.MaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ForwardAdd;0;2;ForwardAdd;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;True;4;1;False;;1;False;;0;1;False;;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;True;1;LightMode=ForwardAdd;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;780;-480,0;Float;False;False;-1;2;AmplifyShaderEditor.MaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Deferred;0;3;Deferred;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Deferred;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;781;-480,0;Float;False;False;-1;2;AmplifyShaderEditor.MaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;Meta;0;4;Meta;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;2;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;LightMode=Meta;False;False;0;;0;0;Standard;0;False;0
Node;AmplifyShaderEditor.TemplateMultiPassMasterNode, AmplifyShaderEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null;782;-480,0;Float;False;False;-1;2;AmplifyShaderEditor.MaterialInspector;0;15;New Amplify Shader;28cd5599e02859647ae1798e4fcaef6c;True;ShadowCaster;0;5;ShadowCaster;0;False;True;0;1;False;;0;False;;0;1;False;;0;False;;True;0;False;;0;False;;False;False;False;False;False;False;False;False;False;True;0;False;;False;True;0;False;;False;True;True;True;True;True;0;False;;False;False;False;False;False;False;False;True;False;0;False;;255;False;;255;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;0;False;;False;True;1;False;;True;3;False;;False;True;3;RenderType=Opaque=RenderType;Queue=Geometry=Queue=0;DisableBatching=False=DisableBatching;True;2;False;0;False;False;False;False;False;False;False;False;False;False;False;False;True;0;False;;False;False;False;False;False;False;False;False;False;False;False;False;False;True;1;False;;True;3;False;;False;True;1;LightMode=ShadowCaster;False;False;0;;0;0;Standard;0;False;0
WireConnection;799;0;1046;314
WireConnection;1085;206;805;0
WireConnection;807;0;1085;151
WireConnection;1069;198;1084;9091
WireConnection;1069;207;816;0
WireConnection;1070;279;1069;204
WireConnection;1070;281;820;0
WireConnection;1071;572;1070;346
WireConnection;1071;596;824;0
WireConnection;1071;600;825;0
WireConnection;1072;572;1071;566
WireConnection;1072;596;828;0
WireConnection;1072;600;827;0
WireConnection;804;0;1046;128
WireConnection;1073;146;1072;566
WireConnection;1073;178;835;0
WireConnection;1074;572;1073;183
WireConnection;1074;600;1007;0
WireConnection;1077;146;801;0
WireConnection;1077;212;800;0
WireConnection;1083;0;1077;128
WireConnection;836;0;1074;566
WireConnection;1086;17;837;0
WireConnection;1086;19;810;0
WireConnection;778;0;1086;21
WireConnection;778;1;1086;22
WireConnection;778;20;1086;109
WireConnection;778;21;1086;108
WireConnection;778;2;1086;34
WireConnection;778;7;1086;28
WireConnection;778;15;1086;30
WireConnection;778;16;1086;32
WireConnection;778;17;1086;33
ASEEND*/
//CHKSM=97315101079413DF17621ABBDF45EB68444E4477